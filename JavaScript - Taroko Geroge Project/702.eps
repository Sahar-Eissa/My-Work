%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 34_111.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Ленка
%%CreationDate: 1/14/2014
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>3</photoshop:ColorMode>
         <photoshop:ICCProfile>sRGB IEC61966-2.1</photoshop:ICCProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2014-01-14T16:28+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:MetadataDate>2014-01-14T16:28+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-01-14T16:28+03:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FUDq+uaRo9v9Y1O7jtYv2S53YjsqirMfkMjKQHNIBLF2/Mie7J/Qeh3N7F+zczstrEw8VLciw+jK&#xA;jn7gz8PvaPm/zonxnQ7aVe0SXfF9v8pk474PGl3J4B3o3RvzD0m9vV06/hl0nUmNEt7qgVz4RyD4&#xA;W9ule2TjlB25MTAhlWWsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh17zv5d0OYW95cF7thUWsCmWU&#xA;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&#xA;RUu5Hd2NWbLYwEeTAklMckh2KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:9647AC810E7DE311ACE1E2EC897B9C0A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9647AC810E7DE311ACE1E2EC897B9C0A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ADC2F75DE772E311BD2DEA85BF726320</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9447AC810E7DE311ACE1E2EC897B9C0A</stRef:instanceID>
            <stRef:documentID>xmp.did:9447AC810E7DE311ACE1E2EC897B9C0A</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:ADC2F75DE772E311BD2DEA85BF726320</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:changed>/</stEvt:changed>
                  <stEvt:instanceID>xmp.iid:ADC2F75DE772E311BD2DEA85BF726320</stEvt:instanceID>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:when>2014-01-01T16:19:39+03:00</stEvt:when>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:changed>/</stEvt:changed>
                  <stEvt:instanceID>xmp.iid:AEC2F75DE772E311BD2DEA85BF726320</stEvt:instanceID>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:when>2014-01-01T17:13:54+03:00</stEvt:when>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.photoshop</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:changed>/</stEvt:changed>
                  <stEvt:instanceID>xmp.iid:14D886E4237AE311B929F03C678A2E7D</stEvt:instanceID>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Windows</stEvt:softwareAgent>
                  <stEvt:when>2014-01-10T21:21:21+03:00</stEvt:when>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to image/jpeg</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>derived</stEvt:action>
                  <stEvt:parameters>converted from application/vnd.adobe.photoshop to image/jpeg</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:changed>/</stEvt:changed>
                  <stEvt:instanceID>xmp.iid:15D886E4237AE311B929F03C678A2E7D</stEvt:instanceID>
                  <stEvt:softwareAgent>Adobe Photoshop CS5.1 Windows</stEvt:softwareAgent>
                  <stEvt:when>2014-01-10T21:21:21+03:00</stEvt:when>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9347AC810E7DE311ACE1E2EC897B9C0A</stEvt:instanceID>
                  <stEvt:when>2014-01-14T14:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9447AC810E7DE311ACE1E2EC897B9C0A</stEvt:instanceID>
                  <stEvt:when>2014-01-14T14:27:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9647AC810E7DE311ACE1E2EC897B9C0A</stEvt:instanceID>
                  <stEvt:when>2014-01-14T16:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
            <stDim:w>2000.000000</stDim:w>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:MicrosoftPhoto="http://ns.microsoft.com/photo/1.0">
         <MicrosoftPhoto:LastKeywordXMP>
            <rdf:Bag>
               <rdf:li>background</rdf:li>
               <rdf:li>bag</rdf:li>
               <rdf:li>blouse</rdf:li>
               <rdf:li>blue</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>clothes</rdf:li>
               <rdf:li>clothing</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>drawing</rdf:li>
               <rdf:li>dress</rdf:li>
               <rdf:li>education</rdf:li>
               <rdf:li>english</rdf:li>
               <rdf:li>fashion</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>grey</rdf:li>
               <rdf:li>handdrawn</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>knitted</rdf:li>
               <rdf:li>look</rdf:li>
               <rdf:li>new</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>rucksack</rdf:li>
               <rdf:li>school</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>shirt</rdf:li>
               <rdf:li>shoes</rdf:li>
               <rdf:li>sketch</rdf:li>
               <rdf:li>skirt</rdf:li>
               <rdf:li>student</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>tartan</rdf:li>
               <rdf:li>tie</rdf:li>
               <rdf:li>uniform</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>vest</rdf:li>
               <rdf:li>waistcoat</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>woman</rdf:li>
            </rdf:Bag>
         </MicrosoftPhoto:LastKeywordXMP>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1624.58 1337.48 mo
1602.37 1347.25 1583.73 1370.73 1586.01 1404.95 cv
1588.29 1439.17 1618.58 1469.78 1671.98 1474.96 cv
1725.38 1480.14 1768.05 1464.48 1794.69 1452.76 cv
1821.32 1441.04 1860.25 1410.51 1864.16 1377.6 cv
1868.08 1344.71 1854.81 1315.96 1825.13 1295.98 cv
1795.45 1276.01 1759.45 1267.84 1726.23 1275.92 cv
1693 1283.99 1657.68 1300.78 1624.58 1337.48 cv
cp
.647059 .607843 .529412 rgb
f
1606.95 1353.03 mo
1597.38 1358.9 1580.57 1387.99 1602.21 1415.89 cv
1614.46 1431.7 1652.95 1439.11 1685.85 1437.38 cv
1726.06 1435.27 1760.64 1428.15 1800.23 1394.52 cv
1837.72 1362.67 1846 1313.29 1803.54 1288.34 cv
1761.07 1263.39 1700.71 1280.29 1664.27 1304.43 cv
1627.82 1328.57 1628.56 1339.78 1606.95 1353.03 cv
cp
.729412 .705882 .647059 rgb
f
1625.42 1383.99 mo
1629.14 1387.85 1633.74 1391.01 1638.43 1393.41 cv
1639.17 1393.79 1639.91 1394.13 1640.66 1394.44 cv
1634.33 1392.83 1628.9 1389.58 1625.42 1383.99 cv
cp
1755.36 1294.67 mo
1738.74 1279.56 1711.84 1282.17 1692.14 1287.86 cv
1670.5 1294.12 1647.37 1310.31 1636.34 1323.44 cv
1633.68 1326.62 1630.84 1330.16 1628.26 1334 cv
1618.36 1342.68 1613.37 1358.24 1612.35 1370.28 cv
1610.47 1392.35 1630.23 1409.25 1649.84 1413.7 cv
1673.59 1419.09 1702.15 1404.91 1722.59 1394.29 cv
1740.93 1384.77 1760.71 1369.24 1769.37 1349.97 cv
1778.86 1328.91 1771.87 1309.68 1755.36 1294.67 cv
cp
.890196 .858824 .796078 rgb
f
1744.17 1464.98 mo
1697.99 1476.09 1633.85 1476.45 1602.44 1434.38 cv
1579.83 1404.09 1588.66 1369.33 1614.32 1349.16 cv
1607.2 1364.25 1607.29 1380.59 1622.41 1395.75 cv
1623.53 1396.87 1625.32 1395.43 1624.31 1394.14 cv
1610.13 1375.83 1613.13 1358.19 1624.5 1342.41 cv
1625.94 1338.44 1639.46 1326.31 1641.31 1324.73 cv
1664.51 1305.05 1697.29 1290 1715.65 1282.95 cv
1772.69 1261.04 1870.32 1303.6 1859.81 1374.05 cv
1852.06 1426.03 1788.88 1454.23 1744.17 1464.98 cv
cp
1779.1 1273.09 mo
1734.21 1261.23 1694.47 1280.19 1657.36 1304.54 cv
1646.78 1311.48 1634.89 1321.04 1625.66 1331.99 cv
1599.64 1343.44 1580.73 1365.54 1580.29 1395.35 cv
1579.93 1419.77 1593.95 1442.85 1612.83 1457.34 cv
1650.93 1486.55 1708.16 1483.06 1751.91 1471.8 cv
1795.47 1460.6 1843.29 1435.85 1862.61 1392.91 cv
1889.26 1333.74 1830.57 1286.7 1779.1 1273.09 cv
cp
.529412 .466667 .345098 rgb
f
1637.62 1316.58 mo
1637.21 1317.23 1636.65 1317.82 1636.14 1318.41 cv
1636.74 1317.87 1637.39 1317.42 1638.1 1317.17 cv
1638.69 1316.94 1637.98 1316.02 1637.62 1316.58 cv
cp
f
1626.5 1330.04 mo
1626.16 1330.35 1626.64 1330.92 1626.97 1330.59 cv
1628.7 1328.87 1630.12 1326.97 1631.47 1324.93 cv
1632.19 1323.84 1633 1322.43 1633.91 1321.08 cv
1633.43 1321.63 1632.91 1322.17 1632.49 1322.74 cv
1630.62 1325.32 1628.87 1327.87 1626.5 1330.04 cv
cp
f
1633.91 1321.08 mo
1634.68 1320.21 1635.38 1319.29 1636.14 1318.41 cv
1635.31 1319.16 1634.59 1320.09 1633.91 1321.08 cv
cp
f
1518.41 117.816 mo
1504.79 114.41 1436.72 104.203 1399.29 107.604 cv
1361.84 111.006 1324.41 107.604 1286.97 189.29 cv
1249.53 270.974 1239.31 345.854 1249.53 369.679 cv
1259.73 393.498 1327.82 441.147 1375.45 475.186 cv
1423.11 509.225 1440.13 522.838 1491.18 522.838 cv
1542.23 522.838 1620.5 499.004 1685.18 461.573 cv
1746.44 444.561 1797.5 424.135 1807.71 390.1 cv
1817.92 356.063 1811.12 339.047 1797.5 284.589 cv
1783.88 230.132 1800.9 128.021 1746.44 90.5869 cv
1691.99 53.1494 1709 83.7803 1674.96 63.3608 cv
1640.93 42.939 1610.3 39.5342 1583.07 66.7612 cv
1555.84 93.9902 1518.41 117.816 1518.41 117.816 cv
cp
.647059 .607843 .529412 rgb
f
1647.59 52.1802 mo
1645.44 50.54 1643.09 52.7666 1643.06 54.9961 cv
1635.9 52.5049 1627.96 51.5757 1618.9 52.7783 cv
1590.4 56.5381 1569.72 82.311 1546.9 98.439 cv
1547.13 99.4009 1547.03 100.468 1546.26 101.425 cv
1535.52 114.833 1518.75 119.162 1503.06 112.757 cv
1492.96 113.176 1482.52 112.384 1472.16 111.25 cv
1465.73 110.731 1459.28 110.081 1452.86 109.085 cv
1452.58 109.035 1452.41 108.915 1452.17 108.823 cv
1443.72 107.771 1435.52 106.828 1427.88 106.526 cv
1393.46 105.175 1354.94 105.772 1324.97 124.638 cv
1290.06 146.627 1273.55 204.781 1268.68 243.707 cv
1264.54 276.729 1278.23 295.146 1304.98 286.576 cv
1299.12 305.482 1269.46 315.721 1273.14 340.595 cv
1275.05 353.563 1291.55 363.935 1301.32 369.924 cv
1322.04 382.64 1330.67 407.234 1350.68 420.86 cv
1361.78 428.417 1374.42 437.489 1388.42 435.33 cv
1393.06 434.612 1398.75 429.182 1402.52 426.866 cv
1417.51 417.691 1428.56 427.87 1445.22 429.233 cv
1456.47 430.152 1482.94 433.55 1492.86 432.637 cv
1538.07 422.074 1567.76 363.371 1564.45 316.917 cv
1564.39 316.062 1564.66 315.428 1565.06 314.915 cv
1564.75 308.774 1564.51 302.63 1564.45 296.497 cv
1564.42 292.244 1571.01 292.244 1571.05 296.497 cv
1571.36 331.07 1576.58 365.917 1572.32 398.943 cv
1576.49 393.521 1580.5 387.906 1584.4 382.099 cv
1595.96 364.894 1602.05 345.596 1604.48 325.184 cv
1605.95 312.919 1603.75 300.265 1602.93 288.038 cv
1601.67 269.104 1619.18 273.859 1632.42 274.521 cv
1638.31 274.819 1642.44 269.576 1642.77 264.166 cv
1644.07 243.177 1641.69 217.678 1666.8 209.306 cv
1676.52 206.068 1687.55 208.745 1697.48 206.444 cv
1716.24 202.095 1723.68 189.858 1727.2 171.538 cv
1736.78 121.594 1681.68 78.1616 1647.59 52.1802 cv
cp
.729412 .705882 .647059 rgb
f
1503.33 122.025 mo
1446.9 109.573 1382.68 88.4517 1331.59 125.635 cv
1298.64 149.607 1259.81 196.89 1273.37 240.508 cv
1274.94 245.528 1281.28 247.424 1285.13 243.61 cv
1300.71 228.15 1316.41 197.279 1338.34 190.56 cv
1352.86 186.105 1360.5 177.393 1371.71 166.827 cv
1391.08 148.565 1440.97 127.136 1467.5 135.392 cv
1470.79 136.416 1473.52 134.136 1474.52 131.356 cv
1478.06 131.151 1481.63 130.83 1485.44 130.198 cv
1487.96 129.778 1488.75 127.146 1488.08 125.039 cv
1493.25 124.947 1498.35 124.582 1503.33 123.814 cv
1504.25 123.671 1504.18 122.214 1503.33 122.025 cv
cp
.890196 .858824 .796078 rgb
f
1645.55 82.231 mo
1640.67 78.978 1634.63 77.3936 1628 77.0376 cv
1620.8 76.0137 1613.8 76.5864 1607.34 78.939 cv
1604.31 79.5684 1601.3 80.2949 1598.38 81.1162 cv
1582.34 85.6221 1566.97 93.6411 1554.19 104.256 cv
1524.96 128.519 1493.02 137.57 1456.88 146.451 cv
1406.6 158.817 1383.29 190.109 1372.09 239.14 cv
1361.13 287.102 1404.78 309.447 1442.67 285.037 cv
1448.81 281.078 1452.47 275.238 1456.51 269.414 cv
1459.21 264.555 1461.93 259.721 1464.71 254.905 cv
1479.21 229.465 1495.63 245.697 1511.6 245.714 cv
1527.69 245.728 1545.36 243.151 1554.37 227.859 cv
1558.36 221.095 1560.89 213.941 1563.58 206.579 cv
1570 188.967 1574.87 193.175 1589.12 196.417 cv
1611.56 201.527 1630.74 189.264 1652.47 185.115 cv
1729.93 170.344 1691.35 102.452 1645.55 82.231 cv
cp
f
1523.65 340.085 mo
1521.35 337.072 1518.44 335.49 1514.56 336.391 cv
1489.17 342.273 1466.4 331.001 1442.55 324.008 cv
1420.25 317.47 1401.21 322.658 1378.93 325.346 cv
1345.84 329.33 1319.35 306.003 1296.47 339.34 cv
1295.63 340.555 1296.07 341.825 1296.96 342.646 cv
1292.45 349.885 1292.84 359.365 1302.89 365.243 cv
1307.29 367.822 1312.38 367.944 1317.28 368.311 cv
1331.55 369.369 1339.5 375.243 1348.39 385.451 cv
1359.18 397.858 1368.29 407.595 1384.18 412.634 cv
1404.05 418.961 1419.01 401.226 1437.56 398.925 cv
1457.3 396.472 1474 401.366 1493.58 395.179 cv
1519.32 387.054 1543.81 366.511 1523.65 340.085 cv
cp
f
1704.56 66.6758 mo
1678.17 55.5713 1629.21 33.3428 1600.69 47.5371 cv
1561.6 67.001 1542.95 107.833 1499.97 122.37 cv
1470.51 132.34 1438.74 133.874 1410.85 148.462 cv
1383.07 162.981 1374.63 192.715 1373.07 221.869 cv
1372.81 226.7 1380.05 226.549 1380.48 221.869 cv
1388.1 140.565 1459.83 153.118 1517.6 128.139 cv
1546.69 115.563 1564.38 90.5869 1587.48 69.9478 cv
1624.55 36.8247 1663.47 75.1494 1703.34 75.7813 cv
1709 75.8711 1709.08 68.5674 1704.56 66.6758 cv
cp
.529412 .466667 .345098 rgb
f
1806.18 287.948 mo
1788.17 228.306 1801.83 161.743 1772.67 105.012 cv
1744.63 50.4761 1690.81 77.6772 1645.97 52.2598 cv
1643.6 50.9199 1640.71 54.3574 1642.97 56.1504 cv
1656.53 66.9111 1670.01 73.9727 1687.24 76.8398 cv
1708.25 80.3408 1727.25 76.2949 1744.92 91.4692 cv
1785.96 126.706 1777.25 206.822 1782.74 255.019 cv
1788.14 302.63 1825.97 360.317 1791.05 403.897 cv
1757.03 446.362 1683.44 447.352 1634.95 459.617 cv
1629.01 461.123 1630.57 469.665 1636.35 469.952 cv
1684.73 472.37 1750.43 460.813 1788.98 428.922 cv
1836.39 389.688 1821.92 340.078 1806.18 287.948 cv
cp
f
1535.87 112.396 mo
1463.2 121.038 1388.18 75.8271 1322.52 124.304 cv
1276.89 157.984 1267.41 224.859 1249.6 274.704 cv
1232.28 323.193 1223.16 362.486 1261.11 402.813 cv
1285.53 428.764 1317.41 449.863 1345.8 471.293 cv
1379.57 496.774 1413.43 518.716 1455.25 527.175 cv
1459.48 528.043 1462.67 521.925 1458.35 519.843 cv
1395.38 489.396 1340.31 447.326 1285.66 404.224 cv
1235.39 364.583 1247.83 322.903 1266.39 269.811 cv
1284.51 218.016 1292.74 157.812 1342.96 126.209 cv
1399.34 90.6992 1474.41 133.53 1536.03 113.609 cv
1536.67 113.402 1536.59 112.309 1535.87 112.396 cv
cp
f
1568.17 288.526 mo
1550.8 341.057 1560.16 407.164 1497.38 427.855 cv
1478.07 434.224 1463.69 429.606 1445.39 425.708 cv
1438.88 424.335 1426.48 424.753 1421.44 429.82 cv
1413.92 437.377 1411.35 445.633 1408.39 455.781 cv
1396.16 497.718 1347.35 452.077 1332.28 441.096 cv
1329.81 439.285 1326.29 442.847 1328.05 445.327 cv
1346.01 470.532 1371.05 501.438 1405.91 484.136 cv
1418.76 477.757 1421.82 466.415 1425.6 453.316 cv
1430.15 437.505 1478.45 448.158 1492.94 445.127 cv
1572.19 428.586 1558.76 351.298 1570.56 289.186 cv
1570.85 287.627 1568.68 287.002 1568.17 288.526 cv
cp
f
1710.81 453.041 mo
1668.04 459.373 1626.39 483.81 1585.79 497.984 cv
1561.34 506.525 1536.12 513.124 1510.35 516.058 cv
1486.65 518.762 1466.47 509.934 1443.76 509.056 cv
1438.33 508.852 1436.4 515.465 1439.6 519.087 cv
1466.47 549.411 1531.28 531.9 1564.05 522.879 cv
1613.8 509.174 1670.22 488.049 1713.43 459.25 cv
1716.8 457.016 1714.54 452.49 1710.81 453.041 cv
cp
f
868.052 1657.51 mo
857.304 1654.8 803.593 1646.68 774.056 1649.38 cv
744.511 1652.09 714.975 1649.38 685.428 1714.39 cv
655.89 1779.4 647.827 1839 655.89 1857.96 cv
663.941 1876.92 717.664 1914.84 755.251 1941.94 cv
792.852 1969.02 806.285 1979.86 846.563 1979.86 cv
886.847 1979.86 948.609 1960.89 999.646 1931.1 cv
1047.98 1917.56 1088.27 1901.3 1096.32 1874.22 cv
1104.39 1847.13 1099.02 1833.58 1088.27 1790.24 cv
1077.53 1746.9 1090.96 1665.63 1047.98 1635.84 cv
1005.01 1606.04 1018.44 1630.42 991.581 1614.17 cv
964.73 1597.92 940.556 1595.21 919.073 1616.88 cv
897.588 1638.55 868.052 1657.51 868.052 1657.51 cv
cp
.647059 .607843 .529412 rgb
f
969.984 1605.27 mo
968.285 1603.97 966.43 1605.74 966.413 1607.51 cv
960.762 1605.53 954.499 1604.79 947.343 1605.75 cv
924.853 1608.74 908.54 1629.25 890.532 1642.09 cv
890.714 1642.85 890.635 1643.7 890.028 1644.46 cv
881.55 1655.14 868.321 1658.58 855.943 1653.48 cv
847.973 1653.82 839.734 1653.19 831.557 1652.28 cv
826.485 1651.87 821.397 1651.35 816.329 1650.56 cv
816.105 1650.52 815.97 1650.42 815.788 1650.35 cv
809.12 1649.51 802.645 1648.76 796.617 1648.52 cv
769.46 1647.45 739.063 1647.92 715.418 1662.94 cv
687.869 1680.44 674.84 1726.72 670.996 1757.7 cv
667.735 1783.99 678.532 1798.64 699.646 1791.82 cv
695.016 1806.87 671.615 1815.02 674.517 1834.82 cv
676.028 1845.14 689.048 1853.39 696.751 1858.16 cv
713.107 1868.28 719.911 1887.85 735.701 1898.7 cv
744.463 1904.71 754.436 1911.93 765.479 1910.21 cv
769.141 1909.64 773.633 1905.32 776.61 1903.48 cv
788.433 1896.17 797.157 1904.28 810.302 1905.36 cv
819.181 1906.09 840.064 1908.8 847.896 1908.07 cv
883.567 1899.66 906.992 1852.94 904.38 1815.97 cv
904.336 1815.29 904.547 1814.79 904.86 1814.38 cv
904.619 1809.49 904.427 1804.6 904.38 1799.72 cv
904.354 1796.33 909.561 1796.33 909.591 1799.72 cv
909.832 1827.24 913.95 1854.97 910.593 1881.25 cv
913.884 1876.94 917.043 1872.47 920.123 1867.85 cv
929.245 1854.15 934.046 1838.8 935.967 1822.55 cv
937.127 1812.79 935.392 1802.72 934.743 1792.99 cv
933.747 1777.92 947.569 1781.7 958.011 1782.23 cv
962.657 1782.47 965.919 1778.29 966.182 1773.99 cv
967.209 1757.28 965.332 1736.99 985.144 1730.33 cv
992.814 1727.75 1001.51 1729.88 1009.35 1728.05 cv
1024.15 1724.59 1030.03 1714.85 1032.8 1700.27 cv
1040.36 1660.52 996.883 1625.95 969.984 1605.27 cv
cp
.729412 .705882 .647059 rgb
f
856.151 1660.86 mo
811.627 1650.95 760.955 1634.14 720.636 1663.73 cv
694.644 1682.81 664.001 1720.44 674.702 1755.16 cv
675.941 1759.15 680.942 1760.66 683.98 1757.63 cv
696.276 1745.32 708.659 1720.75 725.967 1715.41 cv
737.426 1711.86 743.447 1704.93 752.296 1696.52 cv
767.58 1681.98 806.947 1664.93 827.877 1671.5 cv
830.476 1672.31 832.633 1670.5 833.419 1668.29 cv
836.216 1668.12 839.033 1667.87 842.036 1667.36 cv
844.028 1667.03 844.652 1664.93 844.119 1663.26 cv
848.196 1663.18 852.223 1662.89 856.151 1662.28 cv
856.877 1662.17 856.823 1661.01 856.151 1660.86 cv
cp
.890196 .858824 .796078 rgb
f
968.374 1629.19 mo
964.521 1626.6 959.753 1625.34 954.528 1625.05 cv
948.848 1624.24 943.325 1624.7 938.22 1626.57 cv
935.832 1627.07 933.459 1627.65 931.152 1628.3 cv
918.497 1631.89 906.368 1638.27 896.286 1646.72 cv
873.222 1666.03 848.017 1673.23 819.501 1680.3 cv
779.828 1690.14 761.438 1715.05 752.598 1754.07 cv
743.951 1792.24 778.394 1810.03 808.286 1790.6 cv
813.129 1787.45 816.025 1782.8 819.21 1778.16 cv
821.337 1774.3 823.486 1770.45 825.679 1766.62 cv
837.125 1746.37 850.076 1759.29 862.677 1759.3 cv
875.378 1759.31 889.315 1757.26 896.429 1745.09 cv
899.574 1739.71 901.57 1734.01 903.693 1728.15 cv
908.758 1714.14 912.6 1717.49 923.846 1720.07 cv
941.553 1724.13 956.69 1714.37 973.838 1711.07 cv
1034.96 1699.32 1004.51 1645.28 968.374 1629.19 cv
cp
f
872.183 1834.41 mo
870.369 1832.01 868.076 1830.75 865.016 1831.47 cv
844.981 1836.15 827.012 1827.18 808.194 1821.61 cv
790.6 1816.41 775.576 1820.54 757.99 1822.68 cv
731.883 1825.85 710.979 1807.28 692.924 1833.82 cv
692.266 1834.78 692.615 1835.79 693.311 1836.45 cv
689.755 1842.21 690.066 1849.75 697.992 1854.43 cv
701.47 1856.49 705.48 1856.58 709.351 1856.87 cv
720.607 1857.72 726.88 1862.39 733.894 1870.52 cv
742.409 1880.39 749.602 1888.14 762.133 1892.15 cv
777.817 1897.19 789.621 1883.07 804.257 1881.24 cv
819.835 1879.29 833.011 1883.18 848.458 1878.26 cv
868.768 1871.79 888.094 1855.44 872.183 1834.41 cv
cp
f
1014.94 1616.81 mo
994.117 1607.97 955.483 1590.28 932.973 1601.58 cv
902.128 1617.07 887.417 1649.56 853.504 1661.13 cv
830.259 1669.07 805.185 1670.29 783.179 1681.9 cv
761.263 1693.46 754.603 1717.12 753.367 1740.32 cv
753.163 1744.17 758.879 1744.05 759.215 1740.32 cv
765.231 1675.62 821.829 1685.61 867.41 1665.73 cv
890.365 1655.72 904.325 1635.84 922.549 1619.41 cv
951.803 1593.05 982.513 1623.55 1013.97 1624.05 cv
1018.44 1624.13 1018.5 1618.31 1014.94 1616.81 cv
cp
.529412 .466667 .345098 rgb
f
1095.12 1792.91 mo
1080.91 1745.45 1091.69 1692.47 1068.68 1647.32 cv
1046.55 1603.92 1004.09 1625.56 968.704 1605.33 cv
966.837 1604.27 964.555 1607 966.34 1608.43 cv
977.039 1616.99 987.672 1622.62 1001.27 1624.9 cv
1017.85 1627.68 1032.84 1624.46 1046.79 1636.54 cv
1079.16 1664.58 1072.29 1728.35 1076.62 1766.71 cv
1080.89 1804.6 1110.73 1850.51 1083.18 1885.2 cv
1056.33 1918.99 998.271 1919.78 960.009 1929.54 cv
955.321 1930.74 956.552 1937.54 961.115 1937.77 cv
999.286 1939.69 1051.13 1930.49 1081.55 1905.11 cv
1118.96 1873.89 1107.54 1834.41 1095.12 1792.91 cv
cp
f
881.827 1653.2 mo
824.491 1660.07 765.293 1624.09 713.479 1662.67 cv
677.481 1689.48 669.995 1742.7 655.943 1782.37 cv
642.277 1820.97 635.08 1852.24 665.029 1884.33 cv
684.298 1904.99 709.454 1921.78 731.854 1938.83 cv
758.496 1959.12 785.213 1976.58 818.214 1983.31 cv
821.554 1984 824.068 1979.13 820.658 1977.47 cv
770.977 1953.24 727.517 1919.76 684.394 1885.46 cv
644.734 1853.91 654.545 1820.73 669.196 1778.48 cv
683.493 1737.26 689.981 1689.34 729.607 1664.19 cv
774.099 1635.93 833.335 1670.01 881.954 1654.16 cv
882.456 1654 882.397 1653.13 881.827 1653.2 cv
cp
f
907.317 1793.38 mo
893.612 1835.18 900.992 1887.8 851.455 1904.26 cv
836.222 1909.33 824.874 1905.66 810.433 1902.55 cv
805.299 1901.46 795.511 1901.79 791.538 1905.83 cv
785.604 1911.84 783.575 1918.41 781.239 1926.49 cv
771.592 1959.87 733.077 1923.54 721.183 1914.8 cv
719.236 1913.36 716.457 1916.2 717.85 1918.17 cv
732.02 1938.23 751.775 1962.83 779.283 1949.06 cv
789.424 1943.98 791.836 1934.95 794.816 1924.53 cv
798.412 1911.95 836.522 1920.42 847.955 1918.01 cv
910.486 1904.85 899.888 1843.33 909.201 1793.9 cv
909.428 1792.66 907.719 1792.16 907.317 1793.38 cv
cp
f
1019.87 1924.31 mo
986.118 1929.35 953.255 1948.8 921.223 1960.08 cv
901.923 1966.88 882.026 1972.13 861.692 1974.46 cv
842.988 1976.62 827.067 1969.59 809.152 1968.89 cv
804.862 1968.73 803.343 1973.99 805.87 1976.87 cv
827.067 2001.01 878.205 1987.07 904.067 1979.89 cv
943.325 1968.98 987.839 1952.17 1021.94 1929.25 cv
1024.59 1927.47 1022.81 1923.87 1019.87 1924.31 cv
cp
f
1710.39 279.985 mo
1684.66 286.415 1660.21 308.297 1656.35 345.622 cv
1652.49 382.944 1679.51 421.554 1736.13 437.005 cv
1792.77 452.444 1841.68 443.438 1872.56 435.708 cv
1903.46 427.993 1951.06 402.253 1961.37 367.496 cv
1971.67 332.748 1962.66 299.288 1934.35 272.261 cv
1906.02 245.24 1868.7 229.787 1831.39 232.365 cv
1794.06 234.937 1752.88 246.523 1710.39 279.985 cv
cp
.647059 .607843 .529412 rgb
f
1688.51 293.497 mo
1677.11 298.058 1653.62 326.337 1671.8 360.418 cv
1682.09 379.729 1722.23 394.821 1758.03 399.031 cv
1801.78 404.175 1840.39 402.891 1889.29 373.937 cv
1935.61 346.512 1953.65 294.785 1912.47 260.033 cv
1871.28 225.292 1803.06 232.365 1759.31 251.677 cv
1715.54 270.979 1714.27 283.198 1688.51 293.497 cv
cp
.729412 .705882 .647059 rgb
f
1702.72 330.303 mo
1706.03 335.14 1710.39 339.409 1715.01 342.863 cv
1715.74 343.404 1716.47 343.91 1717.23 344.387 cv
1710.71 341.475 1705.43 336.975 1702.72 330.303 cv
cp
1859.34 257.963 mo
1844.21 238.599 1814.72 236.451 1792.43 238.952 cv
1767.93 241.703 1739.99 254.889 1725.68 267.02 cv
1722.22 269.951 1718.5 273.25 1715.01 276.919 cv
1702.73 284.44 1694.48 300.304 1691.15 313.103 cv
1685.04 336.547 1703.24 358.429 1723.57 366.85 cv
1748.19 377.055 1781.6 367.029 1805.61 359.348 cv
1827.14 352.464 1851.34 339.363 1864.24 320.184 cv
1878.36 299.229 1874.38 277.197 1859.34 257.963 cv
cp
.890196 .858824 .796078 rgb
f
1815.82 439.576 mo
1763.98 443.02 1694.74 431.56 1668.63 380.396 cv
1649.83 343.557 1665.79 307.708 1697.18 290.686 cv
1686.71 305.648 1683.8 323.277 1697.3 342.415 cv
1698.3 343.838 1700.49 342.614 1699.65 341.042 cv
1687.74 318.678 1694.22 300.196 1709.41 285.29 cv
1711.69 281.266 1728.51 270.679 1730.8 269.324 cv
1759.44 252.387 1797.58 242.207 1818.67 237.995 cv
1884.24 224.899 1981.67 288.823 1957.33 362.861 cv
1939.37 417.477 1866.03 436.224 1815.82 439.576 cv
cp
1888.92 239.08 mo
1842.72 218.001 1796.34 231.108 1751.84 250.514 cv
1739.14 256.044 1724.56 264.163 1712.58 274.266 cv
1682.4 281.804 1657.93 302.148 1651.95 334.222 cv
1647.05 360.485 1657.92 387.968 1675.6 407.073 cv
1711.29 445.618 1773.64 452.418 1822.92 448.357 cv
1871.96 444.316 1928.1 426.457 1956.86 383.716 cv
1996.53 324.821 1941.93 263.259 1888.92 239.08 cv
cp
.529412 .466667 .345098 rgb
f
1728.32 259.861 mo
1727.76 260.479 1727.06 261.004 1726.38 261.558 cv
1727.14 261.086 1727.92 260.714 1728.74 260.571 cv
1729.42 260.443 1728.82 259.318 1728.32 259.861 cv
cp
f
1713.85 272.307 mo
1713.42 272.584 1713.83 273.29 1714.25 272.995 cv
1716.44 271.46 1718.32 269.666 1720.15 267.722 cv
1721.13 266.676 1722.27 265.304 1723.5 264.025 cv
1722.87 264.525 1722.21 265.01 1721.66 265.553 cv
1719.16 267.985 1716.8 270.406 1713.85 272.307 cv
cp
f
1723.5 264.025 mo
1724.49 263.224 1725.41 262.369 1726.38 261.558 cv
1725.36 262.206 1724.4 263.081 1723.5 264.025 cv
cp
f
1019.74 1347.56 mo
999.973 1352.5 981.206 1369.3 978.243 1397.96 cv
975.278 1426.61 996.023 1456.25 1039.5 1468.12 cv
1082.97 1479.97 1120.54 1473.06 1144.24 1467.13 cv
1167.97 1461.2 1204.51 1441.44 1212.42 1414.75 cv
1220.33 1388.07 1213.42 1362.38 1191.68 1341.63 cv
1169.93 1320.89 1141.28 1309.03 1112.64 1311 cv
1083.97 1312.98 1052.35 1321.87 1019.74 1347.56 cv
cp
.647059 .607843 .529412 rgb
f
1002.94 1357.93 mo
994.182 1361.44 976.145 1383.15 990.096 1409.32 cv
997.997 1424.14 1028.83 1435.73 1056.31 1438.96 cv
1089.9 1442.91 1119.54 1441.93 1157.09 1419.7 cv
1192.65 1398.64 1206.51 1358.93 1174.88 1332.25 cv
1143.26 1305.57 1090.88 1311 1057.29 1325.83 cv
1023.69 1340.65 1022.71 1350.03 1002.94 1357.93 cv
cp
.729412 .705882 .647059 rgb
f
1013.84 1386.2 mo
1016.38 1389.91 1019.73 1393.19 1023.28 1395.84 cv
1023.84 1396.25 1024.4 1396.65 1024.98 1397.01 cv
1019.97 1394.78 1015.93 1391.32 1013.84 1386.2 cv
cp
1134.1 1330.65 mo
1122.48 1315.79 1099.83 1314.14 1082.72 1316.06 cv
1063.91 1318.17 1042.46 1328.3 1031.47 1337.61 cv
1028.81 1339.86 1025.96 1342.39 1023.28 1345.21 cv
1013.84 1350.98 1007.52 1363.16 1004.96 1372.99 cv
1000.27 1390.99 1014.24 1407.79 1029.84 1414.26 cv
1048.75 1422.09 1074.4 1414.39 1092.85 1408.49 cv
1109.37 1403.21 1127.95 1393.15 1137.86 1378.43 cv
1148.69 1362.34 1145.64 1345.42 1134.1 1330.65 cv
cp
.890196 .858824 .796078 rgb
f
1100.68 1470.09 mo
1060.88 1472.74 1007.72 1463.94 987.672 1424.66 cv
973.238 1396.37 985.485 1368.85 1009.59 1355.78 cv
1001.56 1367.26 999.313 1380.8 1009.68 1395.5 cv
1010.46 1396.59 1012.13 1395.65 1011.48 1394.44 cv
1002.34 1377.27 1007.32 1363.09 1018.98 1351.64 cv
1020.72 1348.55 1033.65 1340.42 1035.41 1339.38 cv
1057.39 1326.38 1086.68 1318.56 1102.86 1315.33 cv
1153.2 1305.27 1228.01 1354.35 1209.32 1411.19 cv
1195.54 1453.13 1139.23 1467.52 1100.68 1470.09 cv
cp
1156.8 1316.16 mo
1121.34 1299.97 1085.73 1310.04 1051.55 1324.94 cv
1041.81 1329.19 1030.61 1335.42 1021.42 1343.17 cv
998.248 1348.96 979.45 1364.58 974.868 1389.21 cv
971.098 1409.37 979.44 1430.47 993.019 1445.14 cv
1020.43 1474.73 1068.29 1479.95 1106.12 1476.84 cv
1143.78 1473.74 1186.88 1460.02 1208.97 1427.21 cv
1239.43 1381.99 1197.5 1334.72 1156.8 1316.16 cv
cp
.529412 .466667 .345098 rgb
f
1033.5 1332.11 mo
1033.07 1332.59 1032.53 1332.99 1032.01 1333.42 cv
1032.6 1333.06 1033.19 1332.77 1033.82 1332.66 cv
1034.34 1332.56 1033.88 1331.7 1033.5 1332.11 cv
cp
f
1022.38 1341.67 mo
1022.06 1341.88 1022.37 1342.42 1022.7 1342.2 cv
1024.37 1341.02 1025.82 1339.64 1027.22 1338.15 cv
1027.97 1337.35 1028.85 1336.29 1029.79 1335.31 cv
1029.32 1335.7 1028.81 1336.07 1028.37 1336.49 cv
1026.47 1338.35 1024.66 1340.21 1022.38 1341.67 cv
cp
f
1029.79 1335.31 mo
1030.55 1334.7 1031.26 1334.04 1032.01 1333.42 cv
1031.22 1333.92 1030.48 1334.59 1029.79 1335.31 cv
cp
f
947.318 1399.59 mo
931.59 1403.51 916.657 1416.88 914.3 1439.69 cv
911.942 1462.49 928.448 1486.08 963.049 1495.52 cv
997.645 1504.96 1027.54 1499.46 1046.4 1494.73 cv
1065.28 1490.02 1094.36 1474.29 1100.66 1453.06 cv
1106.95 1431.82 1101.45 1411.38 1084.15 1394.87 cv
1066.85 1378.36 1044.04 1368.91 1021.25 1370.49 cv
998.44 1372.06 973.272 1379.14 947.318 1399.59 cv
cp
.647059 .607843 .529412 rgb
f
933.951 1407.84 mo
926.982 1410.63 912.627 1427.91 923.733 1448.73 cv
930.019 1460.53 954.553 1469.75 976.423 1472.32 cv
1003.16 1475.47 1026.74 1474.68 1056.63 1456.99 cv
1084.92 1440.24 1095.95 1408.63 1070.78 1387.4 cv
1045.62 1366.17 1003.93 1370.49 977.204 1382.29 cv
950.463 1394.09 949.685 1401.55 933.951 1407.84 cv
cp
.729412 .705882 .647059 rgb
f
942.634 1430.33 mo
944.646 1433.29 947.309 1435.89 950.145 1438 cv
950.585 1438.33 951.035 1438.65 951.494 1438.93 cv
947.512 1437.16 944.292 1434.41 942.634 1430.33 cv
cp
1038.33 1386.13 mo
1029.08 1374.3 1011.06 1372.99 997.439 1374.51 cv
982.476 1376.19 965.402 1384.26 956.659 1391.66 cv
954.544 1393.46 952.271 1395.47 950.145 1397.71 cv
942.634 1402.31 937.598 1412 935.559 1419.82 cv
931.828 1434.15 942.946 1447.51 955.362 1452.66 cv
970.412 1458.89 990.824 1452.77 1005.5 1448.07 cv
1018.65 1443.87 1033.43 1435.86 1041.32 1424.15 cv
1049.94 1411.34 1047.51 1397.88 1038.33 1386.13 cv
cp
.890196 .858824 .796078 rgb
f
1011.73 1497.09 mo
980.056 1499.2 937.757 1492.2 921.802 1460.94 cv
910.314 1438.43 920.061 1416.52 939.246 1406.13 cv
932.851 1415.26 931.064 1426.04 939.313 1437.73 cv
939.93 1438.6 941.27 1437.85 940.748 1436.89 cv
933.477 1423.23 937.437 1411.94 946.719 1402.83 cv
948.104 1400.37 958.39 1393.9 959.788 1393.08 cv
977.286 1382.72 1000.6 1376.51 1013.47 1373.93 cv
1053.54 1365.93 1113.07 1404.99 1098.19 1450.22 cv
1087.22 1483.59 1042.41 1495.04 1011.73 1497.09 cv
cp
1056.4 1374.59 mo
1028.17 1361.71 999.837 1369.73 972.637 1381.58 cv
964.883 1384.96 955.972 1389.92 948.652 1396.09 cv
930.219 1400.7 915.261 1413.13 911.612 1432.72 cv
908.615 1448.78 915.253 1465.56 926.058 1477.24 cv
947.868 1500.79 985.964 1504.94 1016.06 1502.46 cv
1046.04 1499.99 1080.34 1489.08 1097.91 1462.97 cv
1122.15 1426.98 1088.78 1389.36 1056.4 1374.59 cv
cp
.529412 .466667 .345098 rgb
f
958.268 1387.29 mo
957.926 1387.67 957.497 1387.99 957.085 1388.33 cv
957.553 1388.04 958.028 1387.81 958.53 1387.73 cv
958.94 1387.65 958.576 1386.96 958.268 1387.29 cv
cp
f
949.424 1394.9 mo
949.166 1395.06 949.419 1395.5 949.679 1395.32 cv
951.004 1394.38 952.156 1393.28 953.281 1392.1 cv
953.872 1391.46 954.577 1390.62 955.323 1389.83 cv
954.943 1390.15 954.538 1390.44 954.193 1390.77 cv
952.676 1392.25 951.235 1393.73 949.424 1394.9 cv
cp
f
955.323 1389.83 mo
955.93 1389.35 956.492 1388.82 957.085 1388.33 cv
956.465 1388.73 955.873 1389.26 955.323 1389.83 cv
cp
f
1495.24 454.674 mo
1489.4 474.686 1528.36 502.642 1566.06 502.642 cv
1603.75 502.642 1654.01 487.789 1687.15 485.508 cv
1720.27 483.223 1747.69 492.361 1785.38 498.075 cv
1823.08 503.786 1851.64 499.218 1865.35 483.223 cv
1879.06 467.228 1887.05 444.382 1872.19 427.249 cv
1857.36 410.117 1799.1 399.84 1765.96 402.123 cv
1732.84 404.401 1674.57 406.698 1636.88 413.549 cv
1599.18 420.396 1503.23 427.265 1495.24 454.674 cv
cp
.647059 .607843 .529412 rgb
f
1503.24 444.382 mo
1494 451.097 1482.68 472.935 1523.8 476.358 cv
1564.92 479.795 1622.04 472.935 1668.88 466.088 cv
1715.71 459.23 1748.84 467.228 1775.11 472.935 cv
1801.39 478.651 1899.93 453.538 1852.79 419.242 cv
1827.66 400.97 1761.42 402.113 1727.14 402.113 cv
1692.87 402.113 1631.19 418.109 1598.05 421.533 cv
1564.92 424.957 1528.37 426.106 1503.24 444.382 cv
cp
.729412 .705882 .647059 rgb
f
1540.94 430.677 mo
1521.45 434.948 1484.97 445.53 1505.53 453.531 cv
1526.09 461.522 1582.06 458.098 1631.19 446.668 cv
1680.3 435.255 1732.86 430.677 1751.13 430.677 cv
1769.41 430.677 1819.67 404.401 1746.56 404.401 cv
1673.45 404.401 1655.17 408.976 1628.9 416.973 cv
1602.63 424.963 1577.49 422.683 1540.94 430.677 cv
cp
.890196 .858824 .796078 rgb
f
1818.52 498.044 mo
1771.88 502.163 1731.17 474.166 1684.42 478.61 cv
1663.64 480.59 1643.98 489.11 1623.58 493.101 cv
1601.89 497.347 1576.67 499.418 1554.81 495.366 cv
1540.2 492.657 1526.12 486.631 1513.51 478.932 cv
1507.69 475.37 1502.67 470.833 1499.01 465.083 cv
1490.24 451.301 1514.23 442.286 1522.72 439.025 cv
1558.89 425.101 1601.95 430.749 1638.04 417.803 cv
1679.58 411.875 1721.25 407.543 1763.66 407.793 cv
1792.13 407.962 1821.58 409.518 1848.76 418.651 cv
1863.4 423.58 1874.96 432.101 1876.25 448.373 cv
1878.57 477.727 1842.45 495.933 1818.52 498.044 cv
cp
1881.04 435.938 mo
1872.83 412.441 1836.28 406.854 1815.66 404.27 cv
1752.93 396.433 1687.5 400.797 1624.19 412.384 cv
1606.76 414.677 1589.26 418.039 1572.1 420.421 cv
1547.56 423.824 1520.65 427.651 1499.73 441.979 cv
1475.25 458.756 1500.63 481.002 1517.22 490.116 cv
1554.98 510.862 1600.34 506.648 1640.77 497.132 cv
1676.95 488.615 1705.42 480.804 1742.41 492.509 cv
1770.78 501.469 1796.92 507.179 1826.83 504.47 cv
1857.33 501.714 1892.33 468.215 1881.04 435.938 cv
cp
.529412 .466667 .345098 rgb
f
1459.19 1471.64 mo
1454.02 1489.37 1488.52 1514.13 1521.91 1514.13 cv
1555.29 1514.13 1599.8 1500.98 1629.14 1498.96 cv
1658.47 1496.93 1682.76 1505.02 1716.14 1510.08 cv
1749.52 1515.14 1774.81 1511.1 1786.95 1496.93 cv
1799.09 1482.77 1806.17 1462.54 1793.01 1447.36 cv
1779.88 1432.19 1728.28 1423.09 1698.94 1425.11 cv
1669.6 1427.13 1618 1429.16 1584.63 1435.22 cv
1551.24 1441.3 1466.27 1447.37 1459.19 1471.64 cv
cp
.647059 .607843 .529412 rgb
f
1466.27 1462.53 mo
1458.09 1468.48 1448.07 1487.82 1484.48 1490.86 cv
1520.9 1493.89 1571.49 1487.82 1612.96 1481.75 cv
1654.44 1475.68 1683.78 1482.76 1707.04 1487.82 cv
1730.31 1492.88 1817.58 1470.64 1775.83 1440.28 cv
1753.58 1424.09 1694.91 1425.1 1664.56 1425.1 cv
1634.21 1425.1 1579.58 1439.26 1550.24 1442.3 cv
1520.9 1445.33 1488.53 1446.35 1466.27 1462.53 cv
cp
.729412 .705882 .647059 rgb
f
1499.66 1450.4 mo
1482.41 1454.18 1450.09 1463.56 1468.3 1470.63 cv
1486.51 1477.71 1536.08 1474.68 1579.58 1464.56 cv
1623.07 1454.44 1669.62 1450.4 1685.8 1450.4 cv
1701.98 1450.4 1746.49 1427.13 1681.76 1427.13 cv
1617.01 1427.13 1600.82 1431.18 1577.55 1438.26 cv
1554.29 1445.34 1532.03 1443.31 1499.66 1450.4 cv
cp
.890196 .858824 .796078 rgb
f
1745.48 1510.05 mo
1704.18 1513.7 1668.12 1488.91 1626.73 1492.85 cv
1608.32 1494.6 1590.92 1502.15 1572.84 1505.68 cv
1553.64 1509.43 1531.3 1511.27 1511.94 1507.69 cv
1499.01 1505.29 1486.54 1499.95 1475.37 1493.13 cv
1470.22 1489.98 1465.77 1485.96 1462.53 1480.87 cv
1454.76 1468.66 1476.01 1460.67 1483.53 1457.79 cv
1515.56 1445.46 1553.69 1450.46 1585.65 1439 cv
1622.43 1433.74 1659.33 1429.91 1696.89 1430.13 cv
1722.11 1430.28 1748.19 1431.66 1772.26 1439.75 cv
1785.22 1444.11 1795.46 1451.66 1796.6 1466.07 cv
1798.66 1492.07 1766.67 1508.18 1745.48 1510.05 cv
cp
1800.85 1455.06 mo
1793.57 1434.24 1761.21 1429.3 1742.95 1427.01 cv
1687.39 1420.07 1629.45 1423.94 1573.38 1434.2 cv
1557.95 1436.23 1542.46 1439.21 1527.26 1441.31 cv
1505.52 1444.33 1481.7 1447.72 1463.17 1460.41 cv
1441.49 1475.27 1463.97 1494.97 1478.66 1503.04 cv
1512.09 1521.41 1552.27 1517.67 1588.07 1509.25 cv
1620.11 1501.71 1645.32 1494.79 1678.08 1505.15 cv
1703.2 1513.09 1726.35 1518.14 1752.84 1515.74 cv
1779.85 1513.3 1810.85 1483.65 1800.85 1455.06 cv
cp
.529412 .466667 .345098 rgb
f
1305.56 500.316 mo
1301.63 520.328 1327.88 548.283 1353.27 548.283 cv
1378.66 548.283 1412.51 533.432 1434.83 531.151 cv
1457.14 528.864 1475.61 538.013 1501.01 543.717 cv
1526.39 549.427 1545.63 544.86 1554.87 528.864 cv
1564.1 512.868 1569.48 490.024 1559.48 472.896 cv
1549.48 455.761 1510.24 445.479 1487.93 447.76 cv
1465.61 450.046 1426.37 452.343 1400.97 459.189 cv
1375.58 466.042 1310.95 472.905 1305.56 500.316 cv
cp
.647059 .607843 .529412 rgb
f
1310.96 490.024 mo
1304.73 496.739 1297.1 518.578 1324.8 522.002 cv
1352.5 525.435 1390.97 518.578 1422.52 511.729 cv
1454.07 504.872 1476.38 512.868 1494.08 518.578 cv
1511.78 524.292 1578.16 499.177 1546.4 464.884 cv
1529.48 446.611 1484.85 447.76 1461.77 447.76 cv
1438.68 447.76 1397.13 463.752 1374.82 467.175 cv
1352.5 470.604 1327.88 471.747 1310.96 490.024 cv
cp
.729412 .705882 .647059 rgb
f
1336.35 476.319 mo
1323.22 480.59 1298.64 491.178 1312.5 499.172 cv
1326.33 507.163 1364.05 503.74 1397.13 492.311 cv
1430.21 480.896 1465.62 476.319 1477.93 476.319 cv
1490.24 476.319 1524.09 450.046 1474.84 450.046 cv
1425.6 450.046 1413.29 454.628 1395.6 462.618 cv
1377.9 470.604 1360.96 468.323 1336.35 476.319 cv
cp
.890196 .858824 .796078 rgb
f
1523.32 543.687 mo
1491.91 547.804 1464.48 519.812 1432.99 524.256 cv
1418.99 526.231 1405.75 534.758 1392.01 538.743 cv
1377.4 542.987 1360.41 545.059 1345.7 541.008 cv
1335.85 538.304 1326.36 532.273 1317.87 524.573 cv
1313.95 521.012 1310.57 516.485 1308.1 510.724 cv
1302.2 496.954 1318.35 487.927 1324.07 484.666 cv
1348.44 470.742 1377.43 476.39 1401.76 463.446 cv
1429.73 457.516 1457.8 453.178 1486.37 453.439 cv
1505.55 453.607 1525.38 455.159 1543.69 464.292 cv
1553.56 469.221 1561.34 477.743 1562.2 494.015 cv
1563.77 523.374 1539.44 541.574 1523.32 543.687 cv
cp
1565.44 481.58 mo
1559.91 458.083 1535.28 452.495 1521.39 449.914 cv
1479.14 442.071 1435.06 446.439 1392.42 458.037 cv
1380.68 460.317 1368.9 463.68 1357.34 466.073 cv
1340.8 469.465 1322.67 473.293 1308.59 487.621 cv
1292.1 504.403 1309.2 526.645 1320.38 535.764 cv
1345.8 556.504 1376.36 552.29 1403.61 542.772 cv
1427.95 534.264 1447.13 526.446 1472.06 538.151 cv
1491.16 547.116 1508.76 552.82 1528.92 550.111 cv
1549.46 547.355 1573.04 513.858 1565.44 481.58 cv
cp
.529412 .466667 .345098 rgb
f
1015.41 1479.77 mo
1010.45 1504.99 1043.53 1540.22 1075.52 1540.22 cv
1107.52 1540.22 1150.18 1521.5 1178.31 1518.63 cv
1206.42 1515.75 1229.69 1527.27 1261.7 1534.47 cv
1293.68 1541.66 1317.92 1535.9 1329.57 1515.75 cv
1341.2 1495.59 1347.98 1466.81 1335.38 1445.22 cv
1322.77 1423.62 1273.32 1410.67 1245.21 1413.55 cv
1217.08 1416.43 1167.63 1419.31 1135.63 1427.94 cv
1103.64 1436.58 1022.19 1445.22 1015.41 1479.77 cv
cp
.647059 .607843 .529412 rgb
f
1022.2 1466.81 mo
1014.35 1475.26 1004.74 1502.78 1039.64 1507.09 cv
1074.55 1511.42 1123.03 1502.78 1162.79 1494.15 cv
1202.55 1485.51 1230.67 1495.59 1252.97 1502.78 cv
1275.26 1509.98 1358.92 1478.34 1318.9 1435.13 cv
1297.58 1412.1 1241.33 1413.54 1212.26 1413.54 cv
1183.16 1413.54 1130.8 1433.69 1102.67 1438.01 cv
1074.55 1442.33 1043.53 1443.77 1022.2 1466.81 cv
cp
.729412 .705882 .647059 rgb
f
1054.2 1449.53 mo
1037.66 1454.91 1006.68 1468.25 1024.14 1478.33 cv
1041.58 1488.4 1089.11 1484.08 1130.8 1469.68 cv
1172.48 1455.29 1217.09 1449.53 1232.61 1449.53 cv
1248.12 1449.53 1290.79 1416.43 1228.72 1416.43 cv
1166.67 1416.43 1151.16 1422.19 1128.86 1432.26 cv
1106.56 1442.34 1085.22 1439.45 1054.2 1449.53 cv
cp
.890196 .858824 .796078 rgb
f
1289.81 1534.43 mo
1250.22 1539.62 1215.66 1504.34 1175.98 1509.94 cv
1158.34 1512.43 1141.65 1523.17 1124.34 1528.19 cv
1105.93 1533.54 1084.52 1536.15 1065.97 1531.05 cv
1053.57 1527.64 1041.62 1520.05 1030.92 1510.34 cv
1025.98 1505.85 1021.71 1500.14 1018.61 1492.89 cv
1011.16 1475.53 1031.52 1464.16 1038.72 1460.05 cv
1069.44 1442.51 1105.97 1449.62 1136.62 1433.31 cv
1171.87 1425.84 1207.25 1420.38 1243.24 1420.69 cv
1267.42 1420.91 1292.41 1422.87 1315.48 1434.38 cv
1327.91 1440.58 1337.72 1451.33 1338.81 1471.83 cv
1340.79 1508.83 1310.12 1531.76 1289.81 1534.43 cv
cp
1342.89 1456.17 mo
1335.92 1426.54 1304.88 1419.51 1287.38 1416.26 cv
1234.13 1406.38 1178.59 1411.87 1124.85 1426.48 cv
1110.07 1429.37 1095.21 1433.61 1080.65 1436.61 cv
1059.81 1440.9 1036.97 1445.71 1019.22 1463.77 cv
998.44 1484.92 1019.99 1512.95 1034.08 1524.44 cv
1066.11 1550.57 1104.62 1545.26 1138.95 1533.28 cv
1169.64 1522.55 1193.8 1512.7 1225.21 1527.45 cv
1249.29 1538.74 1271.47 1545.93 1296.87 1542.52 cv
1322.76 1539.05 1352.47 1496.84 1342.89 1456.17 cv
cp
.529412 .466667 .345098 rgb
f
1748.35 1883.73 mo
1744.78 1902.08 1768.64 1927.71 1791.72 1927.71 cv
1814.8 1927.71 1845.58 1914.09 1865.88 1912 cv
1886.16 1909.91 1902.95 1918.29 1926.04 1923.53 cv
1949.11 1928.76 1966.6 1924.57 1975 1909.91 cv
1983.39 1895.24 1988.29 1874.29 1979.2 1858.58 cv
1970.1 1842.87 1934.43 1833.45 1914.14 1835.54 cv
1893.85 1837.63 1858.17 1839.73 1835.09 1846.01 cv
1812.01 1852.3 1753.25 1858.59 1748.35 1883.73 cv
cp
.647059 .607843 .529412 rgb
f
1753.25 1874.29 mo
1747.59 1880.45 1740.66 1900.47 1765.84 1903.61 cv
1791.02 1906.76 1826 1900.47 1854.68 1894.19 cv
1883.36 1887.9 1903.65 1895.24 1919.74 1900.47 cv
1935.82 1905.71 1996.18 1882.68 1967.31 1851.24 cv
1951.92 1834.48 1911.35 1835.53 1890.37 1835.53 cv
1869.37 1835.53 1831.6 1850.2 1811.31 1853.33 cv
1791.02 1856.48 1768.64 1857.53 1753.25 1874.29 cv
cp
.729412 .705882 .647059 rgb
f
1776.34 1861.72 mo
1764.4 1865.63 1742.06 1875.35 1754.65 1882.68 cv
1767.23 1890 1801.52 1886.87 1831.6 1876.39 cv
1861.67 1865.91 1893.86 1861.72 1905.05 1861.72 cv
1916.25 1861.72 1947.03 1837.63 1902.25 1837.63 cv
1857.48 1837.63 1846.29 1841.83 1830.21 1849.15 cv
1814.11 1856.49 1798.72 1854.39 1776.34 1861.72 cv
cp
.890196 .858824 .796078 rgb
f
1946.32 1923.5 mo
1917.76 1927.28 1892.83 1901.6 1864.2 1905.68 cv
1851.47 1907.49 1839.43 1915.31 1826.94 1918.96 cv
1813.66 1922.85 1798.22 1924.75 1784.83 1921.04 cv
1775.88 1918.56 1767.26 1913.03 1759.54 1905.97 cv
1755.98 1902.7 1752.9 1898.55 1750.66 1893.27 cv
1745.29 1880.64 1759.98 1872.36 1765.17 1869.37 cv
1787.33 1856.61 1813.69 1861.78 1835.8 1849.92 cv
1861.23 1844.48 1886.76 1840.51 1912.72 1840.74 cv
1930.17 1840.89 1948.19 1842.32 1964.84 1850.69 cv
1973.81 1855.21 1980.88 1863.03 1981.67 1877.95 cv
1983.1 1904.87 1960.97 1921.56 1946.32 1923.5 cv
cp
1984.61 1866.55 mo
1979.58 1844.99 1957.2 1839.88 1944.57 1837.51 cv
1906.15 1830.32 1866.08 1834.32 1827.31 1844.95 cv
1816.65 1847.05 1805.93 1850.14 1795.42 1852.32 cv
1780.38 1855.44 1763.91 1858.94 1751.1 1872.09 cv
1736.11 1887.47 1751.66 1907.87 1761.82 1916.23 cv
1784.93 1935.25 1812.71 1931.38 1837.48 1922.66 cv
1859.62 1914.85 1877.05 1907.69 1899.72 1918.42 cv
1917.08 1926.64 1933.08 1931.87 1951.41 1929.39 cv
1970.09 1926.86 1991.52 1896.15 1984.61 1866.55 cv
cp
.529412 .466667 .345098 rgb
f
89.8164 402.985 mo
98.3672 418.775 120.024 425.645 153.478 435.357 cv
186.932 445.065 225.769 446.143 259.228 439.673 cv
292.682 433.198 325.05 422.402 335.845 405.139 cv
346.635 387.876 357.425 367.371 346.635 342.551 cv
335.845 317.735 285.132 300.467 236.573 300.467 cv
188.013 300.467 138.379 311.257 120.033 327.444 cv
101.68 343.629 75.7891 377.086 89.8164 402.985 cv
cp
.647059 .607843 .529412 rgb
f
144.855 313.411 mo
123.279 322.045 100.599 341.472 90.8984 367.366 cv
81.189 393.263 99.5117 410.39 179.389 409.451 cv
271.105 408.369 370.384 365.201 332.62 327.438 cv
294.849 289.672 197.727 298.305 144.855 313.411 cv
.729412 .705882 .647059 rgb
f
103.853 366.297 mo
111.402 377.083 191.263 376.004 235.507 357.658 cv
279.749 339.314 289.457 308.025 252.772 302.633 cv
216.082 297.232 158.892 306.939 135.148 319.891 cv
111.402 332.844 96.3037 355.506 103.853 366.297 cv
cp
.890196 .858824 .796078 rgb
f
98.396 357.738 mo
122.918 307.388 192.588 304.411 241.438 304.646 cv
269.253 304.772 297.347 309.437 321.739 323.271 cv
357.755 343.709 356.603 391.42 318.874 409.008 cv
315.527 410.566 318.434 415.516 321.768 413.965 cv
324.432 412.719 326.921 411.293 329.282 409.749 cv
308.359 425.558 274.651 433.245 254.977 437.083 cv
219.378 444.011 183.622 442.189 148.921 431.791 cv
133.866 427.276 119.292 419.953 104.969 413.445 cv
80.2603 402.223 89.2998 376.425 98.396 357.738 cv
cp
102.069 418.399 mo
142.015 439.547 185.046 448.958 230.073 445.551 cv
261.346 443.18 339.487 428.909 348.274 388.992 cv
354.09 377.731 355.882 364.434 352.717 350.744 cv
345.857 321.256 307.314 308.111 281.837 302.758 cv
248.159 295.692 212.094 298.553 178.331 303.49 cv
142.719 308.698 111.389 322.574 93.4468 354.846 cv
80.4961 378.126 75.8647 404.524 102.069 418.399 cv
cp
.529412 .466667 .345098 rgb
f
1564.64 1680.54 mo
1572.45 1695.08 1592.22 1701.4 1622.76 1710.35 cv
1653.3 1719.29 1688.76 1720.28 1719.3 1714.32 cv
1749.84 1708.36 1779.39 1698.42 1789.25 1682.52 cv
1799.1 1666.62 1808.95 1647.74 1799.1 1624.89 cv
1789.25 1602.04 1742.95 1586.14 1698.62 1586.14 cv
1654.29 1586.14 1608.98 1596.07 1592.23 1610.98 cv
1575.47 1625.88 1551.83 1656.69 1564.64 1680.54 cv
cp
.647059 .607843 .529412 rgb
f
1614.89 1598.05 mo
1595.19 1606.01 1574.49 1623.89 1565.63 1647.74 cv
1556.77 1671.58 1573.49 1687.36 1646.41 1686.49 cv
1730.15 1685.5 1820.78 1645.75 1786.31 1610.97 cv
1751.82 1576.2 1663.16 1584.15 1614.89 1598.05 cv
.729412 .705882 .647059 rgb
f
1577.46 1646.75 mo
1584.35 1656.69 1657.26 1655.69 1697.65 1638.8 cv
1738.04 1621.91 1746.9 1593.1 1713.41 1588.13 cv
1679.91 1583.16 1627.7 1592.1 1606.03 1604.02 cv
1584.35 1615.95 1570.56 1636.82 1577.46 1646.75 cv
cp
.890196 .858824 .796078 rgb
f
1572.47 1638.87 mo
1594.86 1592.51 1658.46 1589.77 1703.06 1589.99 cv
1728.46 1590.1 1754.1 1594.4 1776.37 1607.13 cv
1809.25 1625.96 1808.2 1669.89 1773.75 1686.08 cv
1770.7 1687.52 1773.35 1692.08 1776.4 1690.65 cv
1778.83 1689.5 1781.1 1688.19 1783.26 1686.77 cv
1764.16 1701.32 1733.38 1708.4 1715.42 1711.94 cv
1682.92 1718.32 1650.28 1716.64 1618.6 1707.06 cv
1604.86 1702.91 1591.55 1696.16 1578.47 1690.17 cv
1555.92 1679.83 1564.17 1656.08 1572.47 1638.87 cv
cp
1575.83 1694.73 mo
1612.29 1714.21 1651.58 1722.87 1692.69 1719.73 cv
1721.24 1717.55 1792.58 1704.41 1800.6 1667.65 cv
1805.91 1657.28 1807.54 1645.04 1804.65 1632.43 cv
1798.39 1605.28 1763.2 1593.17 1739.94 1588.25 cv
1709.2 1581.74 1676.27 1584.37 1645.45 1588.92 cv
1612.94 1593.72 1584.34 1606.49 1567.96 1636.21 cv
1556.13 1657.65 1551.9 1681.96 1575.83 1694.73 cv
cp
.529412 .466667 .345098 rgb
f
1224.66 1234.27 mo
1233.75 1251.2 1256.77 1258.56 1292.34 1268.98 cv
1327.9 1279.39 1369.19 1280.54 1404.76 1273.6 cv
1440.32 1266.66 1474.73 1255.09 1486.21 1236.57 cv
1497.68 1218.06 1509.15 1196.08 1497.68 1169.46 cv
1486.21 1142.85 1432.3 1124.34 1380.68 1124.34 cv
1329.05 1124.34 1276.29 1135.91 1256.78 1153.26 cv
1237.27 1170.62 1209.75 1206.5 1224.66 1234.27 cv
cp
.647059 .607843 .529412 rgb
f
1283.17 1138.22 mo
1260.23 1147.47 1236.12 1168.31 1225.81 1196.07 cv
1215.49 1223.84 1234.97 1242.21 1319.88 1241.2 cv
1417.39 1240.04 1522.93 1193.75 1482.78 1153.26 cv
1442.63 1112.76 1339.38 1122.02 1283.17 1138.22 cv
.729412 .705882 .647059 rgb
f
1239.58 1194.93 mo
1247.61 1206.49 1332.51 1205.33 1379.54 1185.66 cv
1426.57 1165.99 1436.89 1132.44 1397.9 1126.66 cv
1358.89 1120.87 1298.09 1131.28 1272.85 1145.17 cv
1247.61 1159.05 1231.56 1183.35 1239.58 1194.93 cv
cp
.890196 .858824 .796078 rgb
f
1233.78 1185.75 mo
1259.85 1131.76 1333.91 1128.57 1385.85 1128.82 cv
1415.42 1128.95 1445.28 1133.96 1471.21 1148.79 cv
1509.5 1170.7 1508.28 1221.87 1468.17 1240.72 cv
1464.61 1242.4 1467.7 1247.7 1471.24 1246.04 cv
1474.08 1244.7 1476.72 1243.17 1479.23 1241.52 cv
1456.99 1258.47 1421.15 1266.71 1400.24 1270.83 cv
1362.4 1278.26 1324.38 1276.3 1287.49 1265.15 cv
1271.49 1260.31 1255.99 1252.46 1240.77 1245.48 cv
1214.5 1233.45 1224.11 1205.79 1233.78 1185.75 cv
cp
1237.69 1250.79 mo
1280.15 1273.47 1325.9 1283.56 1373.77 1279.91 cv
1407.01 1277.37 1490.08 1262.06 1499.42 1219.26 cv
1505.61 1207.19 1507.51 1192.93 1504.15 1178.25 cv
1496.85 1146.63 1455.88 1132.53 1428.79 1126.79 cv
1392.99 1119.22 1354.65 1122.29 1318.76 1127.58 cv
1280.9 1133.16 1247.59 1148.04 1228.52 1182.65 cv
1214.75 1207.61 1209.83 1235.92 1237.69 1250.79 cv
cp
.529412 .466667 .345098 rgb
f
441.941 124.647 mo
441.941 124.647 493.953 84.6396 525.965 68.6323 cv
557.978 52.6265 626.403 25.2251 674.239 36.4819 cv
722.075 47.7373 747.398 73.0596 789.604 106.826 cv
831.811 140.591 876.83 160.288 890.901 165.915 cv
904.971 171.541 919.04 267.21 904.971 286.908 cv
904.971 312.231 882.453 393.832 834.623 421.971 cv
786.794 450.111 736.14 447.297 685.492 441.669 cv
634.845 436.039 598.267 427.595 572.945 416.34 cv
539.178 441.669 505.414 466.991 466.02 472.615 cv
426.625 478.244 395.671 441.662 353.465 436.039 cv
311.258 430.413 297.194 430.413 288.752 421.971 cv
280.31 413.528 274.682 419.157 274.682 368.508 cv
274.682 317.86 248.793 290.782 275.805 256.487 cv
302.816 222.191 311.827 231.208 311.827 231.208 cv
302.816 199.679 311.264 168.727 330.958 154.659 cv
350.653 140.591 443.188 111.519 441.941 124.647 cv
cp
.647059 .607843 .529412 rgb
f
794.59 113.477 mo
794.484 113.092 794.372 112.708 794.254 112.324 cv
783.773 78.3428 725.196 57.4888 696.016 46.8555 cv
642.673 27.4199 591.078 35.9941 541.585 62.2144 cv
502.085 83.1426 468.81 116.327 423.685 124.565 cv
401.686 128.584 378.975 129.183 358.396 138.914 cv
336.422 149.304 301.411 182.797 304.224 202.493 cv
311.758 191.409 372.297 194.576 380.199 202.493 cv
366.129 202.493 354.875 205.307 341.855 211.463 cv
329.798 217.165 319.172 225.5 307.86 232.572 cv
282.483 248.441 271.539 261.39 268.509 284.578 cv
280.747 317.181 277.556 379.749 324.71 378.529 cv
335.197 378.257 350.903 371.981 360.895 377.95 cv
369.31 382.979 371.775 390.224 374.964 399.183 cv
381.456 417.418 394.632 419.525 408.341 430.127 cv
409.198 430.792 409.966 431.513 410.737 432.225 cv
408.602 415.186 401.481 400.294 391 385.117 cv
384.892 376.268 378.549 367.522 373.079 358.254 cv
368.765 350.947 366.742 342.068 361.73 335.211 cv
355.09 326.132 344.442 341.677 337.306 343 cv
331.863 344.007 325.175 341.795 320.482 339.135 cv
309.432 332.871 299.232 323.159 296.539 310.509 cv
295.824 309.993 295.131 309.48 294.408 308.959 cv
291.585 306.922 294.301 302.186 297.156 304.25 cv
297.167 304.256 297.178 304.265 297.183 304.272 cv
298.738 303.556 301.14 304.32 301.325 306.604 cv
301.352 306.904 301.465 307.198 301.502 307.497 cv
310.087 314.038 319.588 321.428 330.606 320.694 cv
338.654 320.159 347.484 318.95 353.204 312.7 cv
354.429 311.366 355.477 310.307 357.069 309.468 cv
368.713 303.327 390.909 335.007 394.393 342.807 cv
400.777 357.115 404.208 370.312 416.937 380.42 cv
423.872 385.925 429.521 391.835 431.268 400.839 cv
431.651 402.814 431.891 404.817 432.067 406.824 cv
432.734 407.09 433.281 407.635 433.478 408.583 cv
436.908 425.164 450.942 444.79 466.818 441.683 cv
484.11 428.931 498.543 409.349 513.354 396.263 cv
553.76 360.564 601.288 341.079 650.295 321.256 cv
674.095 311.63 686.44 289.976 701.938 270.699 cv
723.235 244.208 746.025 228.545 779.512 221.982 cv
781.728 200.597 784.567 179.442 789.228 158.44 cv
792.359 144.33 798.568 128.012 794.59 113.477 cv
cp
.729412 .705882 .647059 rgb
f
567.704 268.776 mo
551.955 267.274 521.758 270.736 514.004 252.072 cv
508.965 239.954 503.069 232.865 489.819 229.81 cv
482.678 228.162 474.386 229.957 467.26 230.816 cv
452.129 232.647 442.299 223.852 431.294 215.708 cv
421.011 208.094 406.311 209.816 393.072 212.606 cv
360.645 208.328 325.755 219.702 300.533 240.286 cv
285.408 252.636 263.199 276.896 283.943 294.466 cv
313.399 319.413 373.495 289.986 405.524 288.577 cv
435.098 287.281 464.948 303.878 492.77 311.752 cv
510.77 316.845 530.322 317.994 548.915 317.701 cv
566.414 317.428 607.582 314.578 610.762 290.749 cv
613.44 270.672 580.441 269.993 567.704 268.776 cv
cp
.890196 .858824 .796078 rgb
f
712.887 71.0239 mo
688.215 35.3604 635.856 26.4814 599.972 49.3652 cv
580.949 53.6777 562.122 61.7651 544.775 69.2051 cv
527.361 76.6772 511.755 86.6509 496.598 97.4038 cv
489.905 99.5933 483.45 102.339 477.709 106.778 cv
467.089 114.993 457.643 124.158 446.229 131.393 cv
435.259 138.352 422.566 140.695 411.212 146.627 cv
409.811 147.36 408.454 148.132 407.073 148.887 cv
396.38 152.583 385.542 155.98 374.805 159.574 cv
384.439 149.998 395.835 142.935 409.827 138.967 cv
415.755 137.284 414.801 127.405 408.336 127.945 cv
371.247 131.045 313.074 150.144 302.972 191.136 cv
301.874 195.592 307.024 200.608 311.312 197.547 cv
316.558 193.8 323.05 191.889 329.76 190.653 cv
331.321 191.021 332.961 190.92 334.308 189.928 cv
334.318 189.917 334.329 189.91 334.345 189.902 cv
339.32 189.184 344.289 188.698 348.852 187.999 cv
365.022 185.521 378.453 179.234 392.434 170.959 cv
404.267 163.95 416.585 158.624 428.829 152.941 cv
431.96 151.689 435.076 150.385 438.159 149.006 cv
461.391 138.6 480.968 122.313 501.302 107.233 cv
512.656 103.021 525.598 101.021 536.483 96.3721 cv
556.236 87.9292 572.746 74.3633 593.294 67.1084 cv
605.067 62.9521 621.684 60.9287 639.003 60.9668 cv
645.993 61.5952 652.968 62.5923 659.95 63.7412 cv
671.032 66.7051 682.329 70.3174 694.541 73.4277 cv
698.786 75.7559 703.424 76.7988 709.411 77.0884 cv
712.333 77.2305 714.608 73.5078 712.887 71.0239 cv
cp
f
725.078 142.94 mo
718.683 136.868 715.194 129.513 714.597 120.873 cv
714.257 118.666 711.92 116.793 709.953 116.94 cv
684.529 118.813 665.335 91.5884 638.754 91.8613 cv
625.535 91.9971 612.115 97.4468 599.386 100.725 cv
582.157 105.164 564.913 101.055 547.827 106.2 cv
538.327 109.063 529.57 115.832 521.039 120.992 cv
509.236 128.129 496.375 130.528 484.473 136.628 cv
474.706 141.635 466.328 149.39 460.183 158.848 cv
451.294 168.488 446.495 182.236 450.964 196.322 cv
461.461 229.469 505.994 205.655 523.846 199.725 cv
544.456 192.88 567.905 201.422 588.644 202.521 cv
603.12 203.288 613.579 189.718 622.702 179.44 cv
632.495 168.418 642.764 162.429 655.583 156.676 cv
675.502 147.743 672.268 161.849 684.57 165.608 cv
698.312 169.807 714.337 160.913 725.078 152.308 cv
727.885 150.058 728.567 145.027 725.078 142.94 cv
cp
f
903.768 167.747 mo
903.64 164.895 901.946 162.592 899.199 161.746 cv
838.751 143.097 796.421 103.953 748.725 64.918 cv
720.316 41.667 692.149 30.25 655.428 29.2632 cv
548.638 26.3867 472.821 105.933 384.37 152.359 cv
382.596 153.291 383.842 156.355 385.749 155.628 cv
495.981 113.64 620.034 -20.7129 739.799 73.8438 cv
765.011 93.7505 787.299 116.234 813.97 134.418 cv
829.084 144.72 845.259 153.313 861.802 161.058 cv
875.686 167.561 890.527 167.406 892.817 184.77 cv
897.377 219.307 921.013 249.985 899.162 283.883 cv
881.619 311.094 847.576 323.731 833.031 353.365 cv
831.695 356.086 834.784 358.24 837.043 356.465 cv
865.188 334.336 900.023 310.709 916.715 278.163 cv
934.056 244.353 905.313 201.833 903.768 167.747 cv
cp
.529412 .466667 .345098 rgb
f
912.662 271.586 mo
912.544 270.151 910.622 269.842 910.152 271.247 cv
897.537 308.98 889.644 345.1 867.51 379.288 cv
845.152 413.822 813.273 431.569 773.313 436.092 cv
741.636 439.684 709.283 438.766 677.573 436.305 cv
648.504 434.045 607.901 431.307 584.164 411.897 cv
577.086 406.104 566.893 416.173 574.046 422.021 cv
596.926 440.726 629.366 444.793 657.682 448.554 cv
699.019 454.039 742.163 454.635 783.528 449.161 cv
860.752 438.937 918.883 346.841 912.662 271.586 cv
cp
f
636.521 324.537 mo
594.017 351.67 580.922 406.64 538.124 435.176 cv
514.541 450.896 484.679 465.502 456.193 468.141 cv
426.14 470.934 394.532 451.314 371.386 434.311 cv
357.086 423.808 337.684 414.355 319.497 417.788 cv
272.294 426.697 282.745 385.633 280.886 358.118 cv
279.603 339.18 273.828 320.521 270.527 301.887 cv
264.568 268.255 285.37 248.213 311.827 231.208 cv
313.793 229.946 315.04 227.511 314.288 225.165 cv
290.595 151.145 391.113 136.618 440.993 120.523 cv
442.559 120.018 441.92 117.686 440.311 118.059 cv
392.971 129.056 308.766 135.554 300.042 197.081 cv
299.424 201.434 299.483 205.953 300.074 210.307 cv
302.193 225.998 297.885 226.74 285.365 236.322 cv
273.067 245.728 264.125 257.643 259.259 272.29 cv
248.34 305.167 269.589 345.519 268.557 379.061 cv
267.816 403.074 276.598 437.094 309.139 432.288 cv
359.493 424.853 394.478 473.829 444.225 480.412 cv
481.223 485.303 531.759 458.864 558.41 435.789 cv
591.754 406.91 615.533 364.369 640.373 328.383 cv
641.987 326.046 638.839 323.061 636.521 324.537 cv
cp
f
787.028 160.894 mo
787.124 160.573 786.649 160.456 786.537 160.76 cv
782.378 171.698 780.243 182.345 778.814 193.886 cv
777.782 202.255 782.292 219.825 771.854 219.848 cv
755.467 219.886 739.691 231.938 727.454 241.3 cv
699.631 262.591 664.328 295.491 653.527 329.95 cv
652.995 331.646 655.306 333.001 656.52 331.691 cv
673.122 313.714 686.829 293.458 703.349 275.343 cv
721.495 255.449 750.354 224.032 779.859 225.866 cv
781.307 225.957 782.649 224.553 782.596 223.13 cv
781.809 201.997 781.009 181.447 787.028 160.894 cv
cp
f
426.07 153.699 mo
422.572 167.438 418.903 205.757 400.219 201.142 cv
384.86 197.351 367.435 201.212 352.49 205.048 cv
325.511 211.975 287.624 228.721 272.305 252.991 cv
270.803 255.377 273.653 257.427 275.805 256.487 cv
293.598 248.735 308.841 234.797 326.229 225.74 cv
352.879 211.865 382.501 205.389 411.914 213.084 cv
414.033 213.642 416.144 212.408 416.767 210.332 cv
422.321 191.916 424.899 173.112 427.552 154.108 cv
427.684 153.159 426.321 152.712 426.07 153.699 cv
cp
f
376.989 351.67 mo
374.043 344.923 363.717 325.813 353.268 330.016 cv
346.887 332.583 342.457 336.299 336.913 340.464 cv
324.413 349.86 297.769 310.461 296.021 305.994 cv
295.671 305.094 294.248 305.436 294.541 306.402 cv
299.058 321.115 320.936 354.222 340.013 345.775 cv
342.696 344.09 345.342 342.357 347.963 340.576 cv
360.591 343.183 368.388 349.676 371.354 360.056 cv
374.352 367.657 379.763 372.882 385.27 378.704 cv
394.288 388.238 402.521 398.354 407.452 410.616 cv
411.6 420.936 409.077 433.72 410.407 444.644 cv
410.689 446.99 413.811 448.372 415.174 445.933 cv
437.968 405.104 390.869 383.475 376.989 351.67 cv
cp
f
609.169 309.177 mo
579.238 314.677 554.415 321.927 523.292 319.006 cv
493.249 316.189 463.831 308.249 433.733 305.175 cv
432.556 305.054 432.382 306.882 433.462 307.182 cv
483.428 321.197 567.468 359.29 613.147 316.013 cv
616.338 312.987 612.951 308.482 609.169 309.177 cv
cp
f
647.244 70.3496 mo
620.806 80.6553 593.421 74.7563 567.282 83.3667 cv
542.183 91.6367 523.489 108.783 496.034 111.345 cv
494.745 111.465 494.699 113.423 496.034 113.39 cv
520.405 112.773 539.94 101.9 562.026 92.8862 cv
591.003 81.0586 622.191 93.5703 650.395 77.8237 cv
654.363 75.6099 651.631 68.6406 647.244 70.3496 cv
cp
f
184.639 1661.24 mo
184.639 1661.24 232.122 1624.4 261.347 1609.66 cv
290.573 1594.92 353.041 1569.69 396.711 1580.05 cv
440.384 1590.42 463.501 1613.74 502.033 1644.83 cv
540.564 1675.92 581.665 1694.06 594.51 1699.24 cv
607.355 1704.42 620.2 1792.52 607.355 1810.65 cv
607.355 1833.97 586.798 1909.11 543.132 1935.02 cv
499.467 1960.94 453.224 1958.34 406.984 1953.16 cv
360.748 1947.98 327.353 1940.2 304.236 1929.84 cv
273.409 1953.16 242.584 1976.48 206.621 1981.66 cv
170.656 1986.84 142.397 1953.16 103.865 1947.98 cv
65.333 1942.8 52.4927 1942.8 44.7861 1935.02 cv
37.0791 1927.25 31.9409 1932.43 31.9409 1885.79 cv
31.9409 1839.16 8.30664 1814.22 32.9658 1782.64 cv
57.626 1751.06 65.8525 1759.36 65.8525 1759.36 cv
57.626 1730.33 65.3384 1701.83 83.3179 1688.88 cv
101.297 1675.92 185.776 1649.15 184.639 1661.24 cv
cp
.647059 .607843 .529412 rgb
f
506.584 1650.95 mo
506.488 1650.6 506.386 1650.25 506.277 1649.89 cv
496.709 1618.6 443.232 1599.4 416.592 1589.61 cv
367.894 1571.71 320.791 1579.61 275.606 1603.75 cv
239.546 1623.02 209.168 1653.58 167.971 1661.17 cv
147.888 1664.86 127.154 1665.42 108.368 1674.38 cv
88.3057 1683.94 56.3428 1714.79 58.9106 1732.92 cv
65.7891 1722.71 121.058 1725.63 128.272 1732.92 cv
115.427 1732.92 105.153 1735.51 93.2666 1741.18 cv
82.2578 1746.43 72.5576 1754.11 62.231 1760.62 cv
39.0625 1775.23 29.0713 1787.16 26.3062 1808.51 cv
37.4775 1838.53 34.5649 1896.14 77.6143 1895.02 cv
87.1875 1894.77 101.526 1888.99 110.647 1894.49 cv
118.331 1899.12 120.582 1905.79 123.493 1914.04 cv
129.42 1930.83 141.448 1932.77 153.963 1942.53 cv
154.746 1943.15 155.447 1943.81 156.151 1944.47 cv
154.202 1928.78 147.701 1915.06 138.133 1901.09 cv
132.556 1892.94 126.766 1884.88 121.771 1876.35 cv
117.833 1869.62 115.987 1861.45 111.41 1855.13 cv
105.349 1846.77 95.6279 1861.09 89.1128 1862.31 cv
84.1445 1863.23 78.0381 1861.19 73.7539 1858.75 cv
63.666 1852.98 54.354 1844.04 51.8955 1832.39 cv
51.2427 1831.91 50.6104 1831.44 49.9497 1830.96 cv
47.373 1829.08 49.8525 1824.72 52.4585 1826.62 cv
52.4683 1826.63 52.4785 1826.64 52.4829 1826.64 cv
53.9028 1825.98 56.0957 1826.69 56.2646 1828.79 cv
56.2891 1829.07 56.3921 1829.34 56.4268 1829.61 cv
64.2637 1835.64 72.9375 1842.44 82.9961 1841.76 cv
90.3433 1841.27 98.4048 1840.16 103.627 1834.4 cv
104.745 1833.17 105.702 1832.2 107.156 1831.43 cv
117.786 1825.77 138.049 1854.94 141.23 1862.13 cv
147.058 1875.3 150.19 1887.45 161.811 1896.76 cv
168.142 1901.83 173.3 1907.27 174.894 1915.56 cv
175.244 1917.38 175.463 1919.23 175.625 1921.08 cv
176.232 1921.32 176.732 1921.82 176.912 1922.7 cv
180.043 1937.96 192.855 1956.04 207.349 1953.17 cv
223.136 1941.43 236.313 1923.4 249.834 1911.35 cv
286.722 1878.48 330.111 1860.54 374.853 1842.28 cv
396.58 1833.42 407.851 1813.48 421.999 1795.73 cv
441.442 1771.33 462.248 1756.91 492.82 1750.87 cv
494.842 1731.18 497.434 1711.7 501.689 1692.36 cv
504.547 1679.36 510.216 1664.34 506.584 1650.95 cv
cp
.729412 .705882 .647059 rgb
f
299.452 1793.96 mo
285.074 1792.57 257.506 1795.76 250.427 1778.58 cv
245.827 1767.42 240.444 1760.89 228.348 1758.08 cv
221.828 1756.56 214.258 1758.21 207.753 1759 cv
193.94 1760.69 184.964 1752.59 174.918 1745.09 cv
165.53 1738.08 152.11 1739.66 140.024 1742.23 cv
110.419 1738.29 78.5684 1748.77 55.541 1767.72 cv
41.7329 1779.1 21.458 1801.44 40.396 1817.61 cv
67.2871 1840.58 122.151 1813.49 151.392 1812.19 cv
178.391 1811 205.642 1826.28 231.042 1833.53 cv
247.475 1838.22 265.324 1839.28 282.298 1839.01 cv
298.274 1838.76 335.858 1836.13 338.761 1814.19 cv
341.206 1795.7 311.08 1795.08 299.452 1793.96 cv
cp
.890196 .858824 .796078 rgb
f
431.995 1611.86 mo
409.47 1579.02 361.67 1570.85 328.91 1591.92 cv
311.544 1595.89 294.355 1603.33 278.519 1610.19 cv
262.622 1617.07 248.374 1626.25 234.537 1636.15 cv
228.426 1638.17 222.533 1640.7 217.292 1644.79 cv
207.597 1652.35 198.972 1660.79 188.552 1667.45 cv
178.537 1673.86 166.95 1676.02 156.585 1681.48 cv
155.305 1682.15 154.066 1682.86 152.806 1683.56 cv
143.044 1686.96 133.148 1690.09 123.347 1693.4 cv
132.143 1684.58 142.546 1678.08 155.32 1674.43 cv
160.732 1672.88 159.861 1663.78 153.958 1664.28 cv
120.099 1667.13 66.9912 1684.72 57.7681 1722.46 cv
56.7661 1726.57 61.4678 1731.19 65.3818 1728.37 cv
70.1709 1724.92 76.0986 1723.16 82.2236 1722.02 cv
83.6489 1722.36 85.1465 1722.27 86.3765 1721.35 cv
86.3848 1721.34 86.395 1721.34 86.4097 1721.33 cv
90.9517 1720.67 95.4878 1720.22 99.6543 1719.58 cv
114.417 1717.29 126.678 1711.5 139.441 1703.88 cv
150.243 1697.43 161.49 1692.53 172.667 1687.29 cv
175.526 1686.14 178.37 1684.94 181.186 1683.67 cv
202.395 1674.09 220.267 1659.09 238.831 1645.2 cv
249.196 1641.33 261.011 1639.48 270.949 1635.2 cv
288.983 1627.43 304.054 1614.94 322.814 1608.25 cv
333.562 1604.43 348.732 1602.57 364.544 1602.6 cv
370.924 1603.18 377.292 1604.1 383.667 1605.16 cv
393.784 1607.88 404.097 1611.21 415.246 1614.07 cv
419.121 1616.22 423.356 1617.18 428.821 1617.45 cv
431.489 1617.58 433.566 1614.15 431.995 1611.86 cv
cp
f
443.124 1678.08 mo
437.287 1672.49 434.1 1665.72 433.556 1657.76 cv
433.245 1655.73 431.112 1654.01 429.317 1654.14 cv
406.106 1655.87 388.583 1630.8 364.315 1631.05 cv
352.248 1631.17 339.997 1636.19 328.376 1639.21 cv
312.646 1643.3 296.904 1639.51 281.305 1644.25 cv
272.632 1646.89 264.638 1653.12 256.85 1657.87 cv
246.075 1664.45 234.333 1666.66 223.467 1672.27 cv
214.55 1676.88 206.902 1684.02 201.291 1692.73 cv
193.177 1701.61 188.795 1714.27 192.875 1727.24 cv
202.459 1757.76 243.114 1735.83 259.412 1730.37 cv
278.227 1724.07 299.635 1731.93 318.568 1732.95 cv
331.784 1733.65 341.333 1721.16 349.661 1711.7 cv
358.602 1701.54 367.977 1696.03 379.68 1690.73 cv
397.864 1682.51 394.913 1695.5 406.143 1698.96 cv
418.688 1702.82 433.318 1694.63 443.124 1686.71 cv
445.687 1684.64 446.31 1680.01 443.124 1678.08 cv
cp
f
606.257 1700.93 mo
606.14 1698.3 604.594 1696.18 602.086 1695.4 cv
546.901 1678.23 508.256 1642.18 464.712 1606.24 cv
438.777 1584.83 413.063 1574.31 379.539 1573.41 cv
282.045 1570.76 212.83 1644.01 132.08 1686.76 cv
130.46 1687.62 131.598 1690.44 133.339 1689.77 cv
233.973 1651.1 347.225 1527.39 456.563 1614.46 cv
479.58 1632.79 499.928 1653.49 524.277 1670.24 cv
538.075 1679.72 552.842 1687.63 567.945 1694.77 cv
580.619 1700.76 594.169 1700.61 596.26 1716.6 cv
600.423 1748.4 622 1776.65 602.051 1807.87 cv
586.036 1832.92 554.957 1844.56 541.679 1871.85 cv
540.459 1874.35 543.278 1876.34 545.341 1874.7 cv
571.036 1854.33 602.838 1832.57 618.077 1802.6 cv
633.908 1771.47 607.667 1732.31 606.257 1700.93 cv
cp
.529412 .466667 .345098 rgb
f
614.376 1796.54 mo
614.269 1795.22 612.515 1794.94 612.085 1796.23 cv
600.568 1830.98 593.363 1864.24 573.156 1895.72 cv
552.745 1927.52 523.642 1943.86 487.16 1948.03 cv
458.241 1951.33 428.705 1950.49 399.756 1948.22 cv
373.218 1946.14 336.149 1943.62 314.479 1925.75 cv
308.018 1920.41 298.712 1929.68 305.242 1935.07 cv
326.129 1952.29 355.745 1956.04 381.596 1959.5 cv
419.334 1964.55 458.721 1965.1 496.485 1960.06 cv
566.987 1950.65 620.056 1865.84 614.376 1796.54 cv
cp
f
362.278 1845.3 mo
323.474 1870.29 311.519 1920.91 272.448 1947.18 cv
250.917 1961.66 223.655 1975.11 197.65 1977.54 cv
170.212 1980.11 141.356 1962.04 120.226 1946.39 cv
107.171 1936.71 89.458 1928.01 72.8545 1931.17 cv
29.7617 1939.38 39.3022 1901.56 37.605 1876.23 cv
36.4336 1858.79 31.1611 1841.6 28.1475 1824.45 cv
22.708 1793.48 41.6987 1775.02 65.8525 1759.36 cv
67.6475 1758.2 68.7856 1755.96 68.0991 1753.8 cv
46.4683 1685.64 138.235 1672.26 183.773 1657.44 cv
185.202 1656.98 184.618 1654.83 183.15 1655.17 cv
139.932 1665.3 63.0571 1671.28 55.0928 1727.94 cv
54.5283 1731.95 54.5825 1736.11 55.1221 1740.12 cv
57.0571 1754.57 53.1235 1755.25 41.6948 1764.07 cv
30.4668 1772.73 22.3042 1783.71 17.8604 1797.19 cv
7.89307 1827.47 27.2915 1864.63 26.3496 1895.51 cv
25.6733 1917.62 33.6899 1948.95 63.3979 1944.52 cv
109.368 1937.68 141.308 1982.78 186.723 1988.84 cv
220.5 1993.34 266.637 1969 290.968 1947.75 cv
321.408 1921.16 343.116 1881.98 365.794 1848.85 cv
367.268 1846.69 364.394 1843.94 362.278 1845.3 cv
cp
f
499.681 1694.62 mo
499.769 1694.32 499.335 1694.21 499.232 1694.49 cv
495.436 1704.56 493.486 1714.37 492.182 1725 cv
491.24 1732.7 495.358 1748.88 485.828 1748.9 cv
470.868 1748.94 456.465 1760.04 445.293 1768.66 cv
419.894 1788.26 387.664 1818.56 377.803 1850.29 cv
377.317 1851.85 379.427 1853.1 380.535 1851.89 cv
395.691 1835.34 408.205 1816.69 423.286 1800 cv
439.854 1781.68 466.2 1752.76 493.136 1754.44 cv
494.458 1754.53 495.683 1753.24 495.635 1751.93 cv
494.915 1732.46 494.185 1713.54 499.681 1694.62 cv
cp
f
170.15 1687.99 mo
166.956 1700.64 163.605 1735.93 146.548 1731.68 cv
132.527 1728.19 116.619 1731.74 102.975 1735.27 cv
78.3442 1741.65 43.7554 1757.07 29.771 1779.42 cv
28.4004 1781.62 31.002 1783.51 32.9658 1782.64 cv
49.2095 1775.5 63.1255 1762.67 79 1754.33 cv
103.33 1741.55 130.374 1735.59 157.225 1742.67 cv
159.16 1743.19 161.086 1742.05 161.656 1740.14 cv
166.727 1723.18 169.08 1705.87 171.503 1688.37 cv
171.623 1687.5 170.379 1687.08 170.15 1687.99 cv
cp
f
125.341 1870.29 mo
122.651 1864.08 113.225 1846.48 103.685 1850.35 cv
97.8594 1852.71 93.8149 1856.13 88.7539 1859.97 cv
77.3418 1868.62 53.0186 1832.34 51.4219 1828.23 cv
51.1035 1827.4 49.8032 1827.71 50.0708 1828.6 cv
54.1948 1842.15 74.168 1872.64 91.5835 1864.86 cv
94.0332 1863.31 96.4492 1861.71 98.8423 1860.07 cv
110.371 1862.47 117.489 1868.45 120.197 1878.01 cv
122.933 1885.01 127.874 1889.82 132.901 1895.18 cv
141.134 1903.96 148.65 1913.28 153.151 1924.57 cv
156.938 1934.07 154.635 1945.84 155.85 1955.9 cv
156.107 1958.06 158.957 1959.33 160.202 1957.09 cv
181.011 1919.49 138.012 1899.58 125.341 1870.29 cv
cp
f
337.307 1831.16 mo
309.981 1836.22 287.32 1842.9 258.906 1840.21 cv
231.479 1837.62 204.622 1830.3 177.145 1827.47 cv
176.07 1827.36 175.912 1829.05 176.897 1829.32 cv
222.513 1842.23 299.236 1877.3 340.938 1837.46 cv
343.852 1834.67 340.759 1830.52 337.307 1831.16 cv
cp
f
372.066 1611.24 mo
347.931 1620.73 322.93 1615.3 299.067 1623.23 cv
276.152 1630.84 259.085 1646.63 234.022 1648.99 cv
232.845 1649.1 232.803 1650.9 234.022 1650.87 cv
256.271 1650.31 274.105 1640.29 294.268 1631.99 cv
320.722 1621.1 349.195 1632.62 374.944 1618.12 cv
378.566 1616.08 376.071 1609.67 372.066 1611.24 cv
cp
f
873.545 1356.12 mo
864.992 1329.27 860.109 1298.75 783.197 1277.99 cv
769.765 1264.55 746.567 1241.36 727.033 1210.84 cv
707.508 1180.31 692.853 1162 634.251 1190.08 cv
625.698 1176.65 609.825 1149.79 582.965 1149.79 cv
569.816 1149.79 553.485 1155.48 535.896 1165.65 cv
535.381 1168.55 533.552 1171.22 530.012 1172.42 cv
520.88 1175.53 513.123 1181.4 506.11 1187.89 cv
504.589 1189.29 502.924 1190.02 501.274 1190.23 cv
499.564 1191.66 497.847 1193.11 496.134 1194.61 cv
489.187 1202.37 481.152 1209.25 473.201 1215.82 cv
471.21 1217.48 468.997 1218.06 466.891 1217.93 cv
445.63 1230.54 431.174 1228.16 418.149 1232.81 cv
410.899 1235.4 402.998 1241.5 394.168 1248.87 cv
393.252 1250.07 392.356 1251.28 391.398 1252.45 cv
390.279 1253.82 388.706 1254.6 387.018 1254.89 cv
376.753 1263.55 365.292 1273.05 352.225 1280.42 cv
335.126 1287.75 314.372 1292.64 304.598 1298.73 cv
294.833 1304.85 247.215 1326.83 248.435 1378.1 cv
249.666 1429.38 271.633 1453.8 304.598 1461.12 cv
337.569 1468.45 407.166 1453.8 449.897 1441.58 cv
495.071 1446.47 496.292 1453.8 535.353 1456.24 cv
574.425 1458.68 624.473 1455.02 676.978 1464.79 cv
729.478 1474.55 780.75 1485.54 800.294 1475.77 cv
819.827 1466.01 835.702 1451.36 845.465 1431.82 cv
867.438 1404.96 882.098 1382.98 873.545 1356.12 cv
cp
.647059 .607843 .529412 rgb
f
736.289 1226.99 mo
730.844 1207.76 721.21 1188.47 703.482 1178.02 cv
686.132 1167.81 656.904 1176.08 639.959 1183.04 cv
638.132 1183.79 636.991 1185.12 636.415 1186.64 cv
634.671 1186 632.212 1187.45 633.073 1189.52 cv
640.408 1206.96 652.055 1220.76 670.282 1227.62 cv
691.295 1235.52 712.562 1246.57 733.618 1233.55 cv
735.825 1232.19 737.01 1229.54 736.289 1226.99 cv
cp
.729412 .705882 .647059 rgb
f
771.342 1280.89 mo
768.922 1279.9 766.439 1278.99 763.81 1278.26 cv
738.328 1271.13 717.375 1278.98 693.708 1260.68 cv
666.91 1239.95 644.609 1207.86 629.919 1177.74 cv
611.64 1140.22 570.312 1146.93 535.987 1162.7 cv
536.459 1166.59 534.738 1170.81 530.012 1172.42 cv
520.88 1175.53 513.123 1181.4 506.11 1187.89 cv
504.135 1189.71 501.931 1190.38 499.838 1190.26 cv
492.134 1199.85 482.602 1208.05 473.201 1215.82 cv
470.232 1218.27 466.824 1218.4 463.967 1217.26 cv
452.282 1222.91 438.368 1225.7 427.024 1229.36 cv
407.74 1235.58 392.603 1246.34 387.388 1266.47 cv
382.658 1284.74 378.011 1318.42 387.347 1336.52 cv
401.881 1364.68 398.53 1388.34 425.426 1409.01 cv
429.393 1412.06 434.415 1407.83 434.622 1403.73 cv
435.702 1383.73 417.519 1363.62 428.521 1343.78 cv
430.087 1340.96 430.418 1339.48 430.48 1338.92 cv
430.553 1339.43 430.972 1340.62 432.771 1342.1 cv
441.299 1349.12 450.001 1355.78 458.9 1362.34 cv
473.881 1373.38 507.84 1399.46 527.608 1381.39 cv
543.155 1367.19 526.971 1354.38 517.3 1341.22 cv
510.989 1332.65 523.575 1339.89 526.346 1340.83 cv
536.218 1344.17 547.639 1344.87 557.844 1346.93 cv
582.621 1351.94 592.656 1375.7 612.501 1387.79 cv
649.867 1410.55 674.875 1370.91 712.058 1368.03 cv
742.494 1365.67 789.84 1385.58 814.58 1356.44 cv
837.625 1329.31 803.38 1283.37 771.342 1280.89 cv
cp
f
415.368 1309.87 mo
411.785 1299.09 409.658 1290.19 410.299 1278.57 cv
410.6 1273.37 403.701 1264.04 405.704 1259.63 cv
408.997 1252.34 403.193 1245.65 397.254 1245.07 cv
396.643 1245.79 395.569 1247.07 396.086 1246.39 cv
394.552 1248.42 393.021 1250.47 391.398 1252.45 cv
390.049 1254.11 388.032 1254.87 385.947 1254.97 cv
381.541 1257.91 377.583 1261.54 373.08 1266.02 cv
359.006 1279.97 351.333 1286.6 331.801 1290.82 cv
307.476 1296.09 282.188 1311.94 264.205 1328.98 cv
248.671 1343.7 225.499 1414.35 260.188 1422.12 cv
270.942 1424.53 281.508 1398.93 286.464 1393.04 cv
284.98 1394.81 293.915 1409.89 294.535 1410.8 cv
297.964 1415.83 305.665 1421.49 312.101 1421.52 cv
320.482 1421.56 328.497 1421.04 334.71 1414.48 cv
346.417 1402.15 346.182 1402.02 364.986 1402.66 cv
371.411 1402.89 379.863 1402.91 383.765 1396.32 cv
387.737 1389.61 390.659 1356.15 401.851 1358.26 cv
406.824 1359.2 410.544 1356.91 412.373 1352.29 cv
417.125 1340.26 419.552 1322.43 415.368 1309.87 cv
cp
f
555.542 1154.4 mo
548.995 1156.28 542.41 1159.03 535.927 1162.4 cv
536.534 1166.37 534.864 1170.77 530.012 1172.42 cv
520.88 1175.53 513.123 1181.4 506.11 1187.89 cv
503.682 1190.13 500.896 1190.62 498.388 1190.05 cv
494.557 1193.8 490.872 1197.64 487.546 1201.58 cv
487.462 1204.54 485.993 1207.46 483.259 1208.9 cv
479.922 1210.65 476.754 1212.78 473.013 1213.61 cv
472.751 1213.67 472.505 1213.61 472.243 1213.65 cv
469.978 1216.33 468.228 1219.31 467.204 1222.64 cv
463.378 1235.13 466.731 1249.76 481.076 1254 cv
498.06 1259.04 511.934 1251.53 526.235 1242.73 cv
551.192 1227.38 581.974 1207.81 597.109 1181.98 cv
613.147 1154.62 573.051 1149.35 555.542 1154.4 cv
cp
.890196 .858824 .796078 rgb
f
445.167 1226.4 mo
429.005 1229.77 415.559 1233.74 401.698 1243.04 cv
392.447 1249.25 381.809 1255.62 375.846 1265.32 cv
373.355 1269.38 378.111 1273.07 381.863 1271.34 cv
391.366 1266.95 400.465 1261.58 409.013 1255.55 cv
421.004 1247.08 435.386 1240.88 448.331 1233.93 cv
452.625 1231.62 449.566 1225.49 445.167 1226.4 cv
cp
f
411.359 1243.78 mo
403.147 1241.32 395.624 1248.34 389.604 1253 cv
381.69 1259.14 374.038 1266.05 368.635 1274.51 cv
368.282 1275.06 368.741 1275.75 369.338 1275.75 cv
377.685 1275.93 385.04 1271.05 391.417 1266.02 cv
395.897 1262.48 399.994 1258.54 404.623 1255.17 cv
407.868 1252.81 410.899 1250.37 412.506 1246.6 cv
412.995 1245.46 412.656 1244.17 411.359 1243.78 cv
cp
f
462.927 1261.91 mo
456.761 1256.66 448.253 1259.74 441.696 1262.36 cv
436.405 1264.46 431.916 1268.07 427.358 1271.39 cv
424.554 1273.44 412.34 1267.9 409.401 1267.89 cv
401.604 1267.87 398.98 1268.22 391.338 1269.8 cv
387.655 1270.57 385.18 1275.49 381.084 1274.64 cv
373.551 1273.09 368.433 1272.65 361.915 1278.03 cv
340.721 1295.56 309.418 1287.72 291.291 1310.15 cv
290.278 1311.4 289.565 1312.86 289.137 1314.36 cv
275.798 1327.14 256.487 1339.14 256.273 1359.17 cv
256.246 1362.64 259.147 1365.32 262.51 1365.41 cv
277.223 1365.8 290.148 1360.52 305.243 1361.63 cv
312.161 1362.13 319.947 1361.66 324.857 1355.76 cv
329.914 1349.69 338.884 1330.05 348.966 1340.14 cv
353.822 1344.99 364.012 1349.02 370.471 1344.55 cv
379.526 1338.29 383.646 1330.66 389.418 1321.27 cv
395.045 1312.11 413.418 1330.8 421.722 1327.94 cv
428.681 1325.54 433.991 1323.04 436.802 1315.63 cv
442.438 1300.77 454.64 1310.92 462.909 1302.58 cv
473.927 1291.47 475.223 1272.35 462.927 1261.91 cv
cp
f
742.399 1309.98 mo
733.681 1303.35 723.661 1301.09 712.871 1299.81 cv
695.583 1297.77 676.719 1289.6 659.102 1292.69 cv
638.232 1296.35 620.792 1297.05 599.861 1296.37 cv
593.789 1296.18 588.81 1298.77 584.39 1302.3 cv
581.696 1302.75 579.544 1303.66 575.805 1305.57 cv
564.752 1311.21 546.758 1297.18 537.29 1293.6 cv
522.933 1288.18 512.411 1296.09 505.547 1308.34 cv
504.634 1309.96 505.742 1312.75 507.915 1312.47 cv
521.163 1310.74 533.004 1310.87 545.595 1315.87 cv
555.712 1319.89 564.801 1323.17 575.678 1323.56 cv
582.601 1323.82 588.608 1319.25 596.673 1319.63 cv
611.018 1320.3 625.329 1322.62 639.571 1323.24 cv
653.5 1323.84 670.568 1317.17 682.496 1326.75 cv
688.124 1331.27 692.038 1338.25 699.532 1340.3 cv
718.377 1345.46 734.612 1340.65 746.348 1325.05 cv
750.264 1319.84 746.715 1313.28 742.399 1309.98 cv
cp
f
452.082 1437.38 mo
385.099 1447.8 288.329 1496.85 255.893 1407.39 cv
236.792 1354.7 276.039 1310.67 324.235 1296.14 cv
347.24 1289.2 381.797 1285.11 395.254 1262.38 cv
395.415 1262.1 395.052 1261.85 394.82 1262.04 cv
377.32 1277.46 350.601 1279.59 328.889 1285.12 cv
308.372 1290.33 291.92 1297.47 275.439 1310.76 cv
242.239 1337.51 232.446 1380.22 249.306 1419.14 cv
287.249 1506.74 385.836 1458.88 455.147 1448.49 cv
462.462 1447.39 459.369 1436.25 452.082 1437.38 cv
cp
.529412 .466667 .345098 rgb
f
843.501 1420.08 mo
831.408 1437.66 824.6 1452.89 803.428 1461.51 cv
785.176 1468.93 764.132 1468.12 744.875 1466.81 cv
708.083 1464.31 672.205 1454.21 635.585 1450.22 cv
597.35 1446.04 558.491 1451.32 520.078 1447.44 cv
465.752 1441.96 433.086 1414.53 406.203 1368.85 cv
405.198 1367.13 402.928 1368.35 403.193 1370.11 cv
420.164 1481.18 555.945 1459.95 635.585 1466.68 cv
683.082 1470.69 728.683 1486.39 776.843 1483.57 cv
811.68 1481.53 850.846 1461.28 855.772 1423.4 cv
856.704 1416.28 846.788 1415.3 843.501 1420.08 cv
cp
f
880.522 1353.09 mo
873.073 1316.41 848.012 1288.73 813.187 1276.94 cv
804.898 1274.14 796.02 1272.45 787.024 1271.5 cv
752.612 1255.62 738.937 1203.93 710.558 1179.7 cv
689.266 1161.53 651.009 1168.92 631.794 1186.46 cv
629.355 1188.69 631.386 1192.4 634.308 1192.55 cv
653.3 1193.58 669.188 1180.17 688.777 1183.37 cv
709.274 1186.71 724.104 1214.08 734.116 1229.98 cv
742.9 1243.89 753.507 1260.6 767.522 1270.52 cv
763.77 1270.52 760.048 1270.59 756.404 1270.75 cv
738.145 1271.59 720.056 1272.99 703.085 1264.4 cv
691.093 1258.34 682.29 1245.23 671.722 1237.05 cv
670.617 1236.2 669.188 1237.52 670.162 1238.6 cv
688.777 1258.98 696.436 1278.87 727.103 1281.92 cv
767.178 1285.88 809.367 1280.31 840.953 1310.61 cv
867.053 1335.64 877.45 1384.41 849.931 1411.23 cv
825.139 1435.4 787.99 1429.49 758.044 1440.02 cv
755.228 1441.01 755.113 1444.9 758.044 1445.84 cv
788.21 1455.6 829.238 1444.34 855.2 1427.52 cv
881.269 1410.65 886.301 1381.6 880.522 1353.09 cv
cp
f
669.886 1225.69 mo
638.22 1202.77 631.603 1156.04 591.369 1143.38 cv
568.256 1136.1 548.482 1152.55 524.809 1167.79 cv
505.641 1181.2 477.872 1227.18 425.366 1246.7 cv
424.346 1247.86 423.375 1249.06 422.322 1250.19 cv
440.724 1240.78 459.532 1233.11 474.991 1219.51 cv
502.75 1195.12 556.656 1144.11 596.823 1161.27 cv
627.477 1174.35 635.434 1215.97 667.117 1230.42 cv
670.349 1231.9 672.756 1227.77 669.886 1225.69 cv
cp
f
519.278 1173.87 mo
506.872 1180.83 498.039 1189.98 488.244 1200.24 cv
467.602 1221.83 444.809 1221.74 418.935 1231.13 cv
382.649 1244.3 366.11 1286.7 324.201 1290.18 cv
322.453 1290.32 322.434 1293.04 324.201 1292.92 cv
358.97 1290.35 381.397 1260.96 407.877 1241.75 cv
426.946 1227.92 453.632 1233.11 471.785 1220.12 cv
490.027 1207.05 500.958 1187.15 519.823 1174.81 cv
520.412 1174.43 519.889 1173.51 519.278 1173.87 cv
cp
f
1685.06 1850.52 mo
1677.82 1827.6 1673.69 1801.55 1608.6 1783.83 cv
1597.23 1772.36 1577.6 1752.56 1561.06 1726.5 cv
1544.54 1700.45 1532.14 1684.82 1482.54 1708.79 cv
1475.3 1697.32 1461.87 1674.39 1439.14 1674.39 cv
1428.01 1674.39 1414.19 1679.25 1399.3 1687.93 cv
1398.87 1690.41 1397.32 1692.69 1394.32 1693.71 cv
1386.59 1696.36 1380.03 1701.38 1374.09 1706.91 cv
1372.8 1708.11 1371.39 1708.73 1370 1708.91 cv
1368.55 1710.13 1367.1 1711.37 1365.65 1712.65 cv
1359.77 1719.28 1352.97 1725.15 1346.24 1730.76 cv
1344.55 1732.18 1342.68 1732.67 1340.9 1732.56 cv
1322.91 1743.33 1310.67 1741.29 1299.65 1745.26 cv
1293.51 1747.47 1286.83 1752.68 1279.35 1758.97 cv
1278.58 1760 1277.82 1761.03 1277.01 1762.02 cv
1276.06 1763.2 1274.73 1763.86 1273.3 1764.11 cv
1264.61 1771.5 1254.91 1779.61 1243.85 1785.91 cv
1229.38 1792.16 1211.82 1796.33 1203.55 1801.54 cv
1195.28 1806.75 1154.98 1825.52 1156.01 1869.29 cv
1157.06 1913.06 1175.65 1933.9 1203.55 1940.15 cv
1231.45 1946.41 1290.35 1933.9 1326.52 1923.48 cv
1364.75 1927.65 1365.78 1933.9 1398.84 1935.99 cv
1431.91 1938.07 1474.27 1934.95 1518.7 1943.29 cv
1563.13 1951.62 1606.53 1961 1623.07 1952.66 cv
1639.6 1944.33 1653.03 1931.82 1661.3 1915.15 cv
1679.89 1892.22 1692.3 1873.45 1685.06 1850.52 cv
cp
.647059 .607843 .529412 rgb
f
1568.9 1740.29 mo
1564.29 1723.88 1556.13 1707.41 1541.13 1698.49 cv
1526.45 1689.77 1501.71 1696.83 1487.37 1702.78 cv
1485.83 1703.41 1484.86 1704.55 1484.37 1705.85 cv
1482.9 1705.31 1480.81 1706.54 1481.54 1708.3 cv
1487.75 1723.19 1497.61 1734.98 1513.04 1740.83 cv
1530.82 1747.58 1548.82 1757 1566.64 1745.89 cv
1568.51 1744.73 1569.51 1742.47 1568.9 1740.29 cv
cp
.729412 .705882 .647059 rgb
f
1598.56 1786.31 mo
1596.52 1785.46 1594.41 1784.68 1592.19 1784.06 cv
1570.62 1777.97 1552.89 1784.67 1532.86 1769.05 cv
1510.18 1751.35 1491.31 1723.97 1478.87 1698.25 cv
1463.4 1666.22 1428.43 1671.95 1399.38 1685.41 cv
1399.78 1688.73 1398.32 1692.34 1394.32 1693.71 cv
1386.59 1696.36 1380.03 1701.38 1374.09 1706.91 cv
1372.42 1708.47 1370.55 1709.04 1368.79 1708.94 cv
1362.26 1717.13 1354.2 1724.13 1346.24 1730.76 cv
1343.73 1732.85 1340.84 1732.96 1338.43 1731.99 cv
1328.54 1736.81 1316.76 1739.19 1307.16 1742.31 cv
1290.84 1747.62 1278.03 1756.81 1273.62 1774 cv
1269.61 1789.59 1265.68 1818.34 1273.58 1833.79 cv
1285.88 1857.83 1283.04 1878.03 1305.81 1895.68 cv
1309.16 1898.28 1313.41 1894.67 1313.59 1891.17 cv
1314.5 1874.09 1299.11 1856.92 1308.43 1839.99 cv
1309.75 1837.58 1310.03 1836.32 1310.08 1835.84 cv
1310.15 1836.27 1310.5 1837.29 1312.02 1838.56 cv
1319.24 1844.55 1326.61 1850.24 1334.14 1855.83 cv
1346.82 1865.25 1375.56 1887.52 1392.29 1872.1 cv
1405.44 1859.98 1391.75 1849.04 1383.56 1837.81 cv
1378.22 1830.49 1388.87 1836.67 1391.22 1837.47 cv
1399.57 1840.32 1409.24 1840.92 1417.88 1842.68 cv
1438.85 1846.95 1447.34 1867.23 1464.13 1877.55 cv
1495.76 1896.99 1516.92 1863.15 1548.39 1860.69 cv
1574.15 1858.68 1614.22 1875.67 1635.16 1850.79 cv
1654.66 1827.63 1625.68 1788.42 1598.56 1786.31 cv
cp
f
1297.29 1811.04 mo
1294.26 1801.84 1292.46 1794.25 1293 1784.33 cv
1293.26 1779.88 1287.42 1771.92 1289.12 1768.16 cv
1291.9 1761.93 1286.99 1756.23 1281.96 1755.73 cv
1281.45 1756.34 1280.54 1757.43 1280.98 1756.86 cv
1279.68 1758.59 1278.38 1760.33 1277.01 1762.02 cv
1275.87 1763.44 1274.16 1764.09 1272.4 1764.17 cv
1268.67 1766.69 1265.32 1769.79 1261.51 1773.61 cv
1249.6 1785.52 1243.1 1791.17 1226.57 1794.78 cv
1205.98 1799.28 1184.58 1812.81 1169.36 1827.35 cv
1156.21 1839.92 1136.6 1900.23 1165.96 1906.86 cv
1175.06 1908.92 1184.01 1887.07 1188.2 1882.04 cv
1186.94 1883.55 1194.51 1896.43 1195.03 1897.2 cv
1197.93 1901.5 1204.45 1906.33 1209.9 1906.35 cv
1216.99 1906.38 1223.77 1905.94 1229.03 1900.34 cv
1238.94 1889.81 1238.74 1889.7 1254.66 1890.25 cv
1260.09 1890.45 1267.25 1890.47 1270.55 1884.84 cv
1273.91 1879.11 1276.38 1850.55 1285.86 1852.35 cv
1290.06 1853.15 1293.21 1851.2 1294.76 1847.25 cv
1298.78 1836.98 1300.83 1821.77 1297.29 1811.04 cv
cp
f
1415.93 1678.32 mo
1410.39 1679.93 1404.81 1682.28 1399.33 1685.16 cv
1399.84 1688.54 1398.43 1692.3 1394.32 1693.71 cv
1386.59 1696.36 1380.03 1701.38 1374.09 1706.91 cv
1372.04 1708.83 1369.68 1709.25 1367.56 1708.76 cv
1364.31 1711.96 1361.2 1715.24 1358.38 1718.6 cv
1358.31 1721.13 1357.07 1723.62 1354.75 1724.85 cv
1351.93 1726.34 1349.25 1728.17 1346.08 1728.87 cv
1345.86 1728.92 1345.65 1728.87 1345.43 1728.9 cv
1343.51 1731.19 1342.03 1733.73 1341.16 1736.58 cv
1337.93 1747.24 1340.76 1759.73 1352.91 1763.35 cv
1367.28 1767.65 1379.02 1761.24 1391.12 1753.73 cv
1412.25 1740.62 1438.3 1723.92 1451.11 1701.87 cv
1464.68 1678.51 1430.75 1674.02 1415.93 1678.32 cv
cp
.890196 .858824 .796078 rgb
f
1322.51 1739.79 mo
1308.84 1742.67 1297.46 1746.06 1285.73 1753.99 cv
1277.9 1759.29 1268.89 1764.74 1263.85 1773.01 cv
1261.74 1776.47 1265.76 1779.63 1268.94 1778.15 cv
1276.98 1774.4 1284.68 1769.82 1291.92 1764.67 cv
1302.06 1757.44 1314.24 1752.15 1325.19 1746.21 cv
1328.83 1744.24 1326.24 1739.01 1322.51 1739.79 cv
cp
f
1293.9 1754.62 mo
1286.95 1752.52 1280.58 1758.52 1275.49 1762.5 cv
1268.79 1767.74 1262.32 1773.64 1257.74 1780.86 cv
1257.44 1781.33 1257.83 1781.92 1258.34 1781.92 cv
1265.4 1782.07 1271.63 1777.9 1277.03 1773.61 cv
1280.82 1770.59 1284.28 1767.23 1288.2 1764.34 cv
1290.95 1762.33 1293.51 1760.25 1294.87 1757.03 cv
1295.29 1756.06 1295 1754.96 1293.9 1754.62 cv
cp
f
1337.54 1770.1 mo
1332.33 1765.62 1325.13 1768.25 1319.58 1770.48 cv
1315.1 1772.28 1311.3 1775.36 1307.44 1778.19 cv
1305.07 1779.95 1294.73 1775.21 1292.24 1775.21 cv
1285.65 1775.19 1283.43 1775.49 1276.96 1776.84 cv
1273.84 1777.49 1271.75 1781.7 1268.28 1780.97 cv
1261.9 1779.64 1257.57 1779.27 1252.06 1783.87 cv
1234.12 1798.82 1207.63 1792.13 1192.29 1811.29 cv
1191.43 1812.35 1190.83 1813.6 1190.46 1814.88 cv
1179.17 1825.79 1162.83 1836.02 1162.65 1853.13 cv
1162.63 1856.09 1165.08 1858.38 1167.93 1858.45 cv
1180.38 1858.79 1191.32 1854.28 1204.09 1855.23 cv
1209.95 1855.65 1216.54 1855.25 1220.69 1850.22 cv
1224.97 1845.04 1232.56 1828.27 1241.1 1836.88 cv
1245.21 1841.02 1253.83 1844.46 1259.3 1840.65 cv
1266.96 1835.3 1270.45 1828.79 1275.33 1820.77 cv
1280.1 1812.95 1295.64 1828.91 1302.67 1826.46 cv
1308.56 1824.42 1313.06 1822.29 1315.43 1815.96 cv
1320.21 1803.27 1330.53 1811.94 1337.53 1804.82 cv
1346.85 1795.33 1347.95 1779.02 1337.54 1770.1 cv
cp
f
1574.07 1811.14 mo
1566.69 1805.48 1558.21 1803.55 1549.08 1802.45 cv
1534.45 1800.71 1518.48 1793.74 1503.57 1796.38 cv
1485.91 1799.5 1471.15 1800.1 1453.44 1799.52 cv
1448.3 1799.35 1444.08 1801.57 1440.34 1804.58 cv
1438.06 1804.97 1436.24 1805.74 1433.08 1807.37 cv
1423.72 1812.18 1408.49 1800.21 1400.48 1797.15 cv
1388.33 1792.53 1379.42 1799.28 1373.62 1809.74 cv
1372.84 1811.12 1373.78 1813.5 1375.62 1813.27 cv
1386.83 1811.78 1396.85 1811.9 1407.51 1816.16 cv
1416.07 1819.59 1423.76 1822.4 1432.97 1822.73 cv
1438.83 1822.95 1443.91 1819.05 1450.74 1819.38 cv
1462.88 1819.94 1474.99 1821.93 1487.04 1822.45 cv
1498.83 1822.97 1513.28 1817.28 1523.37 1825.46 cv
1528.13 1829.31 1531.45 1835.27 1537.79 1837.02 cv
1553.74 1841.42 1567.48 1837.31 1577.41 1824 cv
1580.73 1819.56 1577.72 1813.95 1574.07 1811.14 cv
cp
f
1328.37 1919.89 mo
1271.68 1928.79 1189.78 1970.66 1162.33 1894.29 cv
1146.16 1849.31 1179.38 1811.72 1220.17 1799.32 cv
1239.64 1793.4 1268.88 1789.91 1280.27 1770.5 cv
1280.41 1770.27 1280.1 1770.05 1279.91 1770.21 cv
1265.09 1783.38 1242.48 1785.2 1224.11 1789.91 cv
1206.74 1794.36 1192.82 1800.46 1178.87 1811.8 cv
1150.77 1834.64 1142.48 1871.09 1156.75 1904.32 cv
1188.86 1979.1 1272.3 1938.25 1330.96 1929.38 cv
1337.15 1928.44 1334.53 1918.93 1328.37 1919.89 cv
cp
.529412 .466667 .345098 rgb
f
1659.63 1905.12 mo
1649.4 1920.13 1643.64 1933.13 1625.72 1940.49 cv
1610.27 1946.83 1592.46 1946.13 1576.17 1945.01 cv
1545.03 1942.88 1514.66 1934.25 1483.67 1930.85 cv
1451.31 1927.28 1418.42 1931.79 1385.91 1928.48 cv
1339.94 1923.8 1312.29 1900.39 1289.54 1861.39 cv
1288.69 1859.92 1286.77 1860.97 1286.99 1862.47 cv
1301.35 1957.28 1416.27 1939.16 1483.67 1944.9 cv
1523.87 1948.32 1562.46 1961.73 1603.22 1959.32 cv
1632.7 1957.58 1665.85 1940.29 1670.02 1907.96 cv
1670.81 1901.88 1662.42 1901.04 1659.63 1905.12 cv
cp
f
1690.97 1847.93 mo
1684.66 1816.63 1663.45 1793 1633.98 1782.93 cv
1626.96 1780.54 1619.45 1779.1 1611.84 1778.29 cv
1582.71 1764.73 1571.14 1720.61 1547.12 1699.93 cv
1529.1 1684.41 1496.72 1690.72 1480.46 1705.69 cv
1478.4 1707.6 1480.12 1710.76 1482.59 1710.9 cv
1498.66 1711.77 1512.11 1700.33 1528.69 1703.06 cv
1546.03 1705.9 1558.58 1729.28 1567.06 1742.84 cv
1574.49 1754.72 1583.47 1768.98 1595.33 1777.45 cv
1592.16 1777.45 1589.01 1777.51 1585.92 1777.65 cv
1570.47 1778.36 1555.16 1779.56 1540.8 1772.23 cv
1530.65 1767.05 1523.2 1755.86 1514.25 1748.88 cv
1513.32 1748.16 1512.11 1749.29 1512.93 1750.2 cv
1528.69 1767.6 1535.17 1784.58 1561.12 1787.18 cv
1595.04 1790.57 1630.75 1785.81 1657.48 1811.67 cv
1679.57 1833.04 1688.37 1874.68 1665.08 1897.57 cv
1644.09 1918.2 1612.65 1913.15 1587.31 1922.14 cv
1584.93 1922.99 1584.83 1926.31 1587.31 1927.11 cv
1612.84 1935.44 1647.56 1925.83 1669.54 1911.47 cv
1691.6 1897.07 1695.86 1872.28 1690.97 1847.93 cv
cp
f
1512.7 1739.18 mo
1485.9 1719.62 1480.3 1679.73 1446.25 1668.92 cv
1426.69 1662.71 1409.95 1676.75 1389.92 1689.76 cv
1373.69 1701.2 1350.19 1740.45 1305.75 1757.12 cv
1304.89 1758.11 1304.07 1759.13 1303.18 1760.1 cv
1318.75 1752.06 1334.67 1745.51 1347.76 1733.91 cv
1371.25 1713.09 1416.87 1669.55 1450.86 1684.19 cv
1476.81 1695.36 1483.54 1730.89 1510.36 1743.22 cv
1513.09 1744.48 1515.13 1740.96 1512.7 1739.18 cv
cp
f
1385.24 1694.94 mo
1374.74 1700.89 1367.26 1708.7 1358.97 1717.46 cv
1341.5 1735.89 1322.21 1735.81 1300.31 1743.83 cv
1269.6 1755.07 1255.61 1791.26 1220.14 1794.23 cv
1218.66 1794.35 1218.64 1796.68 1220.14 1796.57 cv
1249.56 1794.38 1268.54 1769.29 1290.96 1752.89 cv
1307.09 1741.08 1329.68 1745.52 1345.04 1734.43 cv
1360.48 1723.27 1369.73 1706.28 1385.7 1695.75 cv
1386.2 1695.42 1385.75 1694.64 1385.24 1694.94 cv
cp
f
105.561 1298.55 mo
73.3418 1306.61 42.7534 1333.99 37.9175 1380.71 cv
33.083 1427.41 66.9009 1475.73 137.769 1495.06 cv
208.649 1514.39 269.863 1503.12 308.511 1493.46 cv
347.172 1483.79 406.759 1451.58 419.647 1408.07 cv
432.542 1364.59 421.268 1322.71 385.836 1288.9 cv
350.389 1255.07 303.687 1235.74 256.985 1238.96 cv
210.269 1242.18 158.725 1256.68 105.561 1298.55 cv
cp
.647059 .607843 .529412 rgb
f
78.1816 1315.47 mo
63.8994 1321.18 34.4961 1356.56 57.2559 1399.22 cv
70.1367 1423.38 120.376 1442.28 165.177 1447.54 cv
219.928 1453.98 268.244 1452.37 329.455 1416.14 cv
387.415 1381.81 409.998 1317.07 358.46 1273.59 cv
306.908 1230.11 221.533 1238.96 166.775 1263.13 cv
112.004 1287.28 110.404 1302.58 78.1816 1315.47 cv
cp
.729412 .705882 .647059 rgb
f
95.958 1361.53 mo
100.084 1367.59 105.554 1372.93 111.338 1377.25 cv
112.249 1377.92 113.168 1378.56 114.111 1379.15 cv
105.941 1375.51 99.3521 1369.88 95.958 1361.53 cv
cp
291.966 1271 mo
273.022 1246.77 236.124 1244.07 208.225 1247.21 cv
177.564 1250.64 142.606 1267.16 124.688 1282.33 cv
120.354 1286 115.708 1290.13 111.338 1294.72 cv
95.9712 1304.14 85.644 1323.99 81.4771 1340 cv
73.8408 1369.34 96.604 1396.73 122.046 1407.26 cv
152.86 1420.04 194.673 1407.49 224.717 1397.88 cv
251.668 1389.26 281.953 1372.87 298.103 1348.87 cv
315.774 1322.64 310.779 1295.07 291.966 1271 cv
cp
.890196 .858824 .796078 rgb
f
237.506 1498.28 mo
172.619 1502.6 85.9678 1488.26 53.2974 1424.22 cv
29.7739 1378.12 49.729 1333.25 89.0186 1311.94 cv
75.9199 1330.67 72.2686 1352.74 89.1753 1376.69 cv
90.4229 1378.46 93.1738 1376.94 92.1123 1374.96 cv
77.2036 1346.98 85.3218 1323.86 104.318 1305.19 cv
107.182 1300.16 128.23 1286.92 131.095 1285.22 cv
166.949 1264.02 214.68 1251.28 241.074 1246.01 cv
323.124 1229.62 445.062 1309.62 414.595 1402.28 cv
392.123 1470.63 300.34 1494.1 237.506 1498.28 cv
cp
328.992 1247.36 mo
271.157 1220.98 213.126 1237.39 157.422 1261.68 cv
141.543 1268.6 123.291 1278.76 108.289 1291.4 cv
70.5259 1300.83 39.8984 1326.3 32.4141 1366.43 cv
26.29 1399.3 39.8823 1433.7 62.0122 1457.61 cv
106.679 1505.84 184.724 1514.36 246.375 1509.28 cv
307.763 1504.22 378.02 1481.86 414.02 1428.38 cv
463.664 1354.67 395.322 1277.62 328.992 1247.36 cv
cp
.529412 .466667 .345098 rgb
f
127.996 1273.37 mo
127.293 1274.14 126.407 1274.81 125.57 1275.49 cv
126.513 1274.9 127.491 1274.44 128.515 1274.26 cv
129.362 1274.1 128.605 1272.69 127.996 1273.37 cv
cp
f
109.887 1288.95 mo
109.346 1289.29 109.862 1290.18 110.382 1289.81 cv
113.123 1287.89 115.474 1285.65 117.764 1283.21 cv
118.997 1281.9 120.413 1280.19 121.953 1278.58 cv
121.172 1279.21 120.351 1279.82 119.649 1280.5 cv
116.531 1283.54 113.572 1286.57 109.887 1288.95 cv
cp
f
121.953 1278.58 mo
123.196 1277.58 124.349 1276.51 125.57 1275.49 cv
124.289 1276.3 123.09 1277.4 121.953 1278.58 cv
cp
f
1153.29 1617.42 mo
1135.84 1621.82 1119.27 1636.78 1116.65 1662.3 cv
1114.03 1687.83 1132.35 1714.22 1170.74 1724.79 cv
1209.13 1735.35 1242.29 1729.19 1263.23 1723.91 cv
1284.17 1718.63 1316.45 1701.03 1323.43 1677.26 cv
1330.42 1653.5 1324.31 1630.62 1305.12 1612.14 cv
1285.91 1593.66 1260.62 1583.1 1235.32 1584.86 cv
1210.01 1586.62 1182.09 1594.54 1153.29 1617.42 cv
cp
.647059 .607843 .529412 rgb
f
1138.46 1626.66 mo
1130.72 1629.78 1114.79 1649.11 1127.12 1672.42 cv
1134.1 1685.62 1161.32 1695.95 1185.58 1698.82 cv
1215.24 1702.34 1241.42 1701.46 1274.57 1681.67 cv
1305.97 1662.91 1318.21 1627.54 1290.29 1603.78 cv
1262.36 1580.02 1216.11 1584.86 1186.45 1598.06 cv
1156.78 1611.26 1155.91 1619.62 1138.46 1626.66 cv
cp
.729412 .705882 .647059 rgb
f
1148.09 1651.83 mo
1150.32 1655.14 1153.29 1658.05 1156.42 1660.42 cv
1156.91 1660.78 1157.41 1661.13 1157.92 1661.46 cv
1153.5 1659.47 1149.93 1656.39 1148.09 1651.83 cv
cp
1254.27 1602.36 mo
1244 1589.12 1224.02 1587.65 1208.9 1589.36 cv
1192.29 1591.24 1173.36 1600.26 1163.65 1608.55 cv
1161.3 1610.56 1158.79 1612.81 1156.42 1615.32 cv
1148.1 1620.47 1142.5 1631.31 1140.24 1640.06 cv
1136.11 1656.1 1148.44 1671.06 1162.22 1676.82 cv
1178.91 1683.79 1201.56 1676.94 1217.84 1671.69 cv
1232.44 1666.98 1248.84 1658.02 1257.59 1644.91 cv
1267.16 1630.58 1264.46 1615.51 1254.27 1602.36 cv
cp
.890196 .858824 .796078 rgb
f
1224.77 1726.54 mo
1189.62 1728.91 1142.68 1721.07 1124.98 1686.08 cv
1112.24 1660.89 1123.05 1636.38 1144.33 1624.73 cv
1137.23 1634.97 1135.26 1647.03 1144.41 1660.11 cv
1145.09 1661.08 1146.58 1660.25 1146 1659.17 cv
1137.93 1643.88 1142.33 1631.24 1152.62 1621.05 cv
1154.17 1618.29 1165.57 1611.06 1167.12 1610.13 cv
1186.54 1598.55 1212.4 1591.59 1226.7 1588.71 cv
1271.14 1579.75 1337.2 1623.46 1320.69 1674.09 cv
1308.52 1711.44 1258.8 1724.26 1224.77 1726.54 cv
cp
1274.32 1589.45 mo
1242.99 1575.03 1211.56 1584 1181.38 1597.27 cv
1172.78 1601.05 1162.89 1606.6 1154.77 1613.51 cv
1134.31 1618.66 1117.72 1632.58 1113.67 1654.5 cv
1110.35 1672.46 1117.71 1691.26 1129.7 1704.33 cv
1153.89 1730.68 1196.17 1735.33 1229.57 1732.55 cv
1262.82 1729.79 1300.88 1717.58 1320.38 1688.35 cv
1347.28 1648.08 1310.25 1605.98 1274.32 1589.45 cv
cp
.529412 .466667 .345098 rgb
f
1165.44 1603.66 mo
1165.06 1604.08 1164.58 1604.44 1164.13 1604.82 cv
1164.64 1604.5 1165.17 1604.24 1165.72 1604.15 cv
1166.18 1604.06 1165.77 1603.29 1165.44 1603.66 cv
cp
f
1155.63 1612.17 mo
1155.34 1612.36 1155.62 1612.84 1155.9 1612.64 cv
1157.39 1611.59 1158.66 1610.37 1159.9 1609.04 cv
1160.57 1608.32 1161.33 1607.38 1162.17 1606.5 cv
1161.75 1606.85 1161.3 1607.18 1160.92 1607.55 cv
1159.23 1609.21 1157.63 1610.87 1155.63 1612.17 cv
cp
f
1162.17 1606.5 mo
1162.84 1605.96 1163.47 1605.37 1164.13 1604.82 cv
1163.43 1605.26 1162.79 1605.86 1162.17 1606.5 cv
cp
f
424.447 1403.36 mo
374.97 1415.73 277.186 1444.84 280.045 1467.91 cv
282.887 1491 346.925 1491 390.74 1491 cv
434.545 1491 481.742 1487.62 525.568 1491 cv
569.392 1494.35 601.142 1478.48 609.825 1464.02 cv
619.929 1447.17 619.943 1440.43 576.136 1423.58 cv
532.313 1406.72 451.422 1396.62 424.447 1403.36 cv
cp
.647059 .607843 .529412 rgb
f
314.912 1433.69 mo
291.336 1443.8 271.069 1464.02 314.897 1464.02 cv
358.737 1464.02 442.991 1464.04 503.649 1453.92 cv
564.315 1443.8 581.447 1426.49 549.294 1416.6 cv
517.14 1406.72 453.097 1393.26 409.299 1403.36 cv
365.464 1413.47 335.144 1423.58 314.912 1433.69 cv
.729412 .705882 .647059 rgb
f
355.201 1423.31 mo
310.977 1439.38 347.156 1451.45 399.421 1447.43 cv
451.683 1443.4 528.043 1407.22 475.774 1403.21 cv
423.546 1399.19 395.38 1403.21 355.201 1423.31 cv
.890196 .858824 .796078 rgb
f
575.834 1478.91 mo
543.869 1487.93 507.968 1482.14 475.27 1481.49 cv
434.046 1480.63 393.135 1487.7 351.729 1485.78 cv
345.388 1485.47 280.574 1481.52 283.404 1464.54 cv
285.418 1452.65 308.917 1443.36 318.215 1438.76 cv
344.375 1425.83 371.905 1418.81 400.457 1413.73 cv
401.333 1413.57 402.268 1413.41 403.17 1413.25 cv
430.896 1409.08 458.572 1404.65 486.509 1408.46 cv
501.17 1410.48 515.783 1413.16 530.27 1416.37 cv
533.208 1417.6 536.111 1418.93 538.924 1420.44 cv
539.217 1420.6 539.471 1420.17 539.183 1419.98 cv
537.837 1419.12 536.453 1418.29 535.073 1417.48 cv
544.109 1419.56 553.077 1421.79 561.968 1424.35 cv
575.046 1428.1 587.863 1432.94 599.457 1440.14 cv
625.351 1456.15 591.728 1474.43 575.834 1478.91 cv
cp
612.413 1436.54 mo
590.309 1412.94 543.745 1407.76 513.954 1402.6 cv
505.56 1401.17 497.257 1400.26 489.014 1399.75 cv
424.237 1385.91 345.246 1406.55 293.315 1438.56 cv
275.47 1449.55 261.14 1468.78 283.465 1483.17 cv
304.567 1496.77 337.489 1496.97 361.675 1498.01 cv
396.281 1499.51 431.219 1495.51 465.686 1493.06 cv
507.447 1490.1 549.462 1500.62 590.097 1486.01 cv
611.122 1478.45 631.002 1456.38 612.413 1436.54 cv
cp
.529412 .466667 .345098 rgb
f
1843.22 1722.43 mo
1814.19 1729.75 1756.83 1746.97 1758.5 1760.63 cv
1760.17 1774.29 1797.74 1774.29 1823.45 1774.29 cv
1849.15 1774.29 1876.83 1772.29 1902.55 1774.29 cv
1928.26 1776.27 1946.88 1766.88 1951.98 1758.33 cv
1957.91 1748.35 1957.91 1744.36 1932.21 1734.39 cv
1906.5 1724.42 1859.05 1718.44 1843.22 1722.43 cv
cp
.647059 .607843 .529412 rgb
f
1778.96 1740.38 mo
1765.13 1746.36 1753.24 1758.33 1778.95 1758.33 cv
1804.67 1758.33 1854.1 1758.33 1889.69 1752.35 cv
1925.28 1746.36 1935.33 1736.12 1916.47 1730.26 cv
1897.6 1724.42 1860.03 1716.45 1834.34 1722.43 cv
1808.62 1728.41 1790.83 1734.39 1778.96 1740.38 cv
.729412 .705882 .647059 rgb
f
1802.6 1734.23 mo
1776.65 1743.74 1797.88 1750.88 1828.54 1748.51 cv
1859.2 1746.12 1904 1724.71 1873.33 1722.34 cv
1842.69 1719.96 1826.17 1722.34 1802.6 1734.23 cv
.890196 .858824 .796078 rgb
f
1932.04 1767.14 mo
1913.28 1772.47 1892.22 1769.05 1873.04 1768.66 cv
1848.85 1768.15 1824.85 1772.33 1800.56 1771.2 cv
1796.84 1771.02 1758.81 1768.68 1760.47 1758.63 cv
1761.66 1751.6 1775.44 1746.1 1780.9 1743.38 cv
1796.24 1735.72 1812.4 1731.57 1829.15 1728.56 cv
1829.66 1728.47 1830.21 1728.37 1830.74 1728.28 cv
1847 1725.82 1863.24 1723.19 1879.63 1725.45 cv
1888.23 1726.64 1896.81 1728.23 1905.31 1730.12 cv
1907.03 1730.86 1908.73 1731.64 1910.38 1732.53 cv
1910.55 1732.63 1910.7 1732.38 1910.53 1732.26 cv
1909.75 1731.75 1908.93 1731.26 1908.12 1730.78 cv
1913.42 1732.02 1918.68 1733.34 1923.9 1734.85 cv
1931.58 1737.07 1939.09 1739.93 1945.89 1744.19 cv
1961.09 1753.67 1941.36 1764.48 1932.04 1767.14 cv
cp
1953.5 1742.06 mo
1940.53 1728.1 1913.21 1725.03 1895.73 1721.98 cv
1890.81 1721.13 1885.94 1720.59 1881.1 1720.29 cv
1843.1 1712.1 1796.76 1724.32 1766.29 1743.26 cv
1755.82 1749.76 1747.41 1761.14 1760.51 1769.66 cv
1772.89 1777.7 1792.21 1777.82 1806.4 1778.44 cv
1826.7 1779.33 1847.19 1776.96 1867.41 1775.51 cv
1891.92 1773.76 1916.56 1779.98 1940.4 1771.34 cv
1952.74 1766.86 1964.4 1753.8 1953.5 1742.06 cv
cp
.529412 .466667 .345098 rgb
f
1268.41 1236.87 mo
1234.61 1245.39 1167.81 1265.45 1169.76 1281.35 cv
1171.7 1297.25 1215.46 1297.25 1245.39 1297.25 cv
1275.31 1297.25 1307.56 1294.92 1337.5 1297.25 cv
1367.44 1299.57 1389.13 1288.63 1395.06 1278.67 cv
1401.96 1267.06 1401.97 1262.41 1372.04 1250.8 cv
1342.11 1239.18 1286.84 1232.22 1268.41 1236.87 cv
cp
.647059 .607843 .529412 rgb
f
1193.58 1257.76 mo
1177.48 1264.73 1163.63 1278.67 1193.57 1278.67 cv
1223.52 1278.67 1281.08 1278.67 1322.52 1271.71 cv
1363.97 1264.73 1375.67 1252.81 1353.71 1245.99 cv
1331.74 1239.18 1287.99 1229.9 1258.07 1236.87 cv
1228.12 1243.83 1207.4 1250.8 1193.58 1257.76 cv
.729412 .705882 .647059 rgb
f
1221.11 1250.61 mo
1190.89 1261.68 1215.61 1270 1251.32 1267.23 cv
1287.02 1264.46 1339.19 1239.53 1303.48 1236.76 cv
1267.8 1233.99 1248.56 1236.76 1221.11 1250.61 cv
.890196 .858824 .796078 rgb
f
1371.84 1288.93 mo
1350 1295.14 1325.47 1291.15 1303.13 1290.7 cv
1274.97 1290.11 1247.02 1294.98 1218.74 1293.66 cv
1214.4 1293.45 1170.12 1290.72 1172.06 1279.02 cv
1173.43 1270.83 1189.49 1264.43 1195.84 1261.26 cv
1213.71 1252.35 1232.52 1247.51 1252.02 1244.01 cv
1252.62 1243.9 1253.26 1243.79 1253.88 1243.68 cv
1272.82 1240.81 1291.73 1237.76 1310.81 1240.38 cv
1320.83 1241.77 1330.81 1243.62 1340.71 1245.83 cv
1342.72 1246.68 1344.7 1247.6 1346.62 1248.63 cv
1346.82 1248.75 1347 1248.45 1346.8 1248.32 cv
1345.88 1247.72 1344.93 1247.16 1343.99 1246.6 cv
1350.16 1248.03 1356.29 1249.57 1362.37 1251.33 cv
1371.3 1253.91 1380.06 1257.25 1387.97 1262.21 cv
1405.67 1273.24 1382.7 1285.84 1371.84 1288.93 cv
cp
1396.83 1259.73 mo
1381.73 1243.47 1349.92 1239.9 1329.56 1236.34 cv
1323.83 1235.35 1318.16 1234.73 1312.53 1234.38 cv
1268.27 1224.84 1214.31 1239.07 1178.83 1261.12 cv
1166.64 1268.69 1156.85 1281.95 1172.1 1291.86 cv
1186.52 1301.23 1209.01 1301.37 1225.53 1302.09 cv
1249.17 1303.12 1273.04 1300.37 1296.59 1298.67 cv
1325.12 1296.64 1353.82 1303.88 1381.58 1293.82 cv
1395.95 1288.61 1409.53 1273.4 1396.83 1259.73 cv
cp
.529412 .466667 .345098 rgb
f
783.057 1018.77 mo
780.161 1041.95 768.566 1057.88 743.947 1070.91 cv
719.322 1083.95 680.213 1098.43 654.143 1099.88 cv
628.072 1101.33 594.778 1094.09 570.153 1092.63 cv
545.524 1091.19 522.355 1112.91 473.106 1099.88 cv
423.861 1086.85 371.726 1086.85 339.855 1083.95 cv
307.987 1081.05 223.979 1026.01 203.701 985.461 cv
183.42 944.905 199.355 873.923 221.079 820.338 cv
242.803 766.742 251.496 745.022 273.225 743.572 cv
294.947 742.118 306.541 737.779 338.404 726.186 cv
370.267 714.602 403.579 700.116 418.065 689.978 cv
432.545 679.838 451.382 647.976 454.278 636.391 cv
457.174 624.797 454.283 587.143 489.042 571.211 cv
523.801 555.275 546.975 562.519 587.53 545.141 cv
628.085 527.755 655.606 513.27 693.266 526.309 cv
730.925 539.344 735.399 562.655 794.65 569.761 cv
830.864 574.102 827.958 620.46 832.296 661.016 cv
836.633 701.571 836.633 743.572 845.326 781.231 cv
854.02 818.892 861.263 842.07 859.813 872.491 cv
858.361 902.913 856.911 939.117 832.287 970.985 cv
807.671 1002.85 783.057 1018.77 783.057 1018.77 cv
cp
.729412 .705882 .647059 rgb
f
769.372 614.086 mo
764.834 596.649 741.828 584.459 727.138 578.103 cv
700.744 566.687 697.763 542.795 669.096 536.938 cv
652.347 533.516 632.755 537.835 617.583 544.922 cv
603.238 551.615 589.999 560.389 575.154 566.001 cv
557.737 572.593 537.04 572.257 518.641 575.507 cv
502.218 578.413 490.919 584.724 482.959 593.289 cv
483.8 595.181 484.063 597.427 483.409 599.982 cv
470.247 651.017 483.781 709.201 459.712 757.367 cv
441.085 794.641 409.003 820.996 379.91 849.899 cv
365.447 864.275 350.957 873.778 330.866 878.261 cv
310.652 882.766 281.535 868.317 263.162 881.131 cv
245.312 893.565 246.512 918.617 235.083 935.516 cv
233.537 937.798 231.859 939.886 230.186 941.973 cv
231.622 941.477 232.982 940.749 234.064 939.613 cv
241.461 931.837 249.809 925.608 256.516 917.166 cv
261.043 911.47 261.635 904.313 263.039 897.43 cv
349.315 927.318 455.069 863.966 501.313 793.339 cv
515.203 772.134 521.332 746.646 536.985 726.604 cv
552.53 706.699 579.805 707.89 602.429 708.955 cv
630.436 710.282 659.671 720.267 687.7 717.202 cv
701.791 715.656 708.674 698.315 716.63 688.978 cv
735.877 666.409 778.729 650.077 769.372 614.086 cv
cp
.890196 .858824 .796078 rgb
f
432.418 711.042 mo
431.996 702.794 423.194 696.875 415.627 701.403 cv
377.673 724.095 338.29 747.637 293.333 751.721 cv
287.673 752.238 282.808 756.103 282.845 762.213 cv
282.845 762.732 282.849 763.251 282.849 763.769 cv
270.878 767.488 257.77 771.543 250.405 781.764 cv
243.943 790.739 240.07 802.788 238.82 814.973 cv
233.709 823.556 229.354 833.486 225.699 845.07 cv
221.229 859.229 242.816 864.816 247.681 851.135 cv
256.678 825.793 290.337 826.475 312.498 824.538 cv
331.575 822.865 348.229 819.173 365.711 811.188 cv
404.584 793.439 434.656 754.539 432.418 711.042 cv
cp
f
709.41 836.996 mo
688.52 854.337 667.041 858.483 643.654 841.801 cv
634.86 835.528 624.349 830.194 613.086 832.459 cv
587.693 837.551 574.931 860.011 561.969 880.397 cv
551.125 897.447 540.595 912.27 519.681 916.125 cv
494.834 920.716 468.883 922.344 443.762 921.63 cv
401.893 920.439 381.86 989.562 338.764 948.778 cv
337.399 947.487 335.481 947.868 334.453 949.333 cv
326.892 960.063 322.381 971.503 318.59 983.433 cv
314.734 981.723 309.911 982.705 309.028 988.015 cv
305.219 1011.09 284.473 1020.17 300.726 1043.79 cv
310.333 1057.76 334.953 1063.95 350.78 1060.99 cv
378.15 1055.87 395.909 1035.13 415.4 1016.82 cv
424.58 1008.2 432.791 994.846 444.035 1009.43 cv
448.841 1015.67 451.714 1020 456.774 1026.07 cv
464.217 1035.03 477.575 1038.75 487.927 1042.54 cv
510.116 1050.68 534.689 1060.52 557.545 1048.13 cv
580.601 1035.64 594.923 1016.54 602.143 991.472 cv
608.618 968.993 598.083 949.092 623.989 932.82 cv
638.839 923.5 654.579 913.523 670.374 905.981 cv
702.546 890.6 710.32 876.492 717.372 841.634 cv
718.354 836.791 713.107 833.931 709.41 836.996 cv
cp
f
853.742 817.655 mo
843.985 756.612 859.135 674.514 821.48 621.287 cv
820.812 616.686 819.752 612.113 818.152 607.557 cv
818.002 607.12 817.719 606.829 817.528 606.438 cv
813.9 587.829 804.293 565.565 785.725 566.637 cv
785.239 566.665 784.907 567.165 785.166 567.614 cv
790.813 577.431 798.406 583.568 801.589 595.308 cv
802.143 597.362 802.457 599.5 802.816 601.622 cv
799.979 603.174 797.865 606.038 797.814 610.303 cv
797.578 631.298 784.884 649.358 770.926 666.612 cv
757.377 673.747 749.112 686.35 744.27 701.298 cv
744.056 701.652 743.801 702.002 743.593 702.362 cv
735.063 716.594 735.817 729.083 738.168 742.591 cv
737.891 754.466 738.522 766.151 739.396 776.472 cv
740.596 790.602 741.992 805.36 743.801 819.991 cv
742.887 843.77 740.054 867.404 736.072 891.383 cv
733.625 906.095 730.284 920.43 729.07 935.307 cv
729.006 936.021 729.021 936.721 729.001 937.439 cv
729.001 937.448 728.98 937.439 728.98 937.453 cv
728.52 940.014 728.316 942.541 728.242 945.055 cv
727.483 948.825 726.833 952.599 726.411 956.33 cv
725.623 963.346 729.72 970.584 732.663 976.576 cv
739.905 991.298 728.587 997.582 720.104 1006.07 cv
715.672 1010.49 713.107 1015.42 710.661 1021.19 cv
705.246 1033.94 698.368 1006.65 694.17 1000.07 cv
693.784 999.464 693.061 999.063 692.325 998.974 cv
691.729 996.898 691.029 994.817 690.155 992.753 cv
689.593 991.444 687.36 991.508 686.777 992.753 cv
681.59 1003.83 680.099 1015.74 676.33 1027.26 cv
675.384 1028.13 674.534 1029.13 673.906 1030.44 cv
671.597 1035.3 668.573 1039.35 665.218 1043.02 cv
665.704 1041.79 666.214 1040.59 666.659 1039.32 cv
667.723 1036.29 663.55 1035.16 661.898 1037.31 cv
657.425 1043.17 651.615 1048.49 645.381 1053.23 cv
647.968 1046.32 649.123 1038.88 648.291 1031.15 cv
648.209 1030.41 647.222 1029.72 646.623 1030.46 cv
637.76 1041.47 629.577 1050.89 618.069 1059.2 cv
614.383 1061.86 610.749 1063.75 607.099 1065.13 cv
587.762 1062.76 569.795 1068.06 549.484 1074.85 cv
526.355 1082.56 470.132 1084.21 456.916 1057.9 cv
455.616 1055.31 452.351 1056.92 452.06 1059.21 cv
451.4 1064.37 452.255 1069.01 454.21 1073.15 cv
453.259 1072.8 452.283 1072.5 451.355 1072.1 cv
441.831 1067.98 437.942 1060.41 432.037 1052.6 cv
431.149 1051.44 429.523 1051.28 428.659 1052.6 cv
414.068 1075.27 454.888 1094.08 471.387 1097.79 cv
474.484 1098.5 478.126 1097.7 480.412 1095.37 cv
480.79 1095.21 481.171 1095.06 481.549 1094.91 cv
491.038 1098.74 501.022 1101.07 508.646 1102.07 cv
528.675 1104.71 546.115 1102.12 565.22 1095.28 cv
568.831 1094 572.49 1093.12 576.168 1092.37 cv
584.025 1093.84 592.113 1093.49 599.952 1091.62 cv
608.063 1093.51 617.438 1089.82 625.589 1085.22 cv
627.022 1085.3 628.445 1085.45 629.868 1085.44 cv
629.963 1085.55 630.008 1085.66 630.114 1085.76 cv
641.985 1097.96 658.002 1094.31 671.706 1087.6 cv
673.534 1087.47 675.379 1087.22 677.229 1086.77 cv
678.362 1087.24 679.585 1087.62 680.98 1087.76 cv
707.02 1090.28 730.744 1081.86 747.798 1064.63 cv
770.518 1058.81 780.711 1038.88 782.702 1014.78 cv
782.751 1015.48 782.784 1015.98 782.798 1016.19 cv
782.938 1018.71 785.898 1020.11 787.803 1018.25 cv
790.645 1015.5 793.118 1011.5 795.232 1006.76 cv
796.292 1006.52 797.342 1006.23 798.338 1005.72 cv
809.223 1000.2 823.371 985.725 828.982 970.783 cv
829.896 970.206 830.795 969.521 831.65 968.592 cv
871.692 925.027 862.335 871.44 853.742 817.655 cv
cp
.647059 .607843 .529412 rgb
f
386.58 1068.22 mo
363.393 1063.85 342 1076.46 318.726 1065.68 cv
307.3 1060.39 282.736 1048.11 276.207 1033.34 cv
279.675 1034.46 284.545 1033.53 285.208 1029.16 cv
287.528 1013.96 288.009 994.49 278.662 981.532 cv
277.811 980.358 275.348 980.123 275.088 981.996 cv
273.479 993.907 275.42 1005.24 274.079 1017.02 cv
273.16 1016.5 272.247 1015.97 271.337 1015.44 cv
267.2 1013.05 261.816 1015.25 260.521 1019.84 cv
253.696 1044.01 280.54 1061.65 298.067 1072.58 cv
323.828 1088.63 362.956 1095.28 388.444 1075.28 cv
390.894 1073.37 389.517 1068.77 386.58 1068.22 cv
cp
f
635.814 995.881 mo
640.061 999.245 645.795 999.127 648.887 994.198 cv
653.069 987.525 654.587 980.213 656.002 972.584 cv
657.175 966.255 658.875 962.845 663.299 958.849 cv
670.27 957.617 677.984 957.544 685.373 957.79 cv
706.192 958.472 710.043 932.442 716.157 918.566 cv
719.018 912.079 715.876 902.176 707.165 902.894 cv
694.435 903.948 688.865 910.051 679.149 917.289 cv
671.893 922.694 660.599 923.95 652.392 927.964 cv
640.412 933.829 625.716 950.715 625.948 965.137 cv
622.566 975.989 625.675 987.879 635.814 995.881 cv
cp
f
456.197 601.519 mo
442.507 646.647 442.484 680.857 391.462 699.394 cv
351.239 714.011 314.071 737.716 271.383 744.886 cv
271.028 744.945 271.105 745.546 271.474 745.528 cv
317.867 742.981 371.675 719.54 412.522 698.516 cv
451.259 678.575 451.827 641.547 463.722 603.592 cv
465.236 598.782 457.657 596.708 456.197 601.519 cv
cp
.529412 .466667 .345098 rgb
f
785.998 562.018 mo
751.639 558.68 724.559 529.755 691.207 520.503 cv
658.562 511.441 631.718 520.308 602.461 534.238 cv
550.04 559.208 477.78 548.688 454.538 612.649 cv
454.401 613.022 454.983 613.262 455.165 612.921 cv
484.155 558.431 557.409 564.882 607.667 543.149 cv
649.104 525.227 683.455 521.186 724.165 544.609 cv
744.892 556.535 761.588 569.484 785.998 571.779 cv
792.273 572.365 792.205 562.618 785.998 562.018 cv
cp
f
848.523 745 mo
845.79 709.364 847.636 550.314 780.647 565.955 cv
779.729 566.174 779.701 567.638 780.647 567.838 cv
815.434 575.147 820.743 619.087 826.158 647.99 cv
832.874 683.808 834.283 720.494 837.593 756.721 cv
841.112 795.23 853.579 831.704 855.229 870.668 cv
857.848 932.583 828.986 974.686 783.238 1012.44 cv
779.719 1015.34 784.22 1020.68 787.972 1018.57 cv
831.551 994.071 860.585 948.097 864.977 898.302 cv
869.632 845.525 852.501 796.918 848.523 745 cv
cp
f
779.815 947.643 mo
779.833 947.26 779.292 947.224 779.178 947.56 cv
767.175 982.233 794.419 1030.48 760.533 1055.95 cv
746.492 1066.5 728.92 1072.86 712.511 1078.48 cv
702.66 1081.86 688.602 1081.5 680.626 1088.21 cv
679.094 1089.5 679.767 1091.84 681.217 1092.81 cv
700.172 1105.55 757.127 1074.03 771.704 1061.13 cv
803.857 1032.73 777.909 983.551 779.815 947.643 cv
cp
f
344.433 1078.61 mo
332.015 1071.43 317.125 1070.19 304.082 1062.98 cv
288.596 1054.41 274.784 1042.65 260.843 1031.88 cv
224.543 1003.88 201.865 984.297 200.833 935.839 cv
199.782 886.131 218.86 843.043 235.846 797.559 cv
246.031 770.27 254.388 746.646 288.627 745.19 cv
302.5 744.601 308.965 741.026 317.567 730.16 cv
317.84 729.823 317.403 729.347 317.081 729.669 cv
300.036 746.701 274.097 733.21 253.842 746 cv
237.869 756.09 232.963 777.371 226.117 793.458 cv
203.747 846.007 185.297 895.351 188.88 953.302 cv
191.559 996.653 221.37 1017.59 252.514 1042.67 cv
270.492 1057.16 321.027 1107.44 345.092 1083.73 cv
346.588 1082.26 346.243 1079.66 344.433 1078.61 cv
cp
f
709.588 1084.24 mo
703.323 1083.55 697.735 1084.92 692.507 1080.67 cv
689.342 1078.1 686.214 1077.7 682.495 1079.38 cv
650.651 1093.75 616.342 1083.97 583.169 1081.32 cv
552.962 1078.91 523.087 1091.31 493.074 1092.57 cv
466.055 1093.7 439.843 1075.7 413.032 1073.18 cv
386.43 1070.69 356.45 1074.1 332.443 1086.24 cv
332.193 1086.36 332.253 1086.77 332.521 1086.83 cv
371.898 1095.32 410.836 1089.03 450.373 1101.64 cv
483.636 1112.27 510.802 1110.65 544.583 1103.75 cv
583.82 1095.74 621.353 1111.78 659.734 1105.42 cv
677.57 1102.46 699.195 1101.88 711.202 1088.13 cv
712.583 1086.55 711.58 1084.46 709.588 1084.24 cv
cp
f
530.939 555.452 mo
501.171 560.835 472.097 567.101 455.883 594.898 cv
432.864 634.377 457.283 689.104 442.166 731.77 cv
441.325 734.134 444.913 736.371 446.522 734.303 cv
465.432 709.846 461.962 683.034 460.294 653.404 cv
458.921 629.007 460.79 603.901 477.034 584.415 cv
489.842 569.037 513.38 563.563 531.63 557.961 cv
533.257 557.462 532.576 555.162 530.939 555.452 cv
cp
f
444.727 744.772 mo
444.494 742.418 441.294 741.717 440.593 744.199 cv
430.682 779.409 402.766 791.712 379.168 815.527 cv
368.679 826.121 359.846 838.504 349.708 849.472 cv
329.015 871.851 310.443 869.608 285.036 863.029 cv
239.752 851.317 227.163 898.243 219.27 933.611 cv
218.965 934.976 220.897 935.53 221.297 934.189 cv
231.968 898.476 244.553 859.388 289.86 871.913 cv
313.73 878.515 327.919 878.197 348.394 862.075 cv
372.458 843.111 389.631 816.481 414.068 797.313 cv
430.75 784.228 446.991 767.806 444.727 744.772 cv
cp
f
777.286 822.487 mo
772.145 811.93 771.332 805.661 770.717 791.048 cv
769.849 770.398 770.734 751.729 772.327 731.287 cv
772.513 728.987 770.904 727.559 770.089 729.659 cv
761.474 751.916 765.893 785.865 767.78 810.662 cv
769.526 833.731 788.663 834.022 788.053 862.611 cv
788.053 862.865 788.299 862.93 788.326 862.666 cv
790.427 842.524 784.439 837.177 777.286 822.487 cv
cp
f
801.911 602.382 mo
801.78 601.655 800.587 601.828 800.628 602.556 cv
802.184 628.962 788.385 637.818 772.622 655.405 cv
759.86 669.636 747.756 686.849 737.618 702.967 cv
736.253 705.14 738.5 708 740.928 707.268 cv
763.365 700.543 771.881 670.519 785.071 653.577 cv
798.855 635.872 806.13 625.935 801.911 602.382 cv
cp
f
818.443 946.078 mo
803.22 929.01 824.513 910.424 828.35 894.779 cv
831.078 883.671 829.104 868.626 826.845 857.583 cv
818.621 817.277 800.347 780.127 792.664 739.671 cv
792.295 737.734 789.631 738.408 789.472 740.104 cv
786.457 771.325 795.177 799.56 804.908 829.058 cv
810.627 846.381 814.179 863.294 815.188 881.584 cv
816.248 900.857 801.361 912.178 797.246 929.328 cv
792.432 949.407 831.841 964.486 813.996 985.07 cv
800.774 1000.32 774.9 1007.11 771.422 1029.27 cv
770.771 1033.4 775.636 1037.37 779.037 1033.7 cv
805.59 1005.03 854.393 986.388 818.443 946.078 cv
cp
f
634.737 789.848 mo
587.507 775.035 539.809 827.062 514.152 859.483 cv
499.313 878.233 481.19 875.47 458.711 870.958 cv
451.409 869.486 446.735 868.332 439.361 872.491 cv
415.046 886.208 385.093 940.34 352.122 922.098 cv
351.489 921.753 350.74 922.645 351.329 923.126 cv
367.343 936.093 382.028 932.401 398.001 920.117 cv
407.03 913.17 415.301 904.648 423.211 896.483 cv
435.015 884.299 452.655 877.688 468.368 886.131 cv
471.351 887.736 474.688 889.291 478.089 889.49 cv
503.473 890.954 517.704 871.004 531.971 852.564 cv
557.817 819.156 594.218 802.387 634.737 793.621 cv
636.715 793.19 636.487 790.397 634.737 789.848 cv
cp
f
683.781 959.809 mo
673.143 987.226 677.366 1016.94 662.945 1043.14 cv
651.574 1063.79 626.913 1089.26 601.497 1084.8 cv
590.631 1082.9 585.43 1085.39 578.591 1093.36 cv
577.291 1094.88 578.542 1096.99 580.492 1096.62 cv
599.729 1093.01 612.991 1101.65 631.437 1092.95 cv
646.236 1085.96 660.321 1068.85 669.282 1055.73 cv
688.765 1027.21 683.021 992.935 685.7 960.073 cv
685.795 958.89 684.154 958.862 683.781 959.809 cv
cp
f
518.231 1092.91 mo
512.87 1088.58 507.86 1088.4 501.104 1087.79 cv
491.72 1086.94 482.545 1084.58 473.748 1081.3 cv
451.173 1072.87 439.67 1057.41 438.807 1033.02 cv
438.756 1031.72 437.006 1031.8 436.852 1033.02 cv
434.174 1053.52 439.416 1073.31 456.692 1086.02 cv
469.878 1095.73 502.922 1108.36 517.704 1096.99 cv
518.891 1096.08 519.672 1094.07 518.231 1092.91 cv
cp
f
369.808 1069.79 mo
323.941 1089.04 283.914 1060.93 262.672 1021.2 cv
264.949 1021.19 267.222 1021.17 269.491 1021.16 cv
272.937 1021.13 274.852 1018.01 274.278 1014.87 cv
268.782 984.406 291.611 980.904 305.082 957.755 cv
311.069 947.46 298.093 936.066 292.397 929.683 cv
291.897 929.129 291.001 929.847 291.374 930.474 cv
309.288 960.846 280.926 964.527 266.991 984.15 cv
261.125 992.407 262.039 1001.77 263.623 1011.19 cv
260.589 1011.16 257.561 1011.14 254.527 1011.12 cv
250.359 1011.09 248.659 1015.37 250.154 1018.74 cv
270.218 1063.97 324.787 1111.7 372.339 1074.14 cv
374.336 1072.56 372.171 1068.79 369.808 1069.79 cv
cp
f
81.4146 957.084 mo
60.3501 962.349 40.3398 980.258 37.1802 1010.8 cv
34.0205 1041.36 56.1304 1072.95 102.484 1085.59 cv
148.836 1098.23 188.869 1090.87 214.147 1084.55 cv
239.431 1078.23 278.4 1057.16 286.824 1028.71 cv
295.263 1000.26 287.884 972.884 264.715 950.764 cv
241.532 928.646 210.987 915.996 180.448 918.105 cv
149.89 920.216 116.187 929.7 81.4146 957.084 cv
cp
.647059 .607843 .529412 rgb
f
63.5103 968.146 mo
54.1709 971.883 34.9434 995.016 49.8247 1022.91 cv
58.2446 1038.73 91.103 1051.08 120.406 1054.52 cv
156.209 1058.73 187.809 1057.69 227.842 1033.98 cv
265.747 1011.54 280.514 969.196 246.805 940.756 cv
213.097 912.318 157.265 918.105 121.447 933.914 cv
85.6328 949.715 84.583 959.716 63.5103 968.146 cv
cp
.729412 .705882 .647059 rgb
f
75.1353 998.271 mo
77.8359 1002.24 81.4097 1005.72 85.1924 1008.56 cv
85.7881 1008.99 86.3926 1009.4 87.0107 1009.8 cv
81.6646 1007.41 77.354 1003.73 75.1353 998.271 cv
cp
203.321 939.061 mo
190.938 923.212 166.803 921.452 148.559 923.498 cv
128.507 925.752 105.643 936.547 93.9272 946.473 cv
91.0942 948.874 88.0522 951.568 85.1924 954.573 cv
75.1445 960.734 68.3882 973.71 65.665 984.186 cv
60.6689 1003.38 75.5586 1021.29 92.1982 1028.18 cv
112.349 1036.53 139.697 1028.32 159.347 1022.04 cv
176.97 1016.4 196.775 1005.68 207.336 989.986 cv
218.894 972.829 215.629 954.801 203.321 939.061 cv
cp
.890196 .858824 .796078 rgb
f
167.704 1087.7 mo
125.271 1090.53 68.6021 1081.15 47.2324 1039.26 cv
31.8521 1009.11 44.9004 979.775 70.6021 965.842 cv
62.0322 978.094 59.6406 992.525 70.6982 1008.18 cv
71.5161 1009.35 73.312 1008.35 72.6211 1007.05 cv
62.8687 988.75 68.1787 973.629 80.6006 961.426 cv
82.4736 958.134 96.2456 949.469 98.1138 948.359 cv
121.565 934.491 152.773 926.162 170.037 922.716 cv
223.7 912 303.447 964.316 283.523 1024.92 cv
268.825 1069.62 208.805 1084.97 167.704 1087.7 cv
cp
227.538 923.606 mo
189.714 906.349 151.763 917.078 115.332 932.964 cv
104.943 937.492 93.0127 944.131 83.2012 952.405 cv
58.5039 958.57 38.4717 975.229 33.5791 1001.47 cv
29.5693 1022.97 38.4629 1045.46 52.9385 1061.11 cv
82.146 1092.64 133.186 1098.21 173.509 1094.89 cv
213.652 1091.58 259.604 1076.96 283.147 1041.98 cv
315.609 993.779 270.921 943.394 227.538 923.606 cv
cp
.529412 .466667 .345098 rgb
f
96.0903 940.612 mo
95.6274 941.12 95.0498 941.549 94.5029 942.002 cv
95.1177 941.616 95.7583 941.312 96.4272 941.193 cv
96.9858 941.093 96.4897 940.165 96.0903 940.612 cv
cp
f
84.2427 950.8 mo
83.8921 951.028 84.229 951.605 84.5698 951.364 cv
86.356 950.105 87.8975 948.641 89.3975 947.049 cv
90.2036 946.189 91.1309 945.067 92.1353 944.021 cv
91.6265 944.43 91.0854 944.831 90.6304 945.271 cv
88.5889 947.259 86.6567 949.245 84.2427 950.8 cv
cp
f
92.1353 944.021 mo
92.9492 943.367 93.7036 942.667 94.5029 942.002 cv
93.6626 942.53 92.8804 943.248 92.1353 944.021 cv
cp
f
638.679 364.191 mo
620.83 368.651 603.876 383.823 601.2 409.707 cv
598.522 435.588 617.257 462.362 656.53 473.071 cv
695.802 483.781 729.718 477.54 751.136 472.186 cv
772.56 466.833 805.575 448.98 812.717 424.877 cv
819.862 400.78 813.612 377.577 793.982 358.836 cv
774.34 340.095 748.459 329.383 722.585 331.168 cv
696.698 332.954 668.14 340.987 638.679 364.191 cv
cp
.647059 .607843 .529412 rgb
f
623.507 373.561 mo
615.597 376.725 599.304 396.333 611.914 419.968 cv
619.048 433.359 646.889 443.826 671.712 446.746 cv
702.053 450.313 728.823 449.423 762.741 429.344 cv
794.856 410.325 807.368 374.452 778.81 350.357 cv
750.247 326.263 702.942 331.168 672.597 344.561 cv
642.253 357.947 641.361 366.419 623.507 373.561 cv
cp
.729412 .705882 .647059 rgb
f
633.359 399.085 mo
635.647 402.44 638.673 405.398 641.88 407.795 cv
642.384 408.171 642.896 408.521 643.419 408.853 cv
638.893 406.832 635.239 403.71 633.359 399.085 cv
cp
741.968 348.92 mo
731.471 335.493 711.025 334.001 695.565 335.734 cv
678.577 337.644 659.207 346.788 649.279 355.2 cv
646.878 357.234 644.303 359.52 641.88 362.064 cv
633.364 367.282 627.645 378.28 625.335 387.155 cv
621.1 403.417 633.715 418.588 647.814 424.429 cv
664.889 431.503 688.058 424.552 704.706 419.225 cv
719.637 414.453 736.417 405.366 745.367 392.069 cv
755.158 377.536 752.394 362.257 741.968 348.92 cv
cp
.890196 .858824 .796078 rgb
f
711.789 474.858 mo
675.838 477.255 627.822 469.304 609.72 433.821 cv
596.685 408.274 607.742 383.417 629.517 371.61 cv
622.256 381.988 620.233 394.215 629.597 407.485 cv
630.292 408.469 631.814 407.622 631.229 406.529 cv
622.968 391.022 627.465 378.208 637.989 367.87 cv
639.576 365.08 651.244 357.738 652.83 356.8 cv
672.695 345.051 699.138 337.994 713.765 335.073 cv
759.231 325.993 826.796 370.319 809.917 421.663 cv
797.464 459.539 746.61 472.543 711.789 474.858 cv
cp
762.483 335.825 mo
730.437 321.207 698.283 330.299 667.416 343.753 cv
658.614 347.592 648.504 353.218 640.19 360.227 cv
619.268 365.452 602.297 379.561 598.148 401.803 cv
594.755 420.014 602.286 439.072 614.551 452.323 cv
639.301 479.046 682.542 483.769 716.708 480.953 cv
750.716 478.148 789.649 465.76 809.596 436.125 cv
837.103 395.282 799.238 352.592 762.483 335.825 cv
cp
.529412 .466667 .345098 rgb
f
651.112 350.236 mo
650.721 350.664 650.233 351.028 649.768 351.414 cv
650.29 351.085 650.831 350.828 651.399 350.727 cv
651.871 350.641 651.451 349.861 651.112 350.236 cv
cp
f
641.075 358.867 mo
640.776 359.06 641.063 359.549 641.35 359.344 cv
642.868 358.279 644.171 357.035 645.441 355.688 cv
646.125 354.961 646.913 354.009 647.763 353.123 cv
647.331 353.47 646.872 353.807 646.486 354.183 cv
644.757 355.87 643.12 357.549 641.075 358.867 cv
cp
f
647.763 353.123 mo
648.452 352.569 649.089 351.978 649.768 351.414 cv
649.055 351.862 648.394 352.469 647.763 353.123 cv
cp
f
239.822 1047.37 mo
215.948 1053.33 168.763 1067.38 170.146 1078.51 cv
171.514 1089.66 202.417 1089.66 223.559 1089.66 cv
244.7 1089.66 267.475 1088.03 288.625 1089.66 cv
309.767 1091.28 325.089 1083.61 329.28 1076.64 cv
334.154 1068.51 334.164 1065.25 313.021 1057.13 cv
291.88 1048.99 252.844 1044.11 239.822 1047.37 cv
cp
.647059 .607843 .529412 rgb
f
186.968 1062 mo
175.592 1066.88 165.813 1076.64 186.963 1076.64 cv
208.119 1076.64 248.774 1076.64 278.046 1071.76 cv
307.317 1066.88 315.582 1058.52 300.068 1053.76 cv
284.556 1048.99 253.648 1042.49 232.516 1047.37 cv
211.365 1052.25 196.734 1057.13 186.968 1062 cv
.729412 .705882 .647059 rgb
f
206.409 1056.99 mo
185.073 1064.75 202.531 1070.57 227.746 1068.63 cv
252.967 1066.69 289.816 1049.24 264.592 1047.29 cv
239.39 1045.36 225.801 1047.29 206.409 1056.99 cv
.890196 .858824 .796078 rgb
f
312.877 1083.82 mo
297.455 1088.17 280.128 1085.38 264.351 1085.07 cv
244.455 1084.66 224.718 1088.06 204.736 1087.14 cv
201.676 1086.99 170.396 1085.08 171.769 1076.88 cv
172.737 1071.15 184.072 1066.67 188.564 1064.45 cv
201.189 1058.21 214.471 1054.82 228.25 1052.37 cv
228.669 1052.29 229.124 1052.22 229.556 1052.14 cv
242.936 1050.13 256.293 1047.98 269.775 1049.83 cv
276.845 1050.8 283.897 1052.09 290.889 1053.64 cv
292.308 1054.24 293.708 1054.88 295.063 1055.61 cv
295.208 1055.69 295.331 1055.48 295.186 1055.39 cv
294.545 1054.97 293.872 1054.58 293.208 1054.19 cv
297.568 1055.19 301.893 1056.26 306.184 1057.5 cv
312.5 1059.31 318.683 1061.64 324.275 1065.12 cv
336.774 1072.85 320.547 1081.66 312.877 1083.82 cv
cp
330.527 1063.38 mo
319.861 1051.99 297.391 1049.49 283.015 1047 cv
278.969 1046.3 274.963 1045.87 270.979 1045.63 cv
239.722 1038.95 201.608 1048.91 176.548 1064.35 cv
167.936 1069.66 161.021 1078.94 171.796 1085.88 cv
181.98 1092.44 197.866 1092.54 209.534 1093.04 cv
226.236 1093.77 243.091 1091.83 259.727 1090.65 cv
279.877 1089.22 300.15 1094.3 319.76 1087.25 cv
329.904 1083.6 339.498 1072.95 330.527 1063.38 cv
cp
.529412 .466667 .345098 rgb
f
1250.38 668.375 mo
1250.38 668.375 1297.8 631.895 1326.99 617.304 cv
1356.17 602.711 1418.56 577.726 1462.17 587.987 cv
1505.79 598.251 1528.88 621.341 1567.36 652.125 cv
1605.84 682.909 1646.88 700.868 1659.71 706 cv
1672.54 711.132 1685.37 798.354 1672.54 816.313 cv
1672.54 839.4 1652.01 913.802 1608.4 939.453 cv
1564.79 965.108 1518.61 962.542 1472.43 957.411 cv
1426.26 952.28 1392.91 944.577 1369.82 934.326 cv
1339.03 957.411 1308.25 980.501 1272.33 985.626 cv
1236.41 990.765 1208.19 957.403 1169.71 952.28 cv
1131.23 947.156 1118.41 947.156 1110.71 939.453 cv
1103.02 931.761 1097.88 936.886 1097.88 890.713 cv
1097.88 844.533 1074.28 819.845 1098.91 788.574 cv
1123.54 757.306 1131.75 765.53 1131.75 765.53 cv
1123.54 736.784 1131.24 708.562 1149.19 695.738 cv
1167.15 682.909 1251.52 656.403 1250.38 668.375 cv
cp
.647059 .607843 .529412 rgb
f
1571.9 658.19 mo
1571.8 657.84 1571.7 657.487 1571.59 657.139 cv
1562.04 626.16 1508.63 607.142 1482.03 597.449 cv
1433.39 579.728 1386.35 587.545 1341.23 611.45 cv
1305.22 630.532 1274.88 660.789 1233.73 668.297 cv
1213.67 671.963 1192.97 672.51 1174.21 681.379 cv
1154.17 690.853 1122.25 721.393 1124.82 739.346 cv
1131.69 729.239 1186.88 732.131 1194.09 739.346 cv
1181.26 739.346 1171 741.912 1159.13 747.525 cv
1148.13 752.724 1138.45 760.324 1128.13 766.774 cv
1105 781.242 1095.02 793.045 1092.25 814.187 cv
1103.41 843.912 1100.5 900.954 1143.5 899.848 cv
1153.06 899.593 1167.38 893.876 1176.49 899.32 cv
1184.16 903.905 1186.41 910.514 1189.31 918.679 cv
1195.23 935.304 1207.25 937.225 1219.75 946.888 cv
1220.53 947.494 1221.23 948.15 1221.93 948.802 cv
1219.98 933.267 1213.49 919.688 1203.93 905.851 cv
1198.37 897.783 1192.58 889.812 1187.6 881.36 cv
1183.66 874.699 1181.82 866.606 1177.25 860.354 cv
1171.19 852.075 1161.49 866.248 1154.98 867.452 cv
1150.02 868.37 1143.92 866.354 1139.64 863.928 cv
1129.57 858.218 1120.27 849.362 1117.81 837.83 cv
1117.16 837.362 1116.53 836.892 1115.87 836.417 cv
1113.29 834.561 1115.77 830.243 1118.37 832.126 cv
1118.38 832.128 1118.39 832.138 1118.4 832.146 cv
1119.82 831.491 1122 832.188 1122.17 834.271 cv
1122.2 834.541 1122.3 834.811 1122.34 835.082 cv
1130.16 841.045 1138.83 847.786 1148.87 847.115 cv
1156.21 846.627 1164.26 845.526 1169.47 839.828 cv
1170.59 838.611 1171.55 837.647 1173 836.879 cv
1183.61 831.281 1203.85 860.166 1207.03 867.276 cv
1212.85 880.319 1215.98 892.353 1227.58 901.566 cv
1233.9 906.586 1239.05 911.979 1240.65 920.183 cv
1241 921.988 1241.22 923.817 1241.38 925.64 cv
1241.98 925.888 1242.48 926.382 1242.66 927.243 cv
1245.79 942.363 1258.59 960.258 1273.06 957.424 cv
1288.83 945.801 1301.99 927.945 1315.49 916.016 cv
1352.33 883.464 1395.66 865.7 1440.34 847.629 cv
1462.04 838.853 1473.3 819.108 1487.43 801.532 cv
1506.85 777.382 1527.62 763.102 1558.15 757.117 cv
1560.17 737.621 1562.76 718.333 1567.01 699.182 cv
1569.87 686.317 1575.53 671.442 1571.9 658.19 cv
cp
.729412 .705882 .647059 rgb
f
1365.04 799.782 mo
1350.68 798.411 1323.15 801.566 1316.08 784.551 cv
1311.49 773.5 1306.11 767.04 1294.03 764.254 cv
1287.52 762.749 1279.96 764.39 1273.46 765.172 cv
1259.67 766.839 1250.7 758.824 1240.67 751.396 cv
1231.3 744.455 1217.9 746.023 1205.82 748.566 cv
1176.26 744.666 1144.45 755.04 1121.45 773.807 cv
1107.66 785.064 1087.41 807.186 1106.33 823.205 cv
1133.18 845.949 1187.97 819.119 1217.18 817.832 cv
1244.14 816.652 1271.35 831.786 1296.72 838.963 cv
1313.13 843.606 1330.96 844.654 1347.91 844.387 cv
1363.87 844.14 1401.4 841.54 1404.3 819.812 cv
1406.74 801.508 1376.66 800.889 1365.04 799.782 cv
cp
.890196 .858824 .796078 rgb
f
1497.41 619.484 mo
1474.92 586.965 1427.18 578.871 1394.46 599.735 cv
1377.12 603.669 1359.95 611.04 1344.14 617.823 cv
1328.26 624.636 1314.03 633.732 1300.21 643.532 cv
1294.11 645.533 1288.22 648.032 1282.99 652.083 cv
1273.31 659.571 1264.69 667.926 1254.29 674.521 cv
1244.29 680.868 1232.71 683.006 1222.36 688.411 cv
1221.08 689.082 1219.85 689.785 1218.59 690.476 cv
1208.84 693.842 1198.96 696.942 1189.17 700.217 cv
1197.95 691.484 1208.34 685.044 1221.1 681.431 cv
1226.5 679.894 1225.63 670.889 1219.74 671.38 cv
1185.92 674.206 1132.89 691.619 1123.67 728.993 cv
1122.68 733.056 1127.37 737.628 1131.28 734.841 cv
1136.06 731.422 1141.98 729.68 1148.1 728.553 cv
1149.52 728.888 1151.02 728.797 1152.25 727.892 cv
1152.25 727.883 1152.27 727.876 1152.28 727.866 cv
1156.82 727.214 1161.35 726.771 1165.51 726.134 cv
1180.25 723.875 1192.49 718.145 1205.24 710.598 cv
1216.03 704.209 1227.26 699.352 1238.42 694.168 cv
1241.28 693.028 1244.12 691.84 1246.93 690.581 cv
1268.11 681.092 1285.96 666.247 1304.5 652.497 cv
1314.85 648.658 1326.65 646.834 1336.58 642.595 cv
1354.59 634.898 1369.64 622.525 1388.37 615.917 cv
1399.11 612.127 1414.26 610.278 1430.05 610.313 cv
1436.42 610.887 1442.78 611.794 1449.15 612.842 cv
1459.25 615.545 1469.55 618.841 1480.68 621.673 cv
1484.55 623.795 1488.78 624.747 1494.24 625.013 cv
1496.91 625.144 1498.98 621.747 1497.41 619.484 cv
cp
f
1508.53 685.052 mo
1502.7 679.517 1499.51 672.809 1498.97 664.931 cv
1498.66 662.919 1496.53 661.212 1494.73 661.346 cv
1471.56 663.054 1454.06 638.232 1429.82 638.48 cv
1417.77 638.603 1405.53 643.572 1393.93 646.561 cv
1378.22 650.611 1362.5 646.863 1346.92 651.555 cv
1338.26 654.167 1330.27 660.335 1322.49 665.042 cv
1311.74 671.546 1300.01 673.734 1289.16 679.295 cv
1280.25 683.859 1272.61 690.931 1267.01 699.554 cv
1258.91 708.345 1254.53 720.879 1258.6 733.72 cv
1268.17 763.941 1308.78 742.231 1325.05 736.826 cv
1343.85 730.582 1365.22 738.369 1384.13 739.373 cv
1397.33 740.077 1406.87 727.704 1415.18 718.33 cv
1424.11 708.279 1433.48 702.821 1445.16 697.576 cv
1463.32 689.431 1460.38 702.291 1471.59 705.72 cv
1484.12 709.549 1498.73 701.44 1508.53 693.595 cv
1511.08 691.541 1511.71 686.952 1508.53 685.052 cv
cp
f
1671.44 707.667 mo
1671.33 705.068 1669.78 702.969 1667.28 702.197 cv
1612.16 685.195 1573.57 649.505 1530.08 613.917 cv
1504.18 592.716 1478.5 582.311 1445.02 581.407 cv
1347.66 578.787 1278.53 651.314 1197.89 693.641 cv
1196.27 694.487 1197.41 697.281 1199.15 696.62 cv
1299.65 658.341 1412.75 535.842 1521.95 622.054 cv
1544.93 640.206 1565.25 660.705 1589.57 677.284 cv
1603.35 686.672 1618.1 694.506 1633.18 701.573 cv
1645.84 707.498 1659.37 707.36 1661.46 723.19 cv
1665.62 754.681 1687.17 782.65 1667.24 813.554 cv
1651.25 838.364 1620.21 849.882 1606.95 876.9 cv
1605.73 879.389 1608.55 881.348 1610.61 879.727 cv
1636.27 859.553 1668.03 838.012 1683.25 808.338 cv
1699.06 777.511 1672.85 738.747 1671.44 707.667 cv
cp
.529412 .466667 .345098 rgb
f
1679.55 802.341 mo
1679.45 801.032 1677.69 800.752 1677.26 802.035 cv
1665.76 836.437 1658.57 869.366 1638.39 900.537 cv
1618 932.022 1588.93 948.204 1552.5 952.325 cv
1523.62 955.601 1494.12 954.769 1465.21 952.521 cv
1438.71 950.463 1401.69 947.969 1380.05 930.271 cv
1373.59 924.99 1364.3 934.172 1370.82 939.498 cv
1391.68 956.551 1421.26 960.264 1447.08 963.688 cv
1484.77 968.688 1524.1 969.236 1561.82 964.241 cv
1632.22 954.923 1685.22 870.956 1679.55 802.341 cv
cp
f
1427.79 850.619 mo
1389.03 875.357 1377.09 925.477 1338.07 951.492 cv
1316.57 965.824 1289.34 979.14 1263.37 981.55 cv
1235.97 984.096 1207.15 966.209 1186.05 950.704 cv
1173.01 941.132 1155.33 932.51 1138.74 935.642 cv
1095.71 943.763 1105.23 906.327 1103.54 881.236 cv
1102.37 863.968 1097.11 846.958 1094.09 829.971 cv
1088.66 799.307 1107.63 781.034 1131.75 765.53 cv
1133.54 764.378 1134.68 762.156 1133.99 760.021 cv
1112.39 692.534 1204.04 679.289 1249.51 664.611 cv
1250.94 664.152 1250.36 662.026 1248.89 662.365 cv
1205.73 672.393 1128.96 678.318 1121.01 734.414 cv
1120.44 738.383 1120.5 742.505 1121.04 746.474 cv
1122.97 760.775 1119.04 761.455 1107.62 770.193 cv
1096.41 778.769 1088.26 789.63 1083.82 802.985 cv
1073.87 832.959 1093.24 869.751 1092.3 900.337 cv
1091.62 922.222 1099.63 953.244 1129.3 948.861 cv
1175.21 942.083 1207.11 986.733 1252.46 992.737 cv
1286.19 997.197 1332.27 973.091 1356.57 952.052 cv
1386.97 925.72 1408.65 886.935 1431.3 854.129 cv
1432.77 851.996 1429.9 849.274 1427.79 850.619 cv
cp
f
1565.01 701.422 mo
1565.09 701.13 1564.66 701.021 1564.56 701.298 cv
1560.77 711.274 1558.82 720.977 1557.52 731.5 cv
1556.58 739.132 1560.69 755.15 1551.17 755.17 cv
1536.23 755.205 1521.85 766.195 1510.69 774.731 cv
1485.32 794.143 1453.14 824.136 1443.29 855.554 cv
1442.8 857.101 1444.91 858.335 1446.02 857.144 cv
1461.15 840.753 1473.65 822.287 1488.71 805.767 cv
1505.26 787.631 1531.57 758.986 1558.47 760.66 cv
1559.79 760.745 1561.01 759.461 1560.97 758.165 cv
1560.25 738.897 1559.52 720.159 1565.01 701.422 cv
cp
f
1235.91 694.857 mo
1232.72 707.387 1229.37 742.321 1212.34 738.115 cv
1198.33 734.657 1182.45 738.181 1168.82 741.678 cv
1144.22 747.995 1109.68 763.264 1095.72 785.39 cv
1094.35 787.565 1096.94 789.435 1098.91 788.574 cv
1115.13 781.51 1129.03 768.802 1144.88 760.542 cv
1169.18 747.893 1196.18 741.99 1223 749.003 cv
1224.94 749.511 1226.86 748.387 1227.43 746.496 cv
1232.49 729.703 1234.84 712.563 1237.26 695.235 cv
1237.38 694.369 1236.14 693.96 1235.91 694.857 cv
cp
f
1191.16 875.357 mo
1188.47 869.208 1179.06 851.785 1169.53 855.616 cv
1163.72 857.958 1159.68 861.344 1154.62 865.144 cv
1143.22 873.703 1118.93 837.784 1117.34 833.714 cv
1117.02 832.894 1115.72 833.206 1115.99 834.086 cv
1120.11 847.5 1140.05 877.689 1157.45 869.984 cv
1159.89 868.447 1162.31 866.866 1164.7 865.244 cv
1176.21 867.62 1183.32 873.54 1186.02 883.002 cv
1188.76 889.938 1193.69 894.703 1198.71 900.004 cv
1206.93 908.697 1214.44 917.924 1218.93 929.098 cv
1222.72 938.509 1220.42 950.165 1221.63 960.126 cv
1221.88 962.262 1224.73 963.525 1225.97 961.298 cv
1246.76 924.077 1203.81 904.354 1191.16 875.357 cv
cp
f
1402.85 836.614 mo
1375.56 841.629 1352.93 848.241 1324.55 845.579 cv
1297.16 843.006 1270.33 835.77 1242.9 832.965 cv
1241.82 832.858 1241.66 834.522 1242.65 834.796 cv
1288.2 847.575 1364.83 882.304 1406.47 842.85 cv
1409.38 840.089 1406.29 835.98 1402.85 836.614 cv
cp
f
1437.56 618.866 mo
1413.46 628.263 1388.49 622.887 1364.66 630.737 cv
1341.77 638.278 1324.73 653.91 1299.7 656.245 cv
1298.52 656.353 1298.48 658.141 1299.7 658.11 cv
1321.92 657.549 1339.73 647.635 1359.86 639.417 cv
1386.28 628.633 1414.72 640.039 1440.44 625.684 cv
1444.05 623.666 1441.56 617.31 1437.56 618.866 cv
cp
f
1662.79 778.403 mo
1652.53 775.839 1601.22 768.141 1573 770.707 cv
1544.78 773.272 1516.56 770.707 1488.34 832.275 cv
1460.12 893.851 1452.42 950.287 1460.12 968.247 cv
1467.82 986.2 1519.13 1022.12 1555.04 1047.77 cv
1590.96 1073.43 1603.78 1083.69 1642.26 1083.69 cv
1680.75 1083.69 1739.75 1065.73 1788.5 1037.51 cv
1834.68 1024.69 1873.16 1009.3 1880.85 983.64 cv
1888.55 957.979 1883.42 945.155 1873.16 904.112 cv
1862.89 863.063 1875.72 786.098 1834.68 757.88 cv
1793.62 729.66 1806.45 752.748 1780.8 737.357 cv
1755.14 721.967 1732.05 719.394 1711.53 739.92 cv
1691.01 760.444 1662.79 778.403 1662.79 778.403 cv
cp
.647059 .607843 .529412 rgb
f
1760.16 728.927 mo
1758.54 727.691 1756.77 729.371 1756.75 731.05 cv
1751.36 729.171 1745.38 728.472 1738.53 729.376 cv
1717.06 732.209 1701.47 751.64 1684.26 763.798 cv
1684.44 764.524 1684.36 765.328 1683.79 766.05 cv
1675.68 776.151 1663.05 779.42 1651.22 774.589 cv
1643.62 774.908 1635.74 774.308 1627.93 773.455 cv
1623.08 773.064 1618.22 772.576 1613.38 771.82 cv
1613.18 771.788 1613.04 771.692 1612.86 771.625 cv
1606.5 770.83 1600.32 770.12 1594.55 769.893 cv
1568.61 768.871 1539.57 769.322 1516.99 783.548 cv
1490.68 800.121 1478.23 843.95 1474.56 873.292 cv
1471.44 898.181 1481.75 912.063 1501.92 905.611 cv
1497.5 919.858 1475.15 927.574 1477.92 946.328 cv
1479.36 956.096 1491.8 963.916 1499.16 968.428 cv
1514.78 978.014 1521.28 996.553 1536.37 1006.83 cv
1544.73 1012.53 1554.26 1019.36 1564.81 1017.74 cv
1568.31 1017.19 1572.59 1013.1 1575.44 1011.35 cv
1586.74 1004.43 1595.07 1012.11 1607.63 1013.14 cv
1616.11 1013.83 1636.06 1016.38 1643.54 1015.7 cv
1677.61 1007.74 1699.99 963.492 1697.5 928.48 cv
1697.45 927.835 1697.65 927.352 1697.95 926.969 cv
1697.72 922.339 1697.54 917.71 1697.5 913.085 cv
1697.47 909.882 1702.44 909.882 1702.47 913.085 cv
1702.7 939.14 1706.64 965.406 1703.43 990.301 cv
1706.57 986.22 1709.59 981.98 1712.53 977.604 cv
1721.25 964.646 1725.83 950.091 1727.67 934.704 cv
1728.78 925.465 1727.12 915.925 1726.5 906.705 cv
1725.54 892.437 1738.75 896.025 1748.73 896.52 cv
1753.17 896.741 1756.28 892.795 1756.53 888.713 cv
1757.51 872.889 1755.72 853.676 1774.65 847.367 cv
1781.97 844.928 1790.28 846.939 1797.77 845.208 cv
1811.91 841.933 1817.51 832.705 1820.17 818.893 cv
1827.39 781.25 1785.86 748.515 1760.16 728.927 cv
cp
.729412 .705882 .647059 rgb
f
1651.42 781.575 mo
1608.89 772.189 1560.49 756.27 1521.97 784.297 cv
1497.14 802.366 1467.87 838.006 1478.09 870.88 cv
1479.27 874.667 1484.05 876.092 1486.95 873.222 cv
1498.7 861.565 1510.54 838.298 1527.07 833.233 cv
1538.01 829.876 1543.77 823.309 1552.22 815.345 cv
1566.81 801.58 1604.42 785.429 1624.41 791.648 cv
1626.9 792.423 1628.95 790.704 1629.71 788.607 cv
1632.38 788.455 1635.07 788.211 1637.94 787.735 cv
1639.84 787.416 1640.44 785.429 1639.93 783.847 cv
1643.83 783.778 1647.67 783.502 1651.42 782.922 cv
1652.12 782.819 1652.07 781.717 1651.42 781.575 cv
cp
.890196 .858824 .796078 rgb
f
1758.63 751.582 mo
1754.94 749.127 1750.39 747.936 1745.4 747.664 cv
1739.97 746.894 1734.69 747.324 1729.82 749.102 cv
1727.54 749.568 1725.27 750.123 1723.07 750.743 cv
1710.98 754.134 1699.4 760.181 1689.76 768.18 cv
1667.73 786.472 1643.65 793.296 1616.41 799.987 cv
1578.51 809.305 1560.95 832.894 1552.5 869.854 cv
1544.25 906.001 1577.15 922.846 1605.7 904.446 cv
1610.32 901.463 1613.09 897.06 1616.14 892.671 cv
1618.17 889.013 1620.22 885.365 1622.31 881.738 cv
1633.25 862.556 1645.61 874.791 1657.66 874.81 cv
1669.79 874.816 1683.11 872.876 1689.89 861.35 cv
1692.9 856.251 1694.81 850.86 1696.84 845.312 cv
1701.67 832.034 1705.35 835.205 1716.09 837.65 cv
1733 841.502 1747.46 832.255 1763.84 829.134 cv
1822.22 817.995 1793.14 766.823 1758.63 751.582 cv
cp
f
1666.74 945.938 mo
1665 943.67 1662.81 942.48 1659.89 943.157 cv
1640.75 947.592 1623.58 939.093 1605.61 933.819 cv
1588.8 928.896 1574.46 932.804 1557.65 934.829 cv
1532.71 937.83 1512.75 920.254 1495.5 945.378 cv
1494.87 946.296 1495.2 947.254 1495.87 947.872 cv
1492.47 953.322 1492.77 960.472 1500.34 964.906 cv
1503.66 966.847 1507.5 966.938 1511.19 967.218 cv
1521.94 968.013 1527.93 972.439 1534.63 980.138 cv
1542.77 989.481 1549.64 996.828 1561.61 1000.63 cv
1576.59 1005.39 1587.87 992.021 1601.85 990.289 cv
1616.73 988.445 1629.32 992.132 1644.08 987.47 cv
1663.48 981.342 1681.93 965.856 1666.74 945.938 cv
cp
f
1803.11 739.855 mo
1783.21 731.486 1746.31 714.731 1724.81 725.43 cv
1695.34 740.102 1681.29 770.876 1648.9 781.835 cv
1626.69 789.351 1602.74 790.508 1581.72 801.502 cv
1560.78 812.443 1554.42 834.861 1553.24 856.831 cv
1553.04 860.475 1558.5 860.367 1558.83 856.831 cv
1564.57 795.548 1618.64 805.01 1662.18 786.185 cv
1684.11 776.704 1697.44 757.88 1714.85 742.321 cv
1742.79 717.353 1772.13 746.242 1802.18 746.722 cv
1806.45 746.79 1806.51 741.281 1803.11 739.855 cv
cp
.529412 .466667 .345098 rgb
f
1879.7 906.639 mo
1866.13 861.682 1876.42 811.517 1854.44 768.753 cv
1833.31 727.645 1792.74 748.149 1758.94 728.993 cv
1757.15 727.98 1754.98 730.57 1756.68 731.922 cv
1766.9 740.038 1777.06 745.357 1790.05 747.519 cv
1805.88 750.156 1820.21 747.102 1833.53 758.543 cv
1864.46 785.104 1857.9 845.493 1862.03 881.817 cv
1866.1 917.71 1894.61 961.188 1868.29 994.041 cv
1842.65 1026.04 1787.18 1026.79 1750.64 1036.04 cv
1746.16 1037.17 1747.34 1043.61 1751.69 1043.83 cv
1788.15 1045.65 1837.68 1036.94 1866.73 1012.9 cv
1902.47 983.327 1891.56 945.938 1879.7 906.639 cv
cp
f
1675.95 774.315 mo
1621.18 780.834 1564.63 746.75 1515.13 783.291 cv
1480.75 808.677 1473.6 859.084 1460.18 896.663 cv
1447.12 933.207 1440.24 962.829 1468.85 993.226 cv
1487.26 1012.78 1511.29 1028.69 1532.69 1044.84 cv
1558.14 1064.05 1583.66 1080.57 1615.18 1086.97 cv
1618.37 1087.62 1620.78 1083 1617.52 1081.43 cv
1570.06 1058.49 1528.55 1026.77 1487.36 994.287 cv
1449.47 964.405 1458.84 932.991 1472.84 892.971 cv
1486.49 853.933 1492.69 808.554 1530.54 784.727 cv
1573.05 757.967 1629.63 790.249 1676.08 775.232 cv
1676.55 775.076 1676.5 774.25 1675.95 774.315 cv
cp
f
1700.3 907.081 mo
1687.21 946.673 1694.26 996.501 1646.94 1012.1 cv
1632.39 1016.9 1621.55 1013.42 1607.75 1010.48 cv
1602.85 1009.44 1593.5 1009.76 1589.7 1013.57 cv
1584.04 1019.27 1582.09 1025.5 1579.86 1033.15 cv
1570.65 1064.76 1533.86 1030.35 1522.5 1022.07 cv
1520.64 1020.72 1517.98 1023.39 1519.32 1025.26 cv
1532.85 1044.26 1551.72 1067.56 1578 1054.51 cv
1587.68 1049.71 1589.98 1041.17 1592.83 1031.29 cv
1596.27 1019.36 1632.67 1027.4 1643.59 1025.12 cv
1703.33 1012.65 1693.21 954.39 1702.1 907.576 cv
1702.32 906.398 1700.68 905.93 1700.3 907.081 cv
cp
f
1807.81 1031.08 mo
1775.58 1035.86 1744.18 1054.27 1713.58 1064.96 cv
1695.15 1071.4 1676.14 1076.37 1656.72 1078.58 cv
1638.85 1080.61 1623.64 1073.96 1606.53 1073.3 cv
1602.43 1073.14 1600.98 1078.13 1603.39 1080.87 cv
1623.64 1103.72 1672.49 1090.52 1697.2 1083.73 cv
1734.7 1073.39 1777.22 1057.47 1809.79 1035.77 cv
1812.33 1034.07 1810.63 1030.67 1807.81 1031.08 cv
cp
f
1879.04 968.286 mo
1891.19 985.301 1913.06 990.153 1932.5 999.874 cv
1951.94 1009.6 1961.66 1038.76 1959.24 1053.34 cv
1956.8 1067.92 1950.59 1079.13 1935.47 1072.31 cv
1920.35 1065.49 1913.06 1065.49 1913.06 1065.49 cv
1913.06 1065.49 1915.33 1083.59 1887.47 1096.42 cv
1859.6 1109.23 1842.59 1121.38 1801.28 1109.23 cv
1759.96 1097.08 1730.59 1073.67 1733.13 1040.42 cv
1735.67 1007.17 1742.95 987.723 1750.25 958.564 cv
1757.53 929.398 1793.99 900.245 1825.58 905.102 cv
1857.17 909.96 1854.74 939.12 1879.04 968.286 cv
.647059 .607843 .529412 rgb
f
1920.35 1009.6 mo
1932.51 1014.45 1947.08 1036.33 1937.36 1046.05 cv
1927.65 1055.77 1930.08 1043.61 1922.78 1029.04 cv
1915.49 1014.45 1910.63 1007.17 1905.77 999.874 cv
1910.63 1004.74 1920.35 1009.6 1920.35 1009.6 cv
cp
.729412 .705882 .647059 rgb
f
1742.95 997.445 mo
1742.95 997.445 1750.25 978.009 1759.96 963.421 cv
1755.1 985.301 1752.68 1007.17 1738.1 1021.75 cv
1723.52 1036.33 1733.24 1065.49 1745.39 1077.64 cv
1757.53 1089.79 1776.97 1097.08 1801.28 1097.08 cv
1825.58 1097.08 1806.14 1067.92 1815.85 1077.64 cv
1825.58 1087.36 1828 1089.79 1845.02 1089.79 cv
1862.03 1089.79 1871.75 1060.63 1859.6 1033.9 cv
1847.45 1007.17 1866.89 1016.88 1857.17 982.859 cv
1847.45 948.842 1840.16 905.102 1803.71 905.102 cv
1774.54 914.824 1747.81 936.69 1742.95 997.445 cv
cp
f
1905.64 1003.81 mo
1867.56 979.995 1874.18 907.101 1822.68 900.213 cv
1793.02 896.24 1764.68 922.403 1751.75 946.314 cv
1743.84 960.959 1740.12 977.702 1737.07 993.923 cv
1733.92 1010.74 1730.26 1028.24 1730.61 1045.35 cv
1730.65 1046.92 1733.09 1047.88 1733.8 1046.22 cv
1745.22 1019.28 1743.65 987.978 1754.01 960.225 cv
1764.47 932.217 1796.61 900.355 1829.19 909.908 cv
1849.67 915.919 1859.67 944.042 1867.82 961.313 cv
1876.19 979.006 1885.08 998.284 1903.76 1007.02 cv
1905.91 1008.03 1907.7 1005.1 1905.64 1003.81 cv
cp
.529412 .466667 .345098 rgb
f
1960.3 1030.82 mo
1955.06 1012.66 1944.97 1001.63 1927.77 993.994 cv
1914.3 988.017 1900.53 984.552 1889.32 974.452 cv
1878.25 964.49 1871.21 950.157 1863.99 937.363 cv
1862.98 935.57 1860.54 937.147 1861.31 938.924 cv
1868.11 954.754 1874.47 970.903 1887.28 982.892 cv
1901.87 996.553 1923.79 998.396 1939.42 1010.63 cv
1948.93 1018.06 1953.05 1035.35 1954.3 1046.63 cv
1954.96 1052.39 1954.56 1058.43 1951.74 1063.56 cv
1947.55 1071.2 1936.37 1065.45 1929.92 1065.22 cv
1927.13 1065.12 1925.54 1068.87 1927.62 1070.79 cv
1935.68 1078.18 1951.36 1079.62 1958.48 1069.88 cv
1966.6 1058.77 1963.83 1043.08 1960.3 1030.82 cv
cp
f
1888.42 1000.9 mo
1887.95 1000.24 1887.02 1000.79 1887.34 1001.53 cv
1896.11 1021.2 1912.28 1047.23 1906.82 1069.43 cv
1901.07 1092.84 1869.74 1105.97 1847.94 1104.46 cv
1845.93 1104.32 1845.61 1106.95 1847 1107.93 cv
1868.51 1123.06 1901.4 1097.39 1912.11 1079.29 cv
1926.89 1054.31 1902.37 1020.42 1888.42 1000.9 cv
cp
f
1947.91 1070.67 mo
1941.84 1067.15 1934 1067.68 1927.24 1066.46 cv
1924.13 1065.9 1921.08 1065.09 1918.03 1064.26 cv
1914.42 1063.28 1912.5 1063.43 1908.9 1063.03 cv
1907.53 1062.88 1907.41 1064.71 1908.27 1065.35 cv
1917.62 1072.35 1936.39 1080.84 1947.91 1074.7 cv
1949.47 1073.87 1949.38 1071.52 1947.91 1070.67 cv
cp
f
1935.47 1072.31 mo
1933.98 1068.51 1929.45 1066.04 1927.07 1062.58 cv
1924.01 1058.13 1922.78 1052.76 1922.45 1047.46 cv
1922.37 1046.26 1920.61 1046.25 1920.58 1047.46 cv
1920.45 1052.95 1921.34 1058.04 1923.59 1063.06 cv
1925.42 1067.17 1929.34 1073.46 1934.12 1074.08 cv
1934.98 1074.2 1935.78 1073.1 1935.47 1072.31 cv
cp
f
1887.47 1096.42 mo
1870.47 1100.88 1856.67 1108.39 1838.57 1109.96 cv
1818.13 1111.73 1796.96 1107.81 1778.51 1098.96 cv
1757.53 1088.9 1736.04 1065.93 1735.49 1041.87 cv
1735.04 1021.97 1755.18 1008.1 1754.12 988.601 cv
1754.08 987.879 1753.03 987.464 1752.67 988.205 cv
1744.16 1005.72 1725.2 1026.83 1728.26 1047.72 cv
1731.79 1071.73 1750.89 1091.32 1770.9 1103.63 cv
1789.39 1114.99 1812.61 1118.38 1833.92 1118.17 cv
1851.6 1117.99 1878.08 1114.07 1889.22 1098.69 cv
1890.06 1097.53 1888.69 1096.1 1887.47 1096.42 cv
cp
f
1842.82 1069.67 mo
1840.04 1061.95 1835.42 1057.13 1828.89 1052.25 cv
1817.48 1043.7 1813.06 1044.56 1816.55 1027.64 cv
1817.26 1024.22 1814.48 1021.29 1811 1022.09 cv
1804.03 1023.67 1797.34 1022.18 1790.45 1021.27 cv
1790.54 1021.29 1789.9 1010.09 1789.74 1009.3 cv
1787.56 999.216 1783.98 992.9 1774.52 988.328 cv
1774.23 988.186 1773.85 988.582 1774.14 988.816 cv
1785.55 997.861 1786.09 1010.33 1783.92 1023.49 cv
1783.66 1025.01 1784.3 1027.13 1786.13 1027.4 cv
1792.76 1028.34 1798.93 1030.04 1805.41 1030.7 cv
1797.26 1053.83 1821.08 1058.8 1837.11 1073 cv
1839.47 1075.08 1844.07 1073.12 1842.82 1069.67 cv
cp
f
1831.34 936.944 mo
1815.79 905.91 1777.95 926.799 1768.55 952.099 cv
1766.5 952.722 1764.83 954.625 1765.5 957.295 cv
1765.75 958.309 1766.13 959.306 1766.57 960.289 cv
1766.54 960.522 1766.5 960.758 1766.48 960.993 cv
1766.43 961.541 1766.84 961.742 1767.25 961.697 cv
1771.73 970.122 1782.04 977.298 1788.53 982.892 cv
1792.69 986.467 1795.77 988.057 1801.36 989.104 cv
1808.33 990.418 1814.75 988.406 1817.25 998.897 cv
1818.41 1003.75 1818.52 1008.41 1820.29 1013.15 cv
1821.27 1015.78 1823.91 1016.99 1826.49 1015.68 cv
1851.51 1002.87 1841.07 956.355 1831.34 936.944 cv
cp
.890196 .858824 .796078 rgb
f
1799.71 1064.78 mo
1797.76 1060.77 1795.9 1058.45 1792.19 1056 cv
1787.13 1052.67 1778.8 1056.03 1775.9 1048.61 cv
1772.59 1040.11 1778.27 1030.3 1776.2 1021.56 cv
1773.79 1011.34 1770.15 996.122 1762.39 1002.3 cv
1747.16 1014.45 1737.96 1048.32 1745.65 1063.41 cv
1755.22 1082.19 1778.99 1090.2 1797.72 1079.84 cv
1802.77 1077.04 1801.78 1069 1799.71 1064.78 cv
cp
f
1035.33 968.25 mo
1030.43 985.07 1063.18 1008.57 1094.87 1008.57 cv
1126.55 1008.57 1168.8 996.091 1196.65 994.166 cv
1224.5 992.243 1247.55 999.938 1279.23 1004.73 cv
1310.92 1009.53 1334.92 1005.69 1346.45 992.243 cv
1357.97 978.804 1364.69 959.604 1352.21 945.202 cv
1339.73 930.802 1290.76 922.155 1262.91 924.069 cv
1235.06 925.992 1186.08 927.917 1154.4 933.678 cv
1122.72 939.431 1042.05 945.202 1035.33 968.25 cv
cp
.647059 .607843 .529412 rgb
f
1042.06 959.604 mo
1034.3 965.244 1024.78 983.595 1059.34 986.481 cv
1093.91 989.366 1141.93 983.595 1181.29 977.843 cv
1220.66 972.079 1248.51 978.804 1270.6 983.595 cv
1292.68 988.404 1375.52 967.299 1335.89 938.469 cv
1314.77 923.106 1259.08 924.069 1230.27 924.069 cv
1201.46 924.069 1149.61 937.507 1121.76 940.394 cv
1093.91 943.27 1063.19 944.241 1042.06 959.604 cv
cp
.729412 .705882 .647059 rgb
f
1073.75 948.078 mo
1057.38 951.665 1026.7 960.564 1043.98 967.288 cv
1061.27 974.003 1108.32 971.128 1149.61 961.526 cv
1190.9 951.918 1235.08 948.078 1250.44 948.078 cv
1265.8 948.078 1308.05 925.992 1246.59 925.992 cv
1185.14 925.992 1169.77 929.84 1147.69 936.556 cv
1125.6 943.278 1104.48 941.354 1073.75 948.078 cv
cp
.890196 .858824 .796078 rgb
f
1307.08 1004.71 mo
1267.87 1008.17 1233.66 984.64 1194.36 988.378 cv
1176.89 990.029 1160.37 997.202 1143.22 1000.54 cv
1124.99 1004.11 1103.79 1005.86 1085.41 1002.46 cv
1073.13 1000.19 1061.29 995.117 1050.7 988.637 cv
1045.81 985.648 1041.58 981.84 1038.51 976.991 cv
1031.13 965.412 1051.3 957.83 1058.43 955.092 cv
1088.84 943.391 1125.03 948.134 1155.38 937.265 cv
1190.29 932.278 1225.31 928.625 1260.96 928.84 cv
1284.9 928.99 1309.65 930.298 1332.5 937.975 cv
1344.81 942.112 1354.52 949.284 1355.61 962.955 cv
1357.56 987.64 1327.2 1002.92 1307.08 1004.71 cv
cp
1359.65 952.495 mo
1352.74 932.745 1322.01 928.056 1304.68 925.881 cv
1251.95 919.296 1196.94 922.958 1143.72 932.707 cv
1129.08 934.633 1114.37 937.45 1099.95 939.459 cv
1079.31 942.316 1056.7 945.529 1039.11 957.586 cv
1018.53 971.688 1039.87 990.382 1053.82 998.043 cv
1085.55 1015.49 1123.68 1011.94 1157.67 1003.93 cv
1188.08 996.788 1212.01 990.215 1243.11 1000.05 cv
1266.95 1007.59 1288.92 1012.39 1314.07 1010.1 cv
1339.71 1007.79 1369.13 979.636 1359.65 952.495 cv
cp
.529412 .466667 .345098 rgb
f
1741.11 526.691 mo
1757.75 522.414 1806.73 508.817 1799.74 483.718 cv
1792.73 458.624 1755.79 446.082 1696.47 446.812 cv
1637.14 447.536 1566.6 453.271 1560.68 493.163 cv
1564.81 515.854 1592.42 534.191 1638.66 539.319 cv
1684.89 544.438 1704.53 536.074 1741.11 526.691 cv
cp
.647059 .607843 .529412 rgb
f
1602.39 456.256 mo
1578 464.669 1552.99 483.488 1566.25 503.897 cv
1579.48 524.308 1630.68 528.074 1691.55 511.628 cv
1752.44 495.178 1802.25 470.354 1763.27 455.067 cv
1724.27 439.785 1645.44 441.392 1602.39 456.256 cv
cp
.729412 .705882 .647059 rgb
f
1603.32 456.133 mo
1578.29 465.277 1555.52 481.503 1579.53 493.061 cv
1603.54 504.622 1663 490.831 1679.22 480.405 cv
1695.44 469.997 1720.2 443.622 1672.02 446.025 cv
1623.85 448.424 1621.19 449.602 1603.32 456.133 cv
cp
.890196 .858824 .796078 rgb
f
1586.35 466.353 mo
1606.76 454.598 1635.39 450.638 1659.38 449.362 cv
1694.91 447.464 1778.03 445.311 1795.26 479.313 cv
1803.85 496.279 1786.75 508.821 1762.36 517.679 cv
1769.2 513.435 1775.5 508.755 1781 503.607 cv
1781.53 503.117 1780.7 502.445 1780.14 502.887 cv
1769.63 511.158 1757.68 517.849 1744.91 523.129 cv
1715.25 531.12 1681.73 534.758 1669.39 534.967 cv
1668.23 534.981 1668.27 536.463 1669.42 536.523 cv
1675.85 536.824 1685.76 536.63 1697.3 535.752 cv
1668.37 539.737 1638.26 537.967 1611.24 530.921 cv
1574.48 521.334 1543.68 490.938 1586.35 466.353 cv
cp
1577.79 523.297 mo
1620.1 550.463 1686.28 550.249 1736.49 530.533 cv
1773.71 523.252 1809.35 508.546 1802.01 481.549 cv
1789.99 437.336 1684.86 441.479 1645.99 445.23 cv
1617.17 448.02 1583.46 455.526 1565.01 476.247 cv
1550.1 492.979 1560.75 512.368 1577.79 523.297 cv
cp
.529412 .466667 .345098 rgb
f
932.327 337.307 mo
946.702 357.434 972.576 363.186 995.579 374.684 cv
1018.58 386.185 1030.08 420.69 1027.21 437.938 cv
1024.33 455.19 1016.99 468.453 999.095 460.386 cv
981.204 452.314 972.576 452.314 972.576 452.314 cv
972.576 452.314 975.265 473.73 942.294 488.903 cv
909.326 504.069 889.201 518.445 840.323 504.069 cv
791.445 489.689 756.689 461.995 759.694 422.655 cv
762.693 383.309 771.316 360.308 779.945 325.806 cv
788.567 291.304 831.7 256.804 869.077 262.552 cv
906.453 268.303 903.581 302.807 932.327 337.307 cv
.647059 .607843 .529412 rgb
f
981.204 386.185 mo
995.585 391.936 1012.83 417.811 1001.33 429.312 cv
989.833 440.813 992.707 426.438 984.079 409.183 cv
975.456 391.936 969.704 383.309 963.954 374.684 cv
969.704 380.436 981.204 386.185 981.204 386.185 cv
cp
.729412 .705882 .647059 rgb
f
771.316 371.809 mo
771.316 371.809 779.945 348.805 791.445 331.558 cv
785.696 357.434 782.822 383.309 765.57 400.563 cv
748.318 417.811 759.818 452.314 774.193 466.694 cv
788.567 481.068 811.57 489.689 840.323 489.689 cv
869.077 489.689 846.068 455.19 857.569 466.694 cv
869.077 478.191 871.943 481.068 892.072 481.068 cv
912.204 481.068 923.699 446.564 909.326 414.938 cv
894.953 383.309 917.955 394.807 906.453 354.557 cv
894.953 314.308 886.328 262.552 843.196 262.552 cv
808.69 274.053 777.066 299.927 771.316 371.809 cv
cp
f
963.799 379.334 mo
918.741 351.159 926.573 264.925 865.646 256.77 cv
830.552 252.07 797.029 283.024 781.73 311.314 cv
772.361 328.647 767.96 348.455 764.358 367.642 cv
760.63 387.528 756.298 408.245 756.718 428.495 cv
756.759 430.338 759.653 431.476 760.485 429.516 cv
773.999 397.64 772.137 360.602 784.401 327.772 cv
796.776 294.637 834.797 256.939 873.351 268.246 cv
897.583 275.356 909.405 308.631 919.052 329.057 cv
928.95 349.996 939.47 372.796 961.569 383.143 cv
964.115 384.331 966.239 380.862 963.799 379.334 cv
cp
.529412 .466667 .345098 rgb
f
1028.47 411.287 mo
1022.27 389.803 1010.33 376.766 989.978 367.728 cv
974.048 360.65 957.749 356.55 944.484 344.603 cv
931.392 332.811 923.062 315.862 914.524 300.723 cv
913.331 298.604 910.439 300.465 911.353 302.576 cv
919.396 321.301 926.923 340.412 942.071 354.591 cv
959.335 370.751 985.267 372.938 1003.77 387.406 cv
1015.02 396.198 1019.89 416.659 1021.37 430.01 cv
1022.14 436.815 1021.68 443.953 1018.34 450.034 cv
1013.39 459.076 1000.15 452.262 992.522 451.996 cv
989.22 451.879 987.341 456.322 989.799 458.58 cv
999.337 467.337 1017.89 469.026 1026.32 457.499 cv
1035.93 444.369 1032.65 425.802 1028.47 411.287 cv
cp
f
943.421 375.894 mo
942.865 375.116 941.767 375.771 942.152 376.634 cv
952.528 399.919 971.657 430.711 965.2 456.977 cv
958.387 484.674 921.321 500.206 895.532 498.418 cv
893.153 498.256 892.78 501.369 894.417 502.524 cv
919.867 520.433 958.777 490.063 971.458 468.638 cv
988.938 439.089 959.933 398.99 943.421 375.894 cv
cp
f
1013.81 458.445 mo
1006.63 454.278 997.349 454.903 989.353 453.459 cv
985.676 452.799 982.062 451.839 978.461 450.862 cv
974.19 449.7 971.915 449.874 967.653 449.408 cv
966.028 449.231 965.896 451.384 966.911 452.144 cv
977.978 460.432 1000.18 470.475 1013.81 463.206 cv
1015.66 462.221 1015.55 459.456 1013.81 458.445 cv
cp
f
999.095 460.386 mo
997.331 455.879 991.972 452.967 989.155 448.869 cv
985.531 443.607 984.079 437.26 983.683 430.981 cv
983.596 429.573 981.509 429.55 981.477 430.981 cv
981.314 437.47 982.378 443.498 985.032 449.437 cv
987.202 454.312 991.845 461.742 997.498 462.48 cv
998.515 462.613 999.456 461.315 999.095 460.386 cv
cp
f
942.294 488.903 mo
922.183 494.188 905.855 503.071 884.449 504.932 cv
860.264 507.024 835.223 502.382 813.391 491.916 cv
788.567 480.009 763.139 452.839 762.484 424.369 cv
761.951 400.834 785.781 384.411 784.528 361.34 cv
784.482 360.497 783.242 360.003 782.816 360.878 cv
772.747 381.598 750.318 406.581 753.937 431.279 cv
758.109 459.7 780.709 482.883 804.382 497.44 cv
826.266 510.888 853.727 514.894 878.946 514.636 cv
899.858 514.423 931.185 509.793 944.368 491.6 cv
945.362 490.225 943.737 488.526 942.294 488.903 cv
cp
f
889.477 457.266 mo
886.185 448.128 880.71 442.423 872.995 436.647 cv
859.495 426.54 854.26 427.557 858.397 407.531 cv
859.229 403.48 855.944 400.016 851.825 400.957 cv
843.58 402.845 835.664 401.079 827.513 400.002 cv
827.621 400.016 826.864 386.774 826.667 385.833 cv
824.094 373.9 819.855 366.437 808.663 361.024 cv
808.319 360.855 807.876 361.326 808.221 361.602 cv
821.715 372.307 822.358 387.06 819.786 402.627 cv
819.481 404.43 820.234 406.932 822.405 407.242 cv
830.242 408.357 837.549 410.368 845.207 411.152 cv
835.571 438.523 863.746 444.404 882.721 461.197 cv
885.513 463.664 890.948 461.35 889.477 457.266 cv
cp
f
875.895 300.231 mo
857.49 263.511 812.719 288.227 801.597 318.159 cv
799.178 318.895 797.196 321.146 797.99 324.301 cv
798.289 325.503 798.735 326.685 799.259 327.851 cv
799.224 328.127 799.172 328.404 799.149 328.682 cv
799.097 329.327 799.575 329.56 800.063 329.512 cv
805.364 339.475 817.563 347.974 825.244 354.586 cv
830.161 358.819 833.803 360.705 840.415 361.945 cv
848.671 363.493 856.259 361.115 859.224 373.528 cv
860.597 379.271 860.724 384.78 862.815 390.388 cv
863.98 393.507 867.107 394.937 870.155 393.375 cv
899.759 378.228 887.404 323.194 875.895 300.231 cv
cp
.890196 .858824 .796078 rgb
f
838.474 451.471 mo
836.159 446.74 833.957 443.976 829.57 441.087 cv
823.589 437.144 813.725 441.114 810.307 432.339 cv
806.387 422.287 813.098 410.683 810.65 400.335 cv
807.801 388.247 803.498 370.243 794.319 377.559 cv
776.29 391.933 765.41 431.998 774.503 449.846 cv
785.833 472.082 813.949 481.55 836.112 469.292 cv
842.093 465.979 840.919 456.465 838.474 451.471 cv
cp
f
353.943 463.596 mo
369.588 459.574 415.621 446.793 409.05 423.205 cv
402.461 399.619 367.744 387.83 311.993 388.515 cv
256.229 389.196 189.924 394.591 184.358 432.079 cv
188.245 453.407 214.196 470.645 257.651 475.461 cv
301.107 480.275 319.57 472.413 353.943 463.596 cv
cp
.647059 .607843 .529412 rgb
f
223.562 397.393 mo
200.641 405.301 177.139 422.988 189.593 442.172 cv
202.025 461.353 250.154 464.896 307.368 449.44 cv
364.59 433.975 411.416 410.649 374.765 396.282 cv
338.116 381.91 264.029 383.422 223.562 397.393 cv
cp
.729412 .705882 .647059 rgb
f
224.435 397.279 mo
200.912 405.871 179.507 421.13 202.08 431.986 cv
224.646 442.844 280.529 429.888 295.774 420.096 cv
311.019 410.308 334.292 385.524 289.016 387.779 cv
243.728 390.033 241.239 391.14 224.435 397.279 cv
cp
.890196 .858824 .796078 rgb
f
208.488 406.883 mo
227.674 395.837 254.583 392.114 277.126 390.917 cv
310.521 389.135 388.648 387.108 404.836 419.068 cv
412.91 435.016 396.84 446.808 373.917 455.129 cv
380.35 451.132 386.266 446.733 391.438 441.901 cv
391.936 441.44 391.156 440.801 390.627 441.227 cv
380.746 448.996 369.517 455.285 357.518 460.238 cv
329.635 467.755 298.133 471.166 286.54 471.369 cv
285.441 471.391 285.487 472.776 286.563 472.833 cv
292.614 473.123 301.925 472.937 312.764 472.115 cv
285.581 475.858 257.276 474.194 231.879 467.566 cv
197.331 458.561 168.38 429.997 208.488 406.883 cv
cp
200.438 460.399 mo
240.203 485.932 302.408 485.739 349.601 467.205 cv
384.583 460.356 418.082 446.54 411.182 421.164 cv
399.883 379.614 301.068 383.5 264.537 387.027 cv
237.455 389.653 205.78 396.706 188.432 416.179 cv
174.417 431.91 184.428 450.133 200.438 460.399 cv
cp
.529412 .466667 .345098 rgb
f
1778.86 1411.05 mo
1761.93 1415.28 1745.85 1429.67 1743.32 1454.22 cv
1740.78 1478.76 1758.54 1504.15 1795.79 1514.3 cv
1833.02 1524.46 1865.2 1518.54 1885.5 1513.46 cv
1905.82 1508.39 1937.12 1491.45 1943.9 1468.6 cv
1950.67 1445.75 1944.75 1423.75 1926.13 1405.97 cv
1907.5 1388.21 1882.96 1378.05 1858.43 1379.74 cv
1833.88 1381.43 1806.79 1389.04 1778.86 1411.05 cv
cp
.647059 .607843 .529412 rgb
f
1764.47 1419.94 mo
1756.97 1422.93 1741.52 1441.53 1753.47 1463.95 cv
1760.24 1476.64 1786.64 1486.58 1810.18 1489.34 cv
1838.96 1492.72 1864.34 1491.88 1896.51 1472.84 cv
1926.96 1454.8 1938.83 1420.79 1911.74 1397.93 cv
1884.66 1375.08 1839.79 1379.74 1811.02 1392.44 cv
1782.24 1405.14 1781.4 1413.17 1764.47 1419.94 cv
cp
.729412 .705882 .647059 rgb
f
1773.82 1444.14 mo
1775.99 1447.32 1778.85 1450.13 1781.9 1452.41 cv
1782.37 1452.76 1782.86 1453.09 1783.35 1453.41 cv
1779.07 1451.49 1775.6 1448.53 1773.82 1444.14 cv
cp
1876.81 1396.57 mo
1866.86 1383.84 1847.46 1382.43 1832.8 1384.07 cv
1816.7 1385.88 1798.32 1394.55 1788.91 1402.53 cv
1786.64 1404.45 1784.19 1406.62 1781.9 1409.03 cv
1773.82 1413.98 1768.4 1424.41 1766.2 1432.83 cv
1762.18 1448.25 1774.15 1462.64 1787.52 1468.18 cv
1803.71 1474.89 1825.68 1468.29 1841.47 1463.24 cv
1855.63 1458.72 1871.54 1450.1 1880.03 1437.49 cv
1889.31 1423.71 1886.7 1409.22 1876.81 1396.57 cv
cp
.890196 .858824 .796078 rgb
f
1848.18 1516 mo
1814.09 1518.26 1768.57 1510.74 1751.39 1477.08 cv
1739.03 1452.86 1749.52 1429.28 1770.17 1418.09 cv
1763.28 1427.92 1761.36 1439.52 1770.24 1452.11 cv
1770.91 1453.04 1772.35 1452.24 1771.79 1451.2 cv
1763.96 1436.5 1768.22 1424.35 1778.21 1414.54 cv
1779.7 1411.9 1790.77 1404.94 1792.28 1404.04 cv
1811.11 1392.9 1836.2 1386.21 1850.06 1383.44 cv
1893.18 1374.83 1957.25 1416.87 1941.24 1465.55 cv
1929.43 1501.47 1881.2 1513.79 1848.18 1516 cv
cp
1896.26 1384.15 mo
1865.88 1370.29 1835.38 1378.91 1806.11 1391.67 cv
1797.76 1395.31 1788.17 1400.65 1780.29 1407.29 cv
1760.45 1412.25 1744.36 1425.63 1740.43 1446.72 cv
1737.2 1463.99 1744.34 1482.06 1755.97 1494.62 cv
1779.45 1519.97 1820.45 1524.45 1852.85 1521.78 cv
1885.1 1519.12 1922.02 1507.37 1940.94 1479.27 cv
1967.02 1440.54 1931.12 1400.05 1896.26 1384.15 cv
cp
.529412 .466667 .345098 rgb
f
1790.64 1397.82 mo
1790.27 1398.22 1789.81 1398.57 1789.37 1398.94 cv
1789.87 1398.63 1790.38 1398.38 1790.92 1398.29 cv
1791.37 1398.21 1790.97 1397.46 1790.64 1397.82 cv
cp
f
1781.12 1406.01 mo
1780.85 1406.19 1781.12 1406.65 1781.4 1406.46 cv
1782.83 1405.44 1784.06 1404.27 1785.27 1402.99 cv
1785.91 1402.31 1786.67 1401.4 1787.48 1400.55 cv
1787.06 1400.89 1786.63 1401.2 1786.26 1401.57 cv
1784.62 1403.16 1783.07 1404.75 1781.12 1406.01 cv
cp
f
1787.48 1400.55 mo
1788.12 1400.03 1788.73 1399.47 1789.37 1398.94 cv
1788.7 1399.36 1788.06 1399.94 1787.48 1400.55 cv
cp
f
1704.04 1469.8 mo
1670.45 1478.19 1604.06 1497.96 1606 1513.62 cv
1607.93 1529.29 1651.41 1529.29 1681.16 1529.29 cv
1710.9 1529.29 1742.94 1527 1772.7 1529.29 cv
1802.45 1531.57 1824.01 1520.8 1829.9 1510.98 cv
1836.76 1499.54 1836.77 1494.96 1807.03 1483.52 cv
1777.28 1472.08 1722.36 1465.22 1704.04 1469.8 cv
cp
.647059 .607843 .529412 rgb
f
1629.67 1490.39 mo
1613.67 1497.25 1599.91 1510.98 1629.66 1510.98 cv
1659.43 1510.98 1716.63 1510.99 1757.81 1504.12 cv
1799 1497.25 1810.64 1485.5 1788.81 1478.79 cv
1766.97 1472.08 1723.49 1462.94 1693.76 1469.8 cv
1664 1476.66 1643.41 1483.52 1629.67 1490.39 cv
.729412 .705882 .647059 rgb
f
1657.03 1483.34 mo
1627 1494.25 1651.57 1502.44 1687.05 1499.71 cv
1722.53 1496.98 1774.38 1472.42 1738.89 1469.69 cv
1703.43 1466.96 1684.31 1469.69 1657.03 1483.34 cv
.890196 .858824 .796078 rgb
f
1806.82 1521.09 mo
1785.12 1527.21 1760.75 1523.28 1738.55 1522.84 cv
1710.56 1522.26 1682.78 1527.05 1654.67 1525.75 cv
1650.37 1525.54 1606.36 1522.86 1608.28 1511.33 cv
1609.65 1503.26 1625.6 1496.95 1631.91 1493.83 cv
1649.68 1485.05 1668.37 1480.28 1687.75 1476.83 cv
1688.35 1476.72 1688.98 1476.61 1689.59 1476.51 cv
1708.42 1473.68 1727.21 1470.67 1746.18 1473.26 cv
1756.13 1474.63 1766.05 1476.45 1775.89 1478.62 cv
1777.88 1479.46 1779.85 1480.37 1781.77 1481.39 cv
1781.96 1481.5 1782.14 1481.21 1781.94 1481.08 cv
1781.03 1480.49 1780.09 1479.93 1779.15 1479.38 cv
1785.29 1480.79 1791.38 1482.31 1797.41 1484.04 cv
1806.29 1486.59 1814.99 1489.88 1822.86 1494.76 cv
1840.44 1505.64 1817.62 1518.05 1806.82 1521.09 cv
cp
1831.66 1492.32 mo
1816.65 1476.3 1785.04 1472.78 1764.81 1469.28 cv
1759.11 1468.3 1753.48 1467.69 1747.88 1467.35 cv
1703.9 1457.94 1650.27 1471.96 1615.01 1493.69 cv
1602.9 1501.15 1593.16 1514.21 1608.32 1523.98 cv
1622.65 1533.22 1645 1533.35 1661.42 1534.06 cv
1684.92 1535.08 1708.64 1532.36 1732.04 1530.7 cv
1760.39 1528.69 1788.92 1535.83 1816.51 1525.91 cv
1830.78 1520.78 1844.28 1505.79 1831.66 1492.32 cv
cp
.529412 .466667 .345098 rgb
f
1240.38 974.039 mo
1215.32 980.302 1165.8 995.046 1167.25 1006.73 cv
1168.69 1018.42 1201.12 1018.42 1223.31 1018.42 cv
1245.49 1018.42 1269.4 1016.71 1291.59 1018.42 cv
1313.79 1020.12 1329.87 1012.08 1334.26 1004.76 cv
1339.38 996.227 1339.39 992.811 1317.2 984.277 cv
1295.01 975.741 1254.04 970.623 1240.38 974.039 cv
cp
.647059 .607843 .529412 rgb
f
1184.9 989.398 mo
1172.97 994.518 1162.7 1004.76 1184.9 1004.76 cv
1207.1 1004.76 1249.77 1004.77 1280.49 999.645 cv
1311.22 994.518 1319.89 985.753 1303.61 980.744 cv
1287.32 975.741 1254.89 968.922 1232.71 974.039 cv
1210.51 979.155 1195.15 984.277 1184.9 989.398 cv
.729412 .705882 .647059 rgb
f
1205.31 984.142 mo
1182.91 992.277 1201.24 998.39 1227.7 996.357 cv
1254.17 994.315 1292.84 975.994 1266.37 973.962 cv
1239.92 971.925 1225.66 973.962 1205.31 984.142 cv
.890196 .858824 .796078 rgb
f
1317.05 1012.3 mo
1300.86 1016.87 1282.68 1013.94 1266.12 1013.61 cv
1245.24 1013.17 1224.52 1016.75 1203.55 1015.78 cv
1200.34 1015.62 1167.51 1013.62 1168.95 1005.02 cv
1169.97 999.002 1181.87 994.296 1186.58 991.965 cv
1199.83 985.417 1213.77 981.86 1228.23 979.289 cv
1228.67 979.207 1229.15 979.125 1229.6 979.046 cv
1243.65 976.937 1257.66 974.692 1271.81 976.621 cv
1279.24 977.642 1286.64 978.999 1293.97 980.624 cv
1295.46 981.25 1296.93 981.925 1298.36 982.687 cv
1298.5 982.771 1298.63 982.551 1298.49 982.453 cv
1297.81 982.018 1297.11 981.601 1296.41 981.188 cv
1300.98 982.242 1305.52 983.373 1310.03 984.665 cv
1316.65 986.568 1323.14 989.019 1329.01 992.662 cv
1342.13 1000.77 1325.1 1010.03 1317.05 1012.3 cv
cp
1335.58 990.84 mo
1324.38 978.892 1300.8 976.266 1285.71 973.653 cv
1281.46 972.927 1277.25 972.466 1273.08 972.211 cv
1240.27 965.198 1200.27 975.654 1173.97 991.864 cv
1164.93 997.429 1157.67 1007.17 1168.98 1014.46 cv
1179.67 1021.35 1196.34 1021.45 1208.59 1021.98 cv
1226.12 1022.73 1243.81 1020.71 1261.26 1019.47 cv
1282.42 1017.97 1303.69 1023.29 1324.27 1015.9 cv
1334.92 1012.07 1344.99 1000.89 1335.58 990.84 cv
cp
.529412 .466667 .345098 rgb
f
1305.87 1003.69 mo
1313.26 1017.34 1331.97 1023.28 1360.88 1031.67 cv
1389.79 1040.06 1423.34 1040.99 1452.25 1035.4 cv
1481.16 1029.8 1509.13 1020.47 1518.46 1005.56 cv
1527.78 990.649 1537.1 972.929 1527.78 951.485 cv
1518.46 930.036 1474.64 915.123 1432.68 915.123 cv
1390.72 915.123 1347.83 924.439 1331.98 938.426 cv
1316.13 952.411 1293.75 981.317 1305.87 1003.69 cv
cp
.647059 .607843 .529412 rgb
f
1353.43 926.308 mo
1334.79 933.764 1315.19 950.551 1306.81 972.929 cv
1298.42 995.305 1314.25 1010.1 1383.27 1009.29 cv
1462.51 1008.36 1548.3 971.051 1515.67 938.426 cv
1483.03 905.792 1399.11 913.247 1353.43 926.308 cv
.729412 .705882 .647059 rgb
f
1318 972.001 mo
1324.52 981.317 1393.53 980.382 1431.76 964.537 cv
1469.99 948.684 1478.37 921.654 1446.68 916.991 cv
1414.97 912.33 1365.56 920.711 1345.04 931.905 cv
1324.52 943.097 1311.48 962.678 1318 972.001 cv
cp
.890196 .858824 .796078 rgb
f
1313.29 964.604 mo
1334.48 921.095 1394.67 918.526 1436.88 918.734 cv
1460.92 918.835 1485.19 922.872 1506.27 934.83 cv
1537.39 952.486 1536.39 993.711 1503.79 1008.91 cv
1500.9 1010.25 1503.41 1014.53 1506.29 1013.19 cv
1508.59 1012.11 1510.74 1010.88 1512.78 1009.54 cv
1494.7 1023.2 1465.58 1029.85 1448.58 1033.16 cv
1417.82 1039.15 1386.92 1037.58 1356.94 1028.59 cv
1343.93 1024.69 1331.34 1018.36 1318.96 1012.73 cv
1297.62 1003.04 1305.43 980.751 1313.29 964.604 cv
cp
1316.46 1017.01 mo
1350.97 1035.29 1388.16 1043.43 1427.06 1040.47 cv
1454.08 1038.44 1521.6 1026.1 1529.19 991.608 cv
1534.22 981.877 1535.77 970.384 1533.03 958.558 cv
1527.1 933.087 1493.8 921.721 1471.79 917.101 cv
1442.69 910.995 1411.52 913.464 1382.35 917.734 cv
1351.58 922.229 1324.51 934.221 1309.01 962.103 cv
1297.82 982.219 1293.81 1005.03 1316.46 1017.01 cv
cp
.529412 .466667 .345098 rgb
f
1412.19 1049.5 mo
1424.69 1046.29 1461.45 1036.09 1456.2 1017.25 cv
1450.94 998.407 1423.21 988.99 1378.69 989.541 cv
1334.14 990.091 1281.19 994.396 1276.75 1024.34 cv
1279.85 1041.37 1300.58 1055.14 1335.28 1058.99 cv
1369.99 1062.83 1384.74 1056.56 1412.19 1049.5 cv
cp
.647059 .607843 .529412 rgb
f
1308.06 996.629 mo
1289.75 1002.95 1270.98 1017.08 1280.92 1032.4 cv
1290.86 1047.72 1329.29 1050.55 1374.99 1038.2 cv
1420.69 1025.85 1458.09 1007.22 1428.82 995.745 cv
1399.55 984.27 1340.38 985.471 1308.06 996.629 cv
cp
.729412 .705882 .647059 rgb
f
1308.75 996.545 mo
1289.97 1003.41 1272.87 1015.59 1290.9 1024.27 cv
1308.92 1032.93 1353.55 1022.59 1365.73 1014.77 cv
1377.91 1006.95 1396.5 987.156 1360.33 988.956 cv
1324.17 990.758 1322.17 991.642 1308.75 996.545 cv
cp
.890196 .858824 .796078 rgb
f
1296.02 1004.22 mo
1311.34 995.396 1332.83 992.418 1350.84 991.467 cv
1377.51 990.042 1439.91 988.424 1452.84 1013.94 cv
1459.29 1026.68 1446.45 1036.09 1428.14 1042.75 cv
1433.28 1039.56 1438.01 1036.04 1442.14 1032.18 cv
1442.53 1031.81 1441.91 1031.31 1441.49 1031.64 cv
1433.6 1037.85 1424.63 1042.88 1415.05 1046.83 cv
1392.78 1052.83 1367.62 1055.56 1358.36 1055.73 cv
1357.48 1055.73 1357.52 1056.84 1358.37 1056.89 cv
1363.21 1057.12 1370.64 1056.97 1379.3 1056.31 cv
1357.59 1059.3 1334.99 1057.98 1314.7 1052.68 cv
1287.1 1045.49 1263.98 1022.68 1296.02 1004.22 cv
cp
1289.59 1046.95 mo
1321.35 1067.35 1371.03 1067.19 1408.72 1052.39 cv
1436.66 1046.93 1463.42 1035.89 1457.91 1015.62 cv
1448.88 982.444 1369.96 985.537 1340.78 988.355 cv
1319.15 990.45 1293.85 996.088 1280 1011.64 cv
1268.8 1024.21 1276.8 1038.75 1289.59 1046.95 cv
cp
.529412 .466667 .345098 rgb
f
1314.35 1255.53 mo
1310.19 1276.9 1337.98 1306.76 1364.85 1306.76 cv
1391.73 1306.76 1427.58 1290.89 1451.21 1288.46 cv
1474.82 1286.02 1494.38 1295.79 1521.26 1301.88 cv
1548.14 1307.98 1568.5 1303.1 1578.28 1286.02 cv
1588.05 1268.94 1593.75 1244.55 1583.17 1226.26 cv
1572.57 1207.96 1531.03 1196.99 1507.41 1199.42 cv
1483.78 1201.86 1442.23 1204.3 1415.36 1211.62 cv
1388.48 1218.94 1320.05 1226.26 1314.35 1255.53 cv
cp
.647059 .607843 .529412 rgb
f
1320.06 1244.55 mo
1313.47 1251.72 1305.39 1275.03 1334.71 1278.69 cv
1364.04 1282.36 1404.77 1275.03 1438.17 1267.72 cv
1471.57 1260.4 1495.19 1268.94 1513.93 1275.03 cv
1532.66 1281.14 1602.94 1254.32 1569.32 1217.71 cv
1551.41 1198.19 1504.16 1199.41 1479.73 1199.41 cv
1455.28 1199.41 1411.29 1216.49 1387.66 1220.15 cv
1364.04 1223.81 1337.98 1225.03 1320.06 1244.55 cv
cp
.729412 .705882 .647059 rgb
f
1346.94 1229.91 mo
1333.05 1234.47 1307.02 1245.78 1321.69 1254.31 cv
1336.34 1262.84 1376.27 1259.19 1411.29 1246.99 cv
1446.31 1234.79 1483.79 1229.91 1496.83 1229.91 cv
1509.86 1229.91 1545.71 1201.86 1493.56 1201.86 cv
1441.43 1201.86 1428.4 1206.74 1409.67 1215.28 cv
1390.93 1223.82 1373 1221.37 1346.94 1229.91 cv
cp
.890196 .858824 .796078 rgb
f
1544.88 1301.85 mo
1511.62 1306.25 1482.59 1276.35 1449.25 1281.1 cv
1434.43 1283.21 1420.41 1292.31 1405.87 1296.57 cv
1390.41 1301.1 1372.42 1303.31 1356.83 1298.99 cv
1346.41 1296.1 1336.37 1289.66 1327.38 1281.44 cv
1323.23 1277.63 1319.65 1272.8 1317.04 1266.65 cv
1310.79 1251.94 1327.89 1242.3 1333.94 1238.82 cv
1359.75 1223.96 1390.44 1229.98 1416.18 1216.17 cv
1445.8 1209.83 1475.52 1205.21 1505.76 1205.48 cv
1526.07 1205.66 1547.07 1207.32 1566.45 1217.07 cv
1576.89 1222.33 1585.13 1231.44 1586.05 1248.81 cv
1587.71 1280.16 1561.94 1299.59 1544.88 1301.85 cv
cp
1589.47 1235.53 mo
1583.62 1210.43 1557.55 1204.47 1542.84 1201.72 cv
1498.11 1193.35 1451.45 1198 1406.3 1210.38 cv
1393.88 1212.83 1381.4 1216.42 1369.16 1218.96 cv
1351.65 1222.6 1332.47 1226.68 1317.56 1241.98 cv
1300.1 1259.9 1318.2 1283.65 1330.04 1293.39 cv
1356.95 1315.53 1389.3 1311.03 1418.14 1300.88 cv
1443.92 1291.78 1464.22 1283.44 1490.61 1295.93 cv
1510.84 1305.51 1529.47 1311.6 1550.81 1308.71 cv
1572.56 1305.77 1597.52 1270 1589.47 1235.53 cv
cp
.529412 .466667 .345098 rgb
f
1299.07 1269.09 mo
1305.55 1281.16 1321.96 1286.41 1347.32 1293.83 cv
1372.67 1301.25 1402.11 1302.08 1427.47 1297.13 cv
1452.82 1292.18 1477.35 1283.93 1485.53 1270.73 cv
1493.71 1257.54 1501.89 1241.86 1493.71 1222.89 cv
1485.53 1203.92 1447.1 1190.72 1410.3 1190.72 cv
1373.49 1190.72 1335.88 1198.96 1321.97 1211.34 cv
1308.06 1223.71 1288.43 1249.29 1299.07 1269.09 cv
cp
.647059 .607843 .529412 rgb
f
1340.78 1200.61 mo
1324.43 1207.21 1307.24 1222.06 1299.89 1241.86 cv
1292.53 1261.66 1306.42 1274.75 1366.96 1274.03 cv
1436.47 1273.2 1511.71 1240.2 1483.09 1211.33 cv
1454.46 1182.46 1380.85 1189.06 1340.78 1200.61 cv
.729412 .705882 .647059 rgb
f
1309.71 1241.04 mo
1315.43 1249.29 1375.96 1248.46 1409.49 1234.44 cv
1443.02 1220.41 1450.38 1196.49 1422.57 1192.37 cv
1394.76 1188.24 1351.42 1195.66 1333.42 1205.57 cv
1315.43 1215.47 1303.98 1232.79 1309.71 1241.04 cv
cp
.890196 .858824 .796078 rgb
f
1305.57 1234.5 mo
1324.16 1196.01 1376.96 1193.73 1413.98 1193.91 cv
1435.06 1194.01 1456.36 1197.57 1474.84 1208.15 cv
1502.14 1223.77 1501.27 1260.25 1472.67 1273.69 cv
1470.14 1274.88 1472.34 1278.66 1474.86 1277.48 cv
1476.88 1276.53 1478.77 1275.44 1480.56 1274.26 cv
1464.7 1286.34 1439.15 1292.22 1424.24 1295.15 cv
1397.26 1300.45 1370.16 1299.06 1343.86 1291.11 cv
1332.45 1287.66 1321.41 1282.06 1310.55 1277.08 cv
1291.82 1268.5 1298.68 1248.78 1305.57 1234.5 cv
cp
1308.35 1280.87 mo
1338.63 1297.04 1371.24 1304.23 1405.37 1301.63 cv
1429.07 1299.81 1488.29 1288.9 1494.95 1258.39 cv
1499.36 1249.78 1500.72 1239.62 1498.32 1229.15 cv
1493.12 1206.61 1463.91 1196.56 1444.6 1192.47 cv
1419.08 1187.07 1391.74 1189.25 1366.15 1193.03 cv
1339.16 1197.01 1315.42 1207.62 1301.82 1232.29 cv
1292 1250.08 1288.49 1270.26 1308.35 1280.87 cv
cp
.529412 .466667 .345098 rgb
f
1340.84 1274.77 mo
1336.68 1292.98 1364.47 1318.42 1391.34 1318.42 cv
1418.22 1318.42 1454.06 1304.9 1477.7 1302.83 cv
1501.31 1300.75 1520.87 1309.07 1547.75 1314.26 cv
1574.63 1319.45 1594.99 1315.3 1604.77 1300.75 cv
1614.54 1286.2 1620.24 1265.41 1609.66 1249.83 cv
1599.06 1234.23 1557.52 1224.89 1533.9 1226.96 cv
1510.27 1229.04 1468.72 1231.12 1441.85 1237.35 cv
1414.97 1243.59 1346.54 1249.83 1340.84 1274.77 cv
cp
.647059 .607843 .529412 rgb
f
1346.55 1265.41 mo
1339.96 1271.52 1331.88 1291.39 1361.2 1294.5 cv
1390.53 1297.63 1431.26 1291.39 1464.66 1285.16 cv
1498.06 1278.92 1521.68 1286.2 1540.42 1291.39 cv
1559.15 1296.58 1629.43 1273.74 1595.81 1242.54 cv
1577.9 1225.91 1530.64 1226.95 1506.22 1226.95 cv
1481.77 1226.95 1437.79 1241.51 1414.15 1244.62 cv
1390.53 1247.74 1364.47 1248.78 1346.55 1265.41 cv
cp
.729412 .705882 .647059 rgb
f
1373.43 1252.94 mo
1359.54 1256.82 1333.51 1266.46 1348.18 1273.73 cv
1362.83 1281 1402.76 1277.89 1437.79 1267.49 cv
1472.8 1257.1 1510.28 1252.94 1523.32 1252.94 cv
1536.35 1252.94 1572.2 1229.04 1520.05 1229.04 cv
1467.92 1229.04 1454.89 1233.2 1436.16 1240.47 cv
1417.42 1247.75 1399.49 1245.66 1373.43 1252.94 cv
cp
.890196 .858824 .796078 rgb
f
1571.37 1314.24 mo
1538.11 1317.98 1509.08 1292.51 1475.74 1296.55 cv
1460.92 1298.35 1446.9 1306.11 1432.35 1309.73 cv
1416.89 1313.59 1398.91 1315.48 1383.32 1311.8 cv
1372.9 1309.33 1362.86 1303.85 1353.87 1296.84 cv
1349.72 1293.6 1346.14 1289.48 1343.53 1284.24 cv
1337.28 1271.71 1354.38 1263.5 1360.43 1260.53 cv
1386.23 1247.87 1416.93 1253 1442.67 1241.23 cv
1472.29 1235.83 1502.01 1231.89 1532.25 1232.12 cv
1552.56 1232.28 1573.55 1233.69 1592.94 1242 cv
1603.38 1246.48 1611.62 1254.24 1612.54 1269.04 cv
1614.2 1295.75 1588.43 1312.31 1571.37 1314.24 cv
cp
1615.96 1257.73 mo
1610.11 1236.34 1584.04 1231.26 1569.33 1228.92 cv
1524.6 1221.79 1477.94 1225.75 1432.79 1236.3 cv
1420.37 1238.38 1407.89 1241.45 1395.65 1243.61 cv
1378.14 1246.71 1358.96 1250.19 1344.05 1263.22 cv
1326.59 1278.49 1344.69 1298.72 1356.52 1307.02 cv
1383.44 1325.89 1415.79 1322.06 1444.63 1313.4 cv
1470.41 1305.66 1490.71 1298.54 1517.1 1309.19 cv
1537.33 1317.35 1555.96 1322.54 1577.3 1320.08 cv
1599.05 1317.57 1624.01 1287.1 1615.96 1257.73 cv
cp
.529412 .466667 .345098 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.1.0
%%For: (\713\745\755\752\740) ()
%%Title: (34_111.eps)
%%CreationDate: 1/14/2014 4:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.CNF(=EMbag'qtYH+so-4oiU-Y\%U@U5ESB+Ae-1B8D.%!gVEke+:/DZ;ue==oWOm7hTUDnW<-0*RpZc_A(`VPT7("3]Y=4(
%07NHMorG.V(KXsnGl>*YmhYdr?5ERETE"6o^\ESBcd$IdI`b14B<PX3?ep-VF+&4\Hi*1+o(qMBf=P\QSR1]4J,6SOEk;,ikEhOe
%J),NtH$]0#]B4a,gD@W<\30fYp!&ED]A7e=k[=3Q(]WNt?"GtQml:=:e_0&bkNAJkp#jXcIUU"KlBhL(rpfg[h4;6O4Z2b!TDe2q
%j-T:[??Yf9b@g!F?ejMoSDIOV?iB:D3VA#c=+BGsk:]X0#J6D[a8Y\%rODagr2\:JQZrEe]>IeFkM7e8guA@jrUD1(DKXKE%nc]E
%'*%KOV6N7hrT@7=s#llqs"FAs]<\L:S52BJLhC6_@9n&ag!;Z28G=1@On\L2N8^DS?bF$6]fXgs-C_Z3[[V?lIin]#45"49-h\jY
%PVU:^om*jm?-9LGXQs=kXa)ppCKtg\"m=cLSH&96]72e)I=?VYPPr>Bh<,USDNfCZEqnV"=-r)/s*/[+B;:f9D#/PWrqcHdV9`f0
%i4#&Nbjb->l+c8;5FpYYI=>h0p%n4oe+)b[fK\I.Y?lTsqVCtld6mp.o).cKfDhXJrDcI8[:()(\")NAm+ZQ]]@$?$QAQ\DT$H`K
%gkM;7\*oleqUF*W+)`dG^:=%4p4E7$hq_O"5?b#/dJn7IPB$5EF8N^s>Pn-+]CW(?4Au1<g$]IGZJ#-Rk</Jt=3mLE^L.u4*l%Ks
%QMZs7KZi\bj4D15oUF[re][_#*VeV)f65!L'fZ-fci2k;NA!K/Ht>PAmcOArbE&j@])MNOhYZ7,op=jR5M_j$fpTH:IedpFB=8i;
%MZ\aL5(@]pGCFRYna`%8\<VL$c2#Y7[EJ5=qu:$nruZ<qm8FZFLE$$9hctSVIX1n_kf3KEVcV2gs*T.anhE'^\T;n>ZdTH^H[g)+
%Xo39TK6=^$iRjoCCJ3fd%@f'!3H%%>/LMP:oVb9NhL/nnp\a=PmJcPQcSo1e%mK-AT7?UpbNm?0gDB`+*Zs)8rUsIop>\sJoUF/Z
%r`!#n(RMbi\*#^C,k#P)GQ2KOqn^>!5&[NXrHW]^5P\UJ55NYCQ`T2e524D4WeZ(GF8b\$DbcpoH@4c]`7[rZ!hZ$5Fics*%JJF5
%354IQ?K2RZVGnZ5I%C.6&,tD\eTpBN7m?q9MC3b-e'$4TIJ;qAn?\bPiP3&dI<#8=BD]eHp#t<2mH*I&m=/O1%i7@]/"!!@IItsK
%Z_-OAcX,F5^UedY_rL)2HhbS)g#\tV50eVWLOXPsA+nkk+!,(pY_V[IiSF=SeK:u"-f2MIrFYf%lg)`Hf(B^9Vh7EXF6D0QA0/$@
%q4S&GO$DHi5<HQk]_M?co]8"JB+NhuJ`$24qOVIEA[7h?e/s"rlTabYG5mGl`cE!\Y:d!1'/Hg',Bs+G-13fp_FkA[k&6=+4P[Do
%@337i`W)uG^!demcWi:)2giEQmk4.chuA2/Y5`gEJ*h]%?h5r0AcM'LGOPP4p%!<McK?#+YFb2Y>'>DV^Q+kh5G)uW1]+A>hA4o+
%PI8_Z'`G;tS8k6g[+;bRcQ@,Bjs^9*49"p1mB;#G@t2H2qu,qircQmWs1/)A\(*:+gT.iLs7\bXg$X98;uY-Vfh`Z:e@S66e'gt]
%g!9OP55k'Bn,6kZ66l!_IqRj!$u(*8B)hVaiGJ;7r/XS#-[*tj-Kb:Tq^MQe23A[SdG4qCom^eum:L8XrOsYt95h(jO&#.[7Ju/'
%pU:7+)ub++>P7XN]/]<Chgb3Plf[HgoCLl.hYZ&cb:>[5=10Pr0"u^UGA^a9hs'24DJi5LQepk]SoSr0ff'_6cYq+4iiKe>s'm"J
%rQkDnh06pMrVYOPF`mT#\#20oIrChJF*iN75-LOSmHN`5rQ4tVq`Q<5g!5WLib`R?s6"n-Tt7hL3e,@%?!a0%jo"qLL1raBmsYlk
%puR22_<EZrBkul&o=I6NCEE#>a/;/`UA3]"P28ANNuNt7dk<B#+13mG1XlAr080A8;#'^mNu&1oqpS[:I-91`gUlbf56:<KUFsr$
%hk":qTgNZ=5(9@-YLkeV[J[DgkC9\;I/DH$Ifes5^ORTE]t??%ha`VU)u'>EkGOYbq;cJ>0>@GJ;>Y9]l;'`i5O.;.HL^q$Rn%m2
%SGABD[!.#Oh]B6us3#f9GE;TlmsZJ<@rg_Llg)$.c^37-AlF(trmdS&M')D9pFlBbQk,@<T3o@E3BJ$\jJQENQs0AY]Z5s%]@5qT
%=?XLDbTHa<s6'!0N]_($*M)Sas3'lWT3o6WYra'[rq5JE++0U,DBF<>^0hc8L%CeiV`3eJkBFN_-Z@[]ap0$7h9496G1,csMcZ7&
%B>$&!S8rpspZ;)4c1Ba/+H^N'^U_2(\d=UfVpD!Mq5>+-[sr[EUY`_t^3fIae'!Yd)\l>/?K1e(Mj$,&j,gssc!eCOpiuPLX1R]R
%B;`4_k;O4W^6].A).igogCQM0^&%Hpp@H19CMTbpmg&=0m`WLI[TrG!rc@]$\aR3"c2#&(dU[7e^Up`G5.s%eS";,9Y^KU-95j7q
%qt&Q\p>>9ud_e\&qZHh<Fa`s"nloH_`o/WBLYMk!e_Nk[iuJYTkJ/'$2BSK5GB8(Qqsr5pgY$fE&f8l2/cPXB#Q*hVoDL:ik@bs0
%S6d-Em?&?,#3UKJg\p:1`SKdF(RGq^h]2nSDL6l2I<'Z,orHQFcZc!f^YFlX)uC40!f__"q>s[fS%mc"G5#4dr=%0C[?LLH$e)EY
%C;7r11c`>Ieh4CLrUTUOo]g6GI8W-u-d.Xjpr`mas7Y")jn:##A<-nIGB`YokSuhKjYflchk&`<,VFKAN[np[?!^d,mr%T3Y5`PA
%Y-ZG,04*@Si=l79f#uZq*?J=t%mAjrB(#Oadi/YioCL.T35)YZs5a%CoFeubWtQOThts`sf["J"rogb2O+70C?7M#ms(8T`7Lo+e
%"7NXErt!_*YQ(2S=4qLUrI"@[2b3[W&3`>WpAFZg0(1E/X?MH*IW'Jg>Ygu!S\BJZ$M)IFkT=:W5C[OIQL?p&:P\I(H>c%0/[)j9
%g&8OqCNR!Jq#8+dHN2m*^HAdWNJMuB?/@\:mrNf#q2WpAs)RZ#9A;OtXu^BeHT/;`DkcR`o3]61okr&l1iCX)8q5n`T"ZqMhu=>D
%RE$uOpNr;trp7C,InB?SGI0!OZ225H54%Ce`K`@=p$K_I4Pt"%BZf4EDVSH1ce.@*@[DT<g+GT*D`ZL8cMRY&Ep^crjP"BQcqj\t
%c0=g-A2?bD=,V"^WRmB(?hF^uOn:\98Hmn].c"=GDu#:f-U58S*b3fAp"Mt1Gf9OH`t+T1ruW:<^[)Pbp7L$d043S+GjtGZ]7lH?
%H^8bPU9gDT]Y3Bqk8qYU7SP9%Hd@'kRe#<*k?lnD52Ueah<q$W';@G#I!@;bjje,NpAMUq^%il0J(ABgn^&EC/6Pa:'G7O`f)7[9
%hOM54#NW#UFS#FkqW@+-\%d0XZt0ito"CsWRasXZhsHs^If$S*f3'a[cb=bLC@RM5Y&<,XUit1W:o8.kl/gMMrc3$P,5tjqR43)k
%gHU)6g!035\%MH:=*H%<041?B#>_pZp#Z2-b!Q]O4h3C,oJYfDVgNd+7Xa#Qhk")DIsm23nb0<7Y-78XQ$qCYQO-r=H?W`7]Q)ru
%2\\+hgPuf9L.QW4IX=kS*1ur6QRAu+`X`N4SV/$[QFF=ZY$[c+^[$j5[uGp`GlHuJRc'/5hm'*(*jFUJF`mCYiLmMPYHIR_pfgL?
%Va*FmE@aQ8HZj6Ag%4$<s7j4P50/0H5MuA5o0;Y@?>KR@rcMP5qEKK*4^Vh\H?jT1e\uumjbKI?k0!M=;1R^5bk0h1bt)sGo]q7R
%]j'CN?#H*"2UUApHhb=F*p4P<b$3/>q4)H9]R'K[]R9_(]DD.>c?sjaREE%4E6De.=*K]eo564RhQC5am$f6%ol_qQkBgn8h)b0(
%X06Eehtk?q2;^Ob5pQ:&q<c/Q=3%#;LK<'a*<.bqX)G\Lc9,F?Da!X_p</B+(T20b0V%GVh)l7hGu0?ebVf:YNgSPT?C+Ub#61$S
%#/3GP?Jf-0T"aM"m*)Y,BRY#NoC(Fkq4?'r?G(HjmkH0U/MBn,5/QT@'AmCL8DTkEiM"#741S\KIQEqD\"%54Fa%hLR/)s$*aJB.
%CKh]1i!gq#iKqNu]J.\!?0C#`@1hC2D\*3Oo(;)<Xh0($^=[m\\#aiAm";rq`5ssA)nGDurAA;oIdd(c:2g,Pqo5*iip=RP5N:ba
%2h/d1YJ'aa`n+uJqWdePU[,5sq<-LUZ<N);Dn`fsHL$TX4n\qCEr1kC@]%`Ph&BtU+UJ+&%<?Mc1<I"QkgZdX-,_LL>__(j%kTql
%U'DFjAI6&am2n/,h-p^EqtB_8&!q_(6-uqShn<$7*mVF4qr[gaCrJS#o>,VLEId12>h0DDk"dZ0G(08Oq9<"(a!&HL:A#2qq@/B9
%`MiO2:K9gKYj8["n4gOMg9+6NGM+h`Ie)UHJ+fI/hW8,45.Qi+DsmWmn;;_np`oD)rTl3(D#`XOJn"WAQ\Y>5!a)o#iIChWn*n0:
%[p[K'%3ZMn@G/?`gO-m<e"KRsVq:pA^V9R?cTXA+DsPAL#?3oI9FKmEo$D(++/e`Q)Q35kEI+I2m>'u&XKrDpldUkL@je\I]M_kF
%UgZ_O&GOnF`_YpK7g8PAnuO;?8&mNi\Xp1bdr&Hth8?VU$]\,ihWo&rq4uc9GH$RBdS$i4H(O)7J(UIfA6Hq)@8&<(r]%5WgDD;`
%fF?THS.)_Ye!e9J)g0biC"&T`*U.01p=XU@F(NdRh>T#Og$R3MZ-Ou5eCS]G2#H33R_N+mZ_"89k/Rt(AA4FH7o![AVQsuSSBSC$
%SILfHXYtNe0i.)q7I6m!p;-I)ffj?./*U4Y1AKF40>:>fhWi3b`k#AE[FaG2HacsjAb<s%Uil>h[dUXPjB^*nAD6P-lSX#km:FmB
%5"Vm2[6:_efu*NU%J;K>J*f;'?"-UqM,CXj9P`tfBuM,TD2<$OG7VpC1Tg)#fAM"6IGScb+*gR&Ie^aI8WD'!?aKR:7;*cZMi?YP
%>YA7U(7gG2<],="-"VQW2QQYXlr[f,7b3dV(sQfFoVH?b[+T<X1cq("(Ag@_M(R"jF0haVIAng%bfn^e/2ih5OAo$@R\m2+><m9#
%osX_h">-I<m:J9L-_oC4Rgk0JjgK8I%,8qPlDrF#NkK:D[WH>fl&%;5qol@u].GpZ^%iq6dd9C>Fo0(RR/*rQKGRa-JbN]YA=&UG
%AdcHSFgA<)o[MDTd4Vi;?>UboT"6UX->.0%pU'Fhp-uT^gp`,#Bl!;t\)r,pZJCV5;"L]d[U%=m]a"p(l-R*U5'tH*s)5(PJ02$)
%dR%E/s)6qT1eGSI^>YRhF%J9;p'6MKZ5b2ha&bR9>uTIY[PRD$D(W""H5SUOWsqc]kuB&L2_bi^[SYu<-TiKZ#?%\41MgWud^tQ7
%\+R%;h/Ed^@:`.b2@d0\f3ql4XZ#6oG@(/]_\O23/`jn\E3tu`dBt<C7U>B-C/UnP)!PjD@#(+^'+rQtre=#$"Z]sd9.'T'OPQaK
%r6n7#MSpDceRUCDct5:E3S@K:2C*IkakBAWkN6S"ThR#$ptBI9^n;l1bmk]_[C3AQi@+@k.oL:o=OuVTFkV\\^hrrZQD=tI(7#_D
%[7aUaCGO:;C+T7rQrr>Ch:<$jApd$'"]C4Nbhe*]=['=$;%jIKVlV5N<dWqkOdPlUpISHE_WnK'YjIf.T+Reo.`_fRQ-gm9;N*%c
%aL71I[ZbE'RR?*<agGW^1pj*_"2!.8TT3XO?k1H".'Tdh%l5@U,1bb/[.Ud98j-UER**pdKP\>\M+hEJ'2n&N)aC<(rbqi3A*i_h
%9gc47CU7)3R#bk%Q-F1g?g>I^?npF9?tU08H#?h,p6o\>'le$41<3ES!LIUR[-(N!]%J`[LGgC^a3qQb[^)V1UbcML9WXZT@Uj75
%6d(D][Ai"s,/JHOajcS6eoi].#sF:'GpYCYOoU?D2OjH+9A)QN4j,u<QZC#\(L-!u\5lZe;"2\<>?O0_<S7#O8"'(Z@Bb_MWc)rp
%(R+Yie>(W4Cc>R\c/_3nPPnnt;-L]e6C;=QcF)_cdqm^5fuh-10ZdsnN#;nZa]R"I`SRagB;K2rA!Vp6/_P'D4`,Qq-kgoP9o(<(
%bkBG-@R6hC-=2g2Mf7H2-g+"PWP)?i'A-fl'uF'0PqVI$@0X!WZr;_tG<44lmu5Pq[Kc,GD*miWp<tb%m7(WW?<[Wp\gA5%p<>[e
%#*R'O^bGB&2_#bgZ7tWVHGsj`ODI_!,Aa:C9h]TYZt-:jghNoQ?7W3MP%%<9%:<a'+ZZfMX?N_hP/:TDXPQ\(b801%O:X;Zcl\r/
%7OlY9X`I+&81Zn35rVYqp3F)[FWS`B[KC9[`%F^/mSQko#FJ=p2pGrmUb.CKgKP<n;o?oW0m-n$!o)22^fkaM9Z&K*%40D=;%6`t
%lqd#I@1'H=a^/5][Fj-1VWIK.FnIDq))S\BlsLJ;Aq*@>f]8!B\hY5HGPh>-n[)?>dg<on'(;]ke&7QV9q5YrgVJhL29Ya4"tU/k
%BlX^:?=!M+.d6k?dl5jF<'+iq-2WOE8Cs65)`eS=SR"sXNR`,]Pd#E"TM9(HX(\#Gjm;<56PC.+rX1sTkh;I^q72_=qad=-M`>HT
%U$/EmXXlCmZq;Fp+h9<g1hHB^#dkOZdc?u;CMqmAUW=9E)!`_oR36Z$KumlKg_P(c`HY)j0@S-+c>c^eY^_#W[Ufb",9;p/2@mbY
%Bo\L^pTqKVKS$[KLKb<:%;+D?]_p#Z0L:nF_b(Yh&"RY<LE45g/S"Oj83QK:h#"/h@?.irBTf[EC+eHmY="maqYlc56B[9=S%>)<
%kAG?Tja0Jgks!:6mt<spci<q>hlf01n\]u"VE0K*Ggho2WpYHq'B=Kp@-0/QnXM(Uec'F+9\n>hS%L=4g[=c2U&naNR'C+1`o8!c
%o&`>o'ngm*a/@XGB+Nq$&!Ooe[9>Ie^D.%Cb_85`:c,'#VpC+N&_6:GU[qT>-&9Ld-B5X]H!.P&>/=W8Ag\cBK8DB;gJeDDLM$!4
%P4,&YROp+==N0go(s00<U#`4*Hdc"G^Y7i:mJ*(@Yo,Y2<ZIZFb1^4>lpgoLE5U/?+`A4UCqF>c%nr[a@E_q6r''*t*HoBPd@`&,
%@6.R5MLD!DSN2*/%b"Q:B6ehM9IUW1/iF>+Z'eL(Im8%GVEucX,bqK4l+YFcHm*.[**93k%lWg8hJOs5#A&h3f^Ap_b7pQXm=Le5
%';SQ>_L[e:0\Ki_YMEic)TjDonA1"L:K)Y<FnK#HZ]dA(SaV<;_Ij5lRpBlC?eL$BXgq5@YCn:>,(3i^J#==__kK$N6T=h(Aj*A_
%6I8frM8>dl(8^,/pm7\`-c.2<=i]l.Ng[7D#]9]U/uA?BF\3A$6M1>Km;&5fiW2;):ju&(JGONGbh7*JGjHe8S%u0DiClYW35hnc
%IE<=72S$Fppb-4@HpYJ+g#sD[$A1I6i@I"deT1BNQoQ%tq6VTD8/tFR_'[dS?&nbH>S^A!M0o,;m'JL'2O`Xbfp14Gb3C%VqaX+6
%e.D^BSSJ$+E_gdIS(V@DGJRbS_)D%^'/AiNqdol_gudtDbSd#m1J7c#g\tbWbc^Q\mB@ddIX"9oE3)[!S%N8%WZSP^5Pu@\<.B$0
%BgoWZ_JHuldkqnHa%U`"G">'YFP_X[AoIOpbM4GeS2C-6L1i>^2@93D=@QgF-th.1Cu:^1%Cp(hC^ZED9p$1f.hhr]g7BXSD6#rB
%C7a93fjkk[Cg:8*$*:)0M)^4=m,DFaCtc,e3fOkXm&rD`$c,QDXelW<V/h_3nQ7>Us4iRdU+K*42g<1jn"W^DM.qp;)R#0didM;6
%KKlc%CUc8L&8Z\e*ffdYJI25)hL)0S8i215aA_:*<&dn7%I;:d_G%\^8A\Xg3+hG9eaS\t7=CgTLh3##62$cpb._;#4XAUfaV9pX
%>\jLR2Tjh$fKsC!iHH">K,q;KaQo9*Bqg-o2`JO<YIn9Q5kQk@qjHYdMZ90c>I7K=<,,>gf!k?\26i87df#J[o3/.g?^9Na^)iQt
%.N:fOO<%P^7BfX*#X%,(<oO6BS:&d;$F&5id1-ebG!^*Sius.5)h\`FIpA<3n9=&/+dAXpK\0aEUeh7jSo26Mc1j1g@%51Y9d!Sq
%&(H4L,g!5j1dnL5!g6'7mY$C_4SR0&Uo:'URKej5>H7FY[G9ZPg('IH3/$[P=epD$F7taOL>s41r#V_>([fa>1>8.fn%a7refr[B
%B29T$=D!hfD6LIjj$`Pm@6_gDpH;qo+e]>7gm@:D$EfL^[p<$i+uUJ%A$_uU;4_;dCbYbK-.o+=Fq\R!1M\365;QK.W:33JpsmKq
%6mlY0jn[Xp_"q&ehcAt[2S;?t7,du)3)`8>-4VC8&?f]ie:KEm%4)@'bWWUVh`"/ebKYlLjBWmKL6&?[iptF>^gNrQ-*T6g(@7E+
%_JEd`GnekB-VNY79I_feC]kYZ0ft\?2QADM]s>p>mI0Us*)J8Fr=VahkX`ju19iMaPHQ<sb*dXFfj;Q"Yq@[A7l,-Hcih"[GliHj
%b\"s4XettR^fabTs7lct3mt*.hMFtLDLWfu6PrG#Kt0U/UPuk!P>/ZK%?de8dTBbl(/ht:FB)a!JCK+K$EOA(5Kr,LUcF:c,Va$-
%#gn"]bq-pIf0i2,A=Y#>i6<fqRtZE9d%s+!Nfhq'[573(2(,(h)CMfeq`]@;F)"(sAQme#P-?Gf3j$AP7;5uD01U/gfL7-p4e-4Q
%HjL2&oK8-BY(th<nKTjUd(>dc-EX(+<&5W,+>U1Zk;j?jdClg>f?NG%YGqG`A1dq.kjl,0mqRX#At,kR"KdMldi4*+nt1*HUYjT;
%:foi'fH`?cB.:r`2pW*1%tQrKjE3F?QI,,DoZ]/Vj?G>4Wb`bAQ:"5bClpY<2RD*HX5Z-DfaTPOlXYrefFg*pD>2bQ1U/XNG9OgN
%MoQ=]qkA6L@T0'!ip<GB]8%0'mt,th>ZPjF8:%@6F"5%-Nd)g2C<>-tn`kI[3Q95fE$,6ca6%,PcpN:UaGicQ<:0rf_o"5#7ok[Y
%Q6PXaLP2pjZutIlPu!Tg_:2Sm/EIahJAt]6,lUILVt6.#nB]kJ)CM2*'t]Uk@G6HG32TV<'CKk"`'!JLFJFn5-(^uGC5M%^6<:B3
%D=;?Zk$?^A!@G0jClmG&88YJ=kmV%YFo'*4$^G3bDqQbk]koQ5eh)bIQ>fMLB_h@Z"ds=D^.oBB7n=t52`=Sl-c@ePk4dnDL2$!T
%#oWQQC6=ZKO;WbP0QY%-9np2#D+(S8m?/h.P^[\KZ!o:UMVoQ#OC9L"c(L=89M2WJ=ZQ]#AaZuFo@FP.PHj1N*g)huY<p'Y%*R(%
%6sWGiCT+3^YD4(-#fIdbi=lqQ;!LfT5*,@bO$57844k!F4Uij6Xb]TLH.a_cF$sOoi.WgQ08cc2l>/"e=T>$E;US=[KGe!Q*8?iT
%gMKNN+4T*jesc/#M:C@mT*ee&p1e#Q'/ad-H=Z#r;J7BmQ$KdVfu%C2^J@"97EelGRIl+uij.]ZKR6q[D?[+NjrWBO$ab%pju%K5
%o/Cfn+CSbSn]<ot@`&TfA>F(?+r=<-S(kkA?B,Sp3N024171sBQ?!iXQa4:EBhB%1Y#,P4-BhM.aVGZ&)(\u1]8Pnd4^nJc<;A(I
%+-RM``:apl+Ek':@:e#^'V=*Lb,XCLV9@l'2<.FVa(A7,K?P@$f^;2i0\K%:Ur3VuQkK9K+:FOj_RA,;&TP1c3^U%Df_,[EFu^dX
%e0U8;[U9a$Yo`lu@H)E_N@.rH7hk,XT2A.Pbiou]4iiB!<k_TpM5.a(ZH[?O4LhEp4$p:[CVgk+$^8&4ZDg<(X::\^YgJOmY*%FG
%6V'#e^b8:"E2bl&T_X>IoOX;+!JefO/tN>9)u&;P=A^EJ?57!?Y.At@bTC%W&4k<*8[&q6olfK?]/c\6pJ>huhKhE@Di!H;lge"(
%@<,p#(b04Ll8`9>ahEdI`DP/PaI>#nokE_pY5#:^Qn(l6_7KB4&;Vlj8HaMm#S^)X`@]_>N0Sgc9KNs!/VerZeDt;&'f:YEdtUAt
%@k4N>/l+mS=XMd(k%f^\X[nuk=.@<c9o6>"#*9IVML(B+=P"+fZ6=?J-I.4Th0TGF;]16O4@r`s0W&@Rm.TT'K058I27BF;I[If[
%&MD2$/s1Wf%p8B8L&u3[C6Dtk\K-PZeVNP5%IP8cMl<Nh[K',^^q<n.1,j=hV^htNdK;!3T.)"]m\?P2^uP&s3Q21a"AMIH.MJ[H
%>0`=Z:WX3KH"5+o,*c4!W%tAZ6RIHeK-GT!2=;NR=e+6>f[OO#HY#6D5nF))<CD.Rofs\Jp8f[d>[m#,U_UkMcm<R=iuFJ)hr;7=
%rXo7[ALtsbS>3\%LRL`D\mIIok6P\BAT5l/)A.E^Fr<m_p;MRkp2lM2=ioGN^*m2>D;lI]6*;-@KHaBg!@P+^Kiu:^j!-^5D?c=g
%0Z8\`]HP7L<hnCn>b56W]*QEim=j0=IE!%&B44DomDBt&+?eIFinAf@]N_'o9oQ3gH?D7,E+M5%=bEc1e4=$--/#OsG^?rQR#7On
%)ch"l_kSPuZKSGL_7%0)VUi-;J<H5(iP8W#rQnG$!0Af4Y/$^3-r#20R*J-u&lm<@,Ic.`;@n`MIDZ2jT"n>Whm54+9U-Z?d@)'k
%G]1F<;C9*tV@qiq;SVd[D)^RQ,kogEW7IO^9C+@CJI37&eACGni>-;_TlA[R[bMXhODtBaQ^TmRo?[##DGf,@.2S]$9q&Wu9YA5K
%T$(8SOeXh&OqcTfjA,KRTK+l-\stld;=)@.bMs=NlC*rj_B:8>LJ/D5;OUM"&Han+\?/FL%[]b'X!4oC6HM5h+<;:O-3DTdOZ-J_
%ETiu!ko=e4"YI&QN=ORHG1Hr:Xq#R+)NUcJD(#COQIsH9`?rVj9+eCq4qQ;5SYBLMSD18*+qUf1`+nS[g]:lKT'g!/<Xme%kM\e(
%YSK$W7LcEooX;<_K:#=6Z=tAFO=X:K/[fDdTo;[aL$*'2<1lN[%?Z>iJD(_Y,QaNnVi[#hF7TD<OXcQ,7iNCOLHGd:Kdgs/J]52P
%j)kLCKg;3W!&C4`iQ-5Z@PiX;h7#p0GeuEoKb>@g,/lEKD*D;U@^!6'QrOR]Tr;p;@MB+uQSHAIYVD'ZOU&#mfc*iNGn"W5+W$Nr
%p8`HXeaH&U-6h.i2Qn?]n_OoHJ:&MF.1hSQm0sR2R8c4FEFj$lKEd*T@!n1W#.!eq-Bf1pb2F6GOM5PNHR==j7h2&$P.:l]>k&`K
%cNJ>@";-l%i/Q<9AB<8IR%&@^H9s>3QbESpgfpaG@2FdM'_*7EF9$X0&=@\s^"[t"bf]!8$gsJgZ\<8Tk!Z"o.VlV@`&pQJM4(HN
%b&$1&/h\9hT-<7>?m*SO1$or9(ZDWUN"LX1[3@#@,HNgaVVmoOXL8`Vg=T^!K&4@\Ar04lRB*pe*a5_OOSrdjq+&[=@g]$9B^B_E
%[%K5P#:g$M+,ND0-,9TQ&dX2\;V7J<-.[@pnf/c,j:56hK3]603[>n``P[l,7]p1#9DB6I"RP@&B@GA`Wgf3X'9\\lZURcHD;\hR
%V=Fdo"Q*%@oWC_*O#Wf2(D")/%YsR2jSh`1J;<,KAttbMXFS=Cd/3.kp';56+molG.pbgR51qfb.jq&GS'Oe8qk"Jg2*<l#hF#^b
%L:r6aELU";4Ka%hpSZ:!o1)*0W"9)9(g/DSOKFWg^TDP',R[7EEK4aF8nh_JG5O>S'g!`2P%-."V%ccn5"tPC$;@]sp8=$mWe;Ii
%H(kq'3YXpK]+"*/<OX$6c/OE`gF3Fb+?UGkFk_/>Qf=t\E.DOQfdf!OW<28.-51Q>GWqbo6s?pPD1;q5L/B0;-SM'2_<nJ1C\n3W
%PnMtjaR'htIRQf3Xb]Ep#udd,iZ[BNL`\1,"j,G[,MKG"/jqH2(O37Z9UYa]R\9:$+"JZM!gQ>HE#gaOeu-Cp'2'4J[_Gm%ASE3u
%Dj1F`(qh?BBT>NpY`Vbj"gIaDRbPS[fntH)mF"+2=+h0o'tJ.#,.l(ZAs5>2_d038.A!o;.R_sP<[Cg[o0S^/hC3J:"9a).X>X9O
%"72sSJc].-?"0B?\BFgsq88mKPK4e,Y0?0]knb>8C<Q;V)K*C4_b4'9Qd^UPee-t5+]`&a$<%;M77r9_.`U<jj"g#171&o5mZ^=$
%FJJ!0balk],MD$7a)A61mue;FP"%>0G2(SRBK]jQ:n#&-JD.H?3224-&Q#.tKsHA(_ch1[4b1M>fkJ?+>oti+6Mm(+2R7He>'!=@
%/LtK?:LmII5.RhfLpV_SC_fN74kVn.Q(e>6NS]kgl2us_]YGQ(./C_0;.DT=.!kWpH:^O+Gse$`lVKVJ!Z`Q&3_Y6'N'*++^VURo
%GW;uQpj(=WEEF#0'aP(Z.](M95;Mn@8%Qt4$3l),[<n(N$O!^ZB4XF5N8GBt]:C0%WuYupKG"gsCQGhW96%1W#X/TGY=((Q.QP%u
%<JNn;NEZTe2B@mlP/-6t1:7e^/YY\&lV'p'kk=;I_[_VgFG7R4pNZ13$(-5r>nqr2nli)#_,3@2oBG7cIC"p<7ohp%Vn7fm")"$%
%88)F]!,u"`j%s$AUpCA.^5m;h.Ee3DPhNrQ2oiM,/K5@d?a2055P(Zj,\mXaCH")N5^@X%NBV`D1(,^)(JjuC.T4J^oo;/I1O1<;
%kN^/OXoe0fTShtZ`T,&^9@W";JFar8XpP3t"+41.CjLgUTa'Y.</_9uFn5/[bC4uc!ZHh&@"F`9ErTuZh!?2(1oIW,h959LZGi7\
%SBN%*dD<-2fhn&g"/b'<co`Sp&JZO1"Io=W?RFQL656(`3F^^*(eO>ic2I8)U8Gh`k@'F@=f[JmY*2oMCBs?[?GC<&\SBH.DG<4s
%LSreI,DK]3S6@LK8QaEkPB37k9UjNap@f:!?<AC<0m4R01,DWS$?_h]&eD)ci3P:RC466NW(J8R4A5`uWrb*5",C,`Yer;FT[m7Y
%E_s$4.1+pZ\5aoHPc5qEqp^=38E(TM]P/[=_:?14o5B#+:(.5/h0,SU9L?>7":;e!#Fk%6js[X-a^>XY#$Xs5@u4l9cW`[cR&X]o
%$[0^9V4aL5ih"B41bi\O'Pm*-rg?k62FoaVOXXE5rc-QF"%[<bVPf-SiW5O_-A'Y]Y&3-./B!7<rac6f02'FT^1JNdMVI/!&HTh&
%;@91,_@UWSF324-'A_-.B0R(q0cEl8gD2nPnM[IDl:dUU7/S76/-IMU=t+jr6qSu]K%4#TIA$r)[MA1o,&fn-MkFl5r'GE-)/1;<
%4s"!34kunC't.VTM_@ORj(:^3&TGnsa>hJgct)-dl!a9nU*NlJWnFYq.i"oAEL@iq'eqNWXuJtJ7_:6\`I5%$N$afN#Z/ZI85KVK
%"%YeA/)*?R*>4PM!MJNe$amUS3mCs8;.uQ?)M0RsFo^(JmAF@7'V9"h_L[Z(D0;2KpuIqK#"++F=XI8h#X*pn*.AnRV1e\H1)(7+
%Bk^#qYVV1)kh2\-6iM(%3=:eJ/PU^jl@:mXka,Va$5+3r'TM@.Ql#%\%SdZNKRJnqE3s(.3'=Z.P^Mp\Aemtd=i)lo;OM'Nm]X"(
%f5V<<JMso1<g_k\0AM^jD&sQ*!QHJUoS021?A)tt-D+1>7C\iL!k]"uquKbuodl6q6:?kZ"n-FD][%ERg`0Q$(CHPKZ0Y::"BTHm
%g`YH%.jLOF1n'$Cp`tK;W$FULl7%02BZ%uk!26biS'#"Wm>pk)LDRiX3"G/^:^]Q#T4q,i5LGl/7MhWK(,pH5nQCi$?F*(&clFU"
%`Gc%ibA(*QTs.!"(Q\J\EL8ni?2egZ'[S*M=eOb^?hY-;Oaj#(pbF>IP2aJ_R+P0e@1V"K$fOuoF(QP>d>XWXL&:G2\;X2h*ATen
%!U'RF";jaCr?L'QmB<(o93N\%n3b@<N6&(Crdp[\^t)`m,c.e8;\hE'VH]!no<bY1C<$d(R(Op6TWfQ:>`:600r'1gctrnNV@J&1
%M91Yr1Kk%,G,!#C7V&4!I*:J6fP:r<H"Fo@K7q"+8[MuAOtb;Z\Hfp#$Z#=<bWWh9ZOurKX;HN>0H\(Ri<V!bJ4a=5]!/d]V(kj/
%bHa/,p-lFWd26fiWFrD#'SbUV.WfECPT]u&&oQsf4d.0^:lr)-H@QYWQU4Or!8Pd(\Kac"A<nT%ObTa\Ko>R1&lr$G*0rH@I.W)(
%>WeY@d3,_$%[--u&BO$.4A]i+\P<du$0+OD,?MNGCddZQLiMGaM<VnC!7ld"%f1QiDQ/Q]J0Si-Ocm83.Ub:-Zp]N#QRH_O7^K=`
%?n\AnX*Z&!"lY6gUH5Eq9ig+m8Wh'#]r/h78\4scP5@==Pssr^lG]8uKSj'dWAmNt'EJVb%"U%BA+"XT`/gSj5u$=?.f`5n%L8ch
%W\*;2TL!No&IQIBb<B9(Ec*;O%tK7(dLPAi/06:"Z,MJ*=\4">@)5.!m/!E764P(TIC9F/7'')r:I,1>%#hW&:17Fr;C)o30\1DH
%.QB\\p_AA4q^_=*8&Z/nKZS1g'cA/\JJO^)iVUP7<9#^40Oh[F_&hAfJHb,9cf+!]&dr*sM5^c)/ha;Q&kANK3HDsd_!IaE,ltkn
%aCai.!9ss]A_spuJsIDC*Y]Y%?ALV)Q6dMc65l3s'Q6tbGkcb=Gu4^,W[^''6P9i9>/aU[KoO<[Xh<F5OOU9&id?al<t3;Peb61P
%a<'?QWE7(S)2d_&3No#J!=GNp+sL>2TZW\C;[PsRKLM[FjZ?%$Dc&2$jFYa/=HHou:l4mU5Z]\)i(6PZ8nkJHaOr\11+b76UCdD9
%5==0$Gp^;mp;tLB+.3(aiL;?;6?TqgRLp_@77$=2UdMd7A!tFr%WEXa`jD\="@I]MhhYaNKh)`@.-O+f"8TVY!nRN=Jc%FfZc_97
%f5QOHZp@]Fb8)']3=g&B4;IGF*+ePoE665]6?7c&LBK@U+?)m%FVusa$mUgPG(fR!K_F[&"kFAeQY[eu)S6r@ki,!a](AF^!r*tl
%7`7NhkH'QHQ[C*>'gYC_kGk&t6?Id`/V+QpMm4:[\S_nd8[$)BWMK;';3ciL)A6o;=,!d\:L+65`J;`pbsK&#M@gO*p$7D@O+OU6
%]`rtlpP(N0,X3_*e)*bk;jEhTnErebop[I_%UqZbWC;C;N8g+Vp`B\0'J5$Y98H@iP,U!/[Mqf>Jk??\Who@-P4PM@4E6Hd:_41*
%(8\-rIrmnS,66T.09IA?no;g,oSB<"CIl0@5EV@-F9+a5ou3-a=6gpW>SWaPDWS"'RfJt'Z3KFr]Q1=,%T";[\ImVa)hP)'-_#l^
%W=q3j4=t\)51Pcn9L\eI8t>qhU[9QQ5u_"<\;*VBm\(RU_#cDR#U'K1[5pb&R9Q5r-(Rhg&R&5:W5XU*#5T)(!CA+p2\K6G$"Sjg
%N1'k;dLm<+KH7a^PtSQ+nq&P)L3T=QU:65STi=ItQf4('_6>7qp__!hBT5KTC;>cm>>g?G?sq3G%_Wfh<#G`'+/+G]QM)aM/.e%<
%Ats9In0eNEW@X4cO;rjg]&]Z_;la37>]^HG4>+8rYAo&/q3mdGck9pZeF&f'RjZ&aCaRgE;^K$-5%a^"BqcdQEZL<CcKl[_(3'9F
%)DidqBA<,VUn45f/N@q00qqpZYaD]90fNr1W7UXN*0rtP5euU1e_P">\e84pQ(q%"QtG17\9K0C=7-_VJ.D:;%5=tt[ed-2dfq^r
%?t:Z%G\(mqaU.4UaLC.&n9lO+$HOsU:ugj<3/Vqf6YiKGSd(WA-'<-Xbp(q/hkI,b*$7?G-dVF.hmLGp"8]%^j[9RHMlW_&/Jq*m
%<!o)*JX#T=q]ZuK!kmZ7?s)f`#).)Sc1$!N2_\<"MM08GMWZ2l4a_s9j</?qPR(ojldrO"2Ch1'5G],u2\9B%J/!^tL`F<Z957D4
%.B9>#4^-V@)b<PSG_fi@"Xm^,7!<"$V*L^oqB#1iJ4=oFiR0,nYmG!HRmod:!"H`%!RXE)WU1jr6RcG+\[%VZj;lm(M]4BCG+c;M
%"(5GNI1ep@@oAr[BsjCN<)sO7\DRnc%K-0qIta=XnUo$5C/0<ga!=R4Sfhnbfc1&2a`A)nEG]],C&o#"^r6Xk/0qUB4ut.+dLg]/
%I<,&Z2J"F+9\p`cZ\K1M:ViNNVcH3cLRVeGiOfIf<sM$bXb6rl,M`tLr4WI)LjBl7@9*->`npfU=%HkZ$6@>"eO7oK!Z.gcEt_u9
%QXj^k@,pg\;HP)&#YjW*MFO<g<`Dj30XrD-(\!(tV>,]ISG.k4'$,)+L?ddb:_Q['Wcru13!#C`Ie-_@eL.ee$I6ai#pH:`pSu@C
%'ndkJs4;3'd7XgVpp3=#W*$qF<97=9?C8!BU`Q5;@Di-nQT[K2NVCA'n,f\o7(90_YSqiA4Z$`rSq%^Zp+8e53Sd)RA&*EoX'tR$
%Yg%*Cg3+&D3C+#r37/as$#LnU73u/DKmhH7$,$=s>n@A$8nh2./A,R:0_eltBb.r0O^UNF"9V=bpeWW3euR&oTbfNji6DtR777]^
%*/h'@_V4SGU=mERQOf@;&:'B@=\iU4oPi`J.R3,(Q4GWd;-*<CDlPehWiSt75n;s*l-cM/TA,f*eKa\eHr23SrDA%h*;`+'14bKZ
%pnb.gFSF$C"D6DF]$c-reD3+C6=7pM?57R:i&e!dA[+c47ceL8ZIi)4DCRQAoZ:q7ig<YWd6YCiYls3Efb`5E$`^8BnGO,*B`qUl
%fOKh@!Fo9F0!VJ>ElJE&'b"<&""0Tp'5abB86@:jiIFbXp_g'tQ8'dI]+^$O67igM"9<cUAcZmnWhb4J"+P@qj]*d)9qTSDYZi(n
%-^LGYL'_'dX+im)0J1=cb!!mA<.J3(..&S)V2`n_h9.d!<RhJ.AZQ,DNVc$pUem,H8PoJ%:`YDg^l1d$b,O,PJ-*!Y)Q^a*95a!P
%0d4M0+=T)l]%87DU5*HV*_9O'gKKrolp1=0Km$\J5KB)K3%h-tZ8Nt<'F"Iu.C`b(%"MLeK]Tk`OX-XWm=CUR4c9)8'Sk]EaT<$:
%DqdgM7ZCNI@sBk%TTiFK"A/-N.aMuEEDKlsEC_>J85bS#a8OWNQ%s3>PbIE;Zr)1SK*3rT(4t%omb'2_?o/0rKLi=g#QVWJ'`%#o
%YhC-`H6qaf!,hogO.*5NaTT%YI*&dpdVOfmp*`0s-49KIL*IKf@SshC.qt.5YUtOL[<Jk4dU%m4&5tDE.mu:0k,lFqM>2_?#SL.<
%'+q;U!ga<3c9_?6Dp!Z.rU_9Hjik*rmSDO+\d'eHjnqA]A[H7/".#/;^oD?KL[%`6Th&r2d\!b+=3IGN#=^e=X4/!a(.(6$aMf@"
%aS$=oPJHc9k_':F+eR(<MT^:@(GF^$L(6(6Yicu^lSLq',.LJTcN??$l7k=+L,qbKcpU#5C^[::66O?dChgLNXTo786#%P!(2Y^P
%$Sbs<.^6E#81GhaHm1iLdKuYoEk+8W<l'sHG[dq@M!oX_rXtWWQBR19<RY,[aXKN$TJH2CLq]nOLD-%#K&k)fUlEk\$-2+l%LYSm
%3B#$9'J)3&@>`d#m`B$!$1-2CkEju&:;G2fm6M>cRi;m>QUA:[Q.4H*p-dI2lMas`3APm6mS7B:1$?.\pS+%]cuT\ZiL&i-T#Kg-
%n\D+j/o]%FJ@MFsPjri5SN9f\9G@TtS/=B$of1E!$!eFY*66o\pTk;N*VgmBe^gr45)8TAF6+I%-CdYZfi>I_(hDN?+1t=7oRKl7
%AmtSDA3=te<PMJgN`Fq,[R0DOWI]]j<BFEER+i.GrIK"?eNF8oM+nPVZNli'[%[nn<4<mUhUsn1Fnm#_:NG0:*B7Qp\liu.C19:f
%;"o^6F"pI'Cjp'E[c+n!?G8t1A+NrSBu,YFAFYHJO>c".80Cio$na[Sl+3^,#J4OuQNp%BX1+8^4bZC_n*9hp/VmJ7G^NP+J5mRt
%KZ4>o/4AP1''.Ig::Ggni+7f_^J%6[=:f-Q61RkZ$Tj^'=(cndUAVKG+u9(4;E[^"bCTU`Ur<HhDfA`L!g2E`Pkh`HLggOAZ#ObM
%W&eu#QBs#XTj5EV2X,E3R&CG7Z/1%I(W&cY^O,'cB)A6`SA]Is+db@mJQ,\@`?./^*.[.KLdhH'W"K^US5,qM9MYqX<Kr0k`s+K'
%(jEnaA*Vq:_,Z8kD018BT"o>NT^cHG'8mX'A]rTf"&%.=9S+2`;:4h>^eJjX(lM5+D<[FeZn77^H6Aa%:`'[XPaeklJFX%,>uY/^
%-,sjHBF?_P)B/?28\IIDc`DD73uMN?9L+A42Tc['eFEu9W1h7D3FoAbd_rr)"l(TU:%;"J5n9mR$s$3-M!QjhjW_Onk/cD(,:+[,
%^@?4qUA"\]e[E+H_'&60Qks)\I"-[=cp^XD%Imi1W=+7j6r\akR5+d($'N3m-1BB1_5E!5;0"WkX;*T5bIS:B._[Bo?B(t&`<[67
%j!>M_:bS'DA`BMe=<^_,WT\F9E%F#'Z?oT1RJ_)7:;NpB8-[\K;%mK\7]f0)V5uuD7pZ^)C6aD)G0[B]CBgf'Pq"0UW2:aU_(oO:
%9"#RG'`limcX3\n"cAX?M>j?,*,]8E4Y.dHcmhi*T!W+6"]mEbY>49g:=S#\/0"U7kQ:@kkdH(])Ga'ma72MC:8FPG$BUs:-/Tls
%T_n>,C_%W-9,0Qd@_I:\-dbW$X*4Z-`1T_$Dl"AB_tZU"e&"Q3W,UW<qGQ_:,,GFj=ts-O:5WC\n#U5.UM$8T,hiS1\I#jC^e$i_
%mfd%lhtb=_rWoG53#YoN$Kq8GLb^WbC^6+V,<-[./.u/*8Oq*+p'BUP3_>nu>(usL$4AtrJ0X%k):_*n<>o<=XSjr.i=M=f:7[aS
%-R]tI40Lq-)(IBWMMQ5G,@rsebe[>2"D_?B190m&F-/OA2s)0HkHtTN0(94AZfoKjTrLQ:(oH)a70T#R,T'4:1tAN04V0qVoRs/D
%8]-dK]nduIbePG(jd/dg34kHbB%aCrKEUJVK`Jsuc45WP.k'l4b40c^NNVb)-'?o=>0dc9d!S3gnrgjop-Y[^&0gO@n*$5R5ZiPC
%.`GoZ3qS=K/Sm>D85c#/Z,`ln+mg]9T[kkX2'HcDpbqWl1FR`A@lG\\QK^X;Z-5^4l9^A`Zk![igsDdU-nKm[M`3;R1lbt=(Gb/)
%FKc$\#YbVfXA<uMHs),c\gcq".C:W?^c[NHpXV8TlA]V&(,%+&/NGE0_La#<W^tZ0glGJdhPc!VP#b]Fdmej1P>FqZE</<a81kOC
%,F!aaDGd+i*:j[K_qJ?%bEkVi#)/7Vl[V$P'iqD+$0MR[KcT?X(AAWalTQ:q.0CH)/jR413%?5d$7t5TJZh%j%Y]eU,p6%k'qjj+
%1mFN/>!7,<`&u*-!eT5KXe8%][cL?=.QJ;f*+:kt>k&Qo7/GN:qdrCnhg*Dr6"-I.>?$9iLnc/=&uUeH:N`BjK'?T5UdM/nj3ZG)
%dNGTeU(fU!b9P_C&P3ah;"Ac8/mi>`j<5qd[X0iQ<RlVl3!)m+Qb=hJM(E21b.`9a:+&h;cQrPS*-8=C7^$pMLLkH=Y"fqiKQ8SU
%U/)B_k9K'BZ'(X`r;K7SL[`R_nb!IK@`Tb^Z@VZ]]f;GhMXOg\aTVc:*EbeuP57MJo[X]eNl$kFV5YFFc<'Qg.ZqM[VhT&ofmr,j
%A"/(G#Nk<)lN2:#Au,fJj&?m-3@Zo98he3siA4b&e0RP73QP`s8uE=0Ge+-SYkD(f<n0;bqg)-I(n,H"D?+;^m\jP8X?hfRCoY<.
%G6IFO,&,],:&*il+oiMr'b8hDJPX.`dAfU"ia!qK'0s;JqMrWe>@;uE&6tssRm2(=D]bImq+MQ3r\SRB.D-.4\b*>1$@:4.%+i>T
%`[3&a/OPP%[",g`rE8sTrY_qcJb,<YPJ!J)b*e)B!-+L^,`i-2Y,JENcl(6R'XQMMk2u*r)\E7qCd;WCZ3g0Lp/#,2-6!+N2]!):
%ko355ZHfmf+4La[8*$VK@gjprA-;pFi+>fF03dZn.!irQ)LGS`"c08TW%F"@M"-Yl!FN,;bb7VXe,`]%3OBJjJF4ci4J$>_'VtAK
%.BlW//^Pn"'eoXnh[NAJN3N1Hqh1!_U<<ItgtZIu?A+7M#%lBu?a<l=ar7H&aI?H]FJV#t%F8[=c#f9^9-&g.F]bXm=B"]O$M$sN
%%T^'??&aLk<7RIRYp5t,$C@`H3=5)2S9kiW%(BR%@O/W_U3<+$KbUYg%"_ahcC>TNN#8)T%2Fm?;F(K)+R1&eS^`^t$!DddC(USa
%>@"MX[`*r8K47`TN1qW6rtje0KER\h!`5t6!VG1BML&M?!T#+gWg8@5ekF62/aCK2,jOo3^;d$#HcZcK\E_-=0,Ma#Mj&MZH"=]3
%L5O4+.SBom1k2?EFYL;C_a=-5NL#FuE@27%!@XhD*5LX."pm-m!)XFr8PqO$X[bG\"]-msT".a4/0NjfC6ut&A-h7`$?a\)pSL08
%';ba?XYmJ=+Z=WY!<Q7-:bX_*F[&$+VFGn4RO@`7C4`/a$A$^/?D##"(Jt7W7t-7Vh(H(gn6@Qr\&r-O\[W:j4cRIo</DZC.pF(X
%L>iV`T?qe$P,mO:bf`g^PUtd]<CbcUN3SWW;lk/-BKBu'eHqC,ac'K.1PkVk4@H%s'e)llr,`N0eEKe0?\PO^TV4=cpB#A:7=0!7
%3,@&"K8'G%]kjM@KR9@s;NTE8?"$Uoo((7qRD(m5YD3gTS+3_XCjk9>8FHh5OL,e[PaF=YcA!jH,?Z_k/=j*:;+r]^`PP[>KCW0%
%3D:$MXcpt+FWmmA#i078i3>i0<E,YeU^<b\h5gGtH"3rGX^70C,$<IrJA@?gA#?LGVodhceKJ0CM,Y%8k.4Q[*8&hB.*Lf$(I/$s
%@F#k:AqX4$d<t(FEMQ:@J)0*![fn5lA?=E4<*fh!8*rMc!@:H/3S9dp`)knJG<$B*pEK5PlZ4aRbje#F"*af#a*Td%Kr^saPB+<Q
%"$5/MR8E3R,%dOgR,WuMqJ1pDJpMZ39gQ1QFq:[)fDI57;:/S^ZjJ0_+QT3el>9sD$,lq1ms1O-Tte3`ZQPtpp[OYYk>o,aAqnng
%b=BH_VM&=a9L(uQ&8ZR7-3ko$>s/^Z>,P6VKNo:#ir4l4GGmGm0&D%U#g4$5&3,;aTc.>&1bpbSF"bEs77n9#&'#Y^,VR]M9,&79
%'eUb+\CX<Q3-"J;U?\tWl_H[+0Lk20lFA//E0Ua=3.AU:edVroc4Y;*m<3HdFC!8qS'Jr37Joj6/YJmYY[4tUX*5df[Uk=eU/#X-
%.Hp$0JVaDSo0m!\0blB6Y2C1,FOZ_+.RgoE4Yr+>Vf%u4O)cb0)hl!siB6bk5CU<S\X]4L$E>jPO@8XE3`t;i2fFQL_1Ym[GTBPd
%[S_!*VJL`U)>^IB_Vn1?];hl,/T"WadQJY3Ju6%qoYMkQ-,.<)e\+4u>e=Z*&\Vpb,\flR2eg.m#"3S>FJW&B"4%KW8QdG6J*Q#U
%U\HMke$c/6iZks#'!W9lZTu'd.bGaF,)\u<Ac>"a!sAKNW[1)%nP)u-D][:7G!-fi=k\Hu3lsLIF[Y!B^/`&V1$ItZiWE%Z#8Dm(
%n4F$I);nWkU^Cibl<k'IY;fsV',C6)FQ.t%&'Xk&&'q'98\4qNOL10=k:HI68<i]7p*ni;V[9u:2D-t*co2+-n(,\*N$$[M6uX0r
%]W)X)?aO*6N(H:`[^C]KgRqhU!+PB]NcK69kJQWnM;_Erg\isojO,$CSi:[QE9l?u".-YMAk6pRJrFI$gA85`HXKL7PslD?67hD2
%k$0=]"(l"l9`%?)A9?<!WJ]MhBGg=&iV[S7CkU*lP1T1.N^f"!IP'=B<D,Vo#uu=90Oriup]8&bB_10\e&^>fco/W/kk(`a2;V?,
%"qrM,I'7?49%'5M<?iKnB]AU"[X5>=k=GfI.hZ/N-?%CR1e<iYQ9C=RnU_p&MPKkRg2*l5^SoLt)l>]WBcX03AC&;o;Q]4dlbd&r
%@N!X.Do_KlL]OMp4,7\/R[eps%)>fuhP8aO\2^ChbL.APqjL3#]Qsm`;2G3l<p^+rrglLW"Q7/(m6->]emP7S<t%qD6d+iOLFU[@
%Q;=_*<UYYYNKB^%1k7>ul_Gb/EUiXn)<Bsqqddb56];WsJ95P\HK[h\PrK8%Egk^FPor,sqc&o3a^nqB]RX&6*i4o8*2Mi!l.TZp
%;2^#e[t]X[`^fD23*iG.AIW6/eO%57eM`*Y_<RC3cjY3=;-+,6)hn/XaR98LE"beL+?BU/-h4$g.ig?rfX\0dQ\;Kf<M?Xp&h#2D
%`<<(2E%SY"omIa&@SRc^::jX3%"^9Br0p5"ar'(A%W]Lf`5PUaRP#'Tc%EKieG-pG1'Dj:^L5>nK/S=nPH%-,\)ubQC0@=_D&<ha
%;b`MKq2WQKTSjA7M_SBJH:D(.N=P4d6f;eeeW<WKeaOo@2eE+?/M!Z[*hME=_9!"@)/Bc_ZS]VLX15=`0:>>nhSh*"gP"!NA(cUJ
%<7`U86r=4;4!t)Z7=tg;8;S%XC`E&j+OK>Bc[(LL1sd**CTte`M(1Kh['f"b9>JB5ZKs&#+l]WB%Bu"e1^(>T5*YBmfIC6eA,C69
%Z>*INWbc,r/l],8C:3.V5u)49knJGM+le2HSX^qh;KTcQ@tGKkI'6"ZE'c+oWVUd&kZju7]BlR$"\AqJg)B;pg=4iA>)6s5\p2g\
%WBGCbfikLlB%9^JrjDoV,O#7`>n4I;abmSHUpMr5\#jQ5Tlk[#%t>"oS44#faT.Fo]t,eL%?9E\#IM'A<4/:+=fm:a84QOcKso\W
%o%@l?^H=OhO[]OGlRAl+#\siB-(h/bX"?X%/Fdb!-7PnlLp0[/W*],V^^DI*OC_YhS7(Dm<J\)-ljX[YMW+-sdt*"UTVY8%rrc[G
%e&1toT3B4..jk<aW'[G:/hd9fD4J;4"B$muA^=KZYoJND5?K8(;?hn-m#Mq[Aq^VbO.no7X1Vf=I0s8N_cMiufjJ:ffFniUe&l^p
%9cHi),E>r=IIq^>B^jm65(WC/kFfY>@%oIZ13"DO'(s-,-7#aVVGMn9Wfa&!*7.Ckn:o&mGfS:1P"_8\lCC<gH[i/DH.^_G3k\lP
%`!D4?WV='/QJrXYRReUOkocq<Y']iPGsI;ZV'$(MB[Tm^W$(0YedX%K-'V?M5nZGBRFF9@P&hVCdlan*,DkP>#Q8U4mp(IKj`$rq
%"A7(\F7&CYkZM"SaO4X@]Cl=17trh/UJD9\D$=/<kN@Vig2'u5j#/WujP]3&XT_kRg,sd+HK804JGj8f,E%IcUUl12L!Nm:b`[]Q
%3"'Mr@3?->1u%ni;+IVDJju;goo/(F7AZQ>oIBB_.Uu@&oDXiKD@s!u4ZZH2N[GpXhh<EM4nopcoMfQ^)3MgN$X"-s[)^/o%XftF
%-6f8_[MV`0W`UpuRqq[0bUfk""i(4mr$,=o]J<nILtX/:A-Alm%\P'S1V>l,=;AI/OBAMngUZ6qBl(eP`-`?+V26J?XlnqS4qW;'
%2Q?3haQ'\q0kmp,UqTf)i*dI:`"lQCX$WI)(.oP&rl33Lk#+\JUe&_[GRl#"q<.02<F_=[<c)q0-C9mZE?I,,BW)Tpc@l(@M%=Fi
%b4-(ufc&KnU85LKr#@iW/HY!5I4s2+9[jeI?,a_F=]H*ja@:\Xfr9aa@s1g\\Pj^qY\kjM+WGjG(.U`s@pIRjn;`dO-\nFkr07s#
%&iO[%!N@E_$"?]&l?SnOZB.m^;1$.VCZ<uaVG^8F"R0+"C:k03g-0LhO^T^nP"6bV+h.bO?sOef,\(&c*)b3A:&jXcVpr)!<MF*4
%X]qr]'8*Q6O!Wm9%V&nUjsJ2[<U-*Qp0o4F7p+\Q.&(r%1/)Chmb!/5?EEV<"?#ZChE5m'41u_>,RJ=E/`[o*C.f#`*Cd4oau%`^
%h5@oZ''f]_8qbN::%bB^lj@;78[5d4"4%(C#W7iB>>mQ4DC1_Dc+S,2InMl5gSc_EP!K5nF7^@UQV@%-W2W/\KUcY;l)->ML+E+q
%[&jkOLIAHb14+*4,skbV9q2ftN4RY2LVm>:i6"K0U4FNJm%*alOb;Tn2o/cor&t92'L++qn,Tm%#t@sQ2m_g,^1(`mfKZ)?kKUF0
%URK26Bj6XS3P?^,Kat$*,UW;c?:ut`HCKm$-&,YGOX>snD1@L?/Xp-.3jkh)jiqK-[X*9%(o!KMd'<Bh<FjslV)f26n!r7/3_\oV
%V42!qMar;0NM>LdU0H"uK^?2F,Jno>^"<B^/uMVO@/Iu\iB@c+e%=-$s/_FL?%IY_;BMU@5=X:F.g9J67RW5h\N>lZ=&O_#X_sHb
%kRKUliOZ!cG+F9)\WMtFC1a3W&;=2u;-I86)A&G"&PX+\q_Y$ka)&BlX>SJEA]/)V>*[p9oHu>]od&(nmK^k#;KYS_O-&A_Uo\V8
%[(8`u^?'=!fbPI^=(3[lJY&pfBQE-ufL=mTW?5JP`>=c6OmE9LEYf7`84?bH]]6:hR(oEl79k.WlMW;?3X,27QClj_'&)7R'`"#.
%jK!'UOt1@YPdZi&!l,cbYInk7r3iJUa>WEhdA!(T@k!WS%CH\D('[P2&kc-9D+bCK);/6kr^cp;P=_d'`V]UlX5lCc&'W];\"mH4
%NEhQ[=r'WW(5`9KkW_Iu%UGXM:j,3)r?&_BN0!JZL6#U_6Y;&nO@6M;[-_q`!CnA&ph/n,=U!\ZncIY/m8)AMU5RpDVlr8Ps1'.s
%,8ddP("5dW?&uHEP>P[KVTX&81.[1!;\;l`ViA9V:[S>=pbf)7pKcT605<_<KUPqK#K^][*ZFaM2m+lQUQ$ChRd=9E&r+kFqIC,d
%&W=?\U`&%'V=$^/=p'"H6(fPNj01#db8QZr>3$um&#*i8l8,+K>bdH%9)p0QF_lK]I*35Si9NND(-+!9Fhl.W+W`ST(QH2(oaLWP
%_X,Zfc!,^l9nXT?,hY=pU5hV"ldE=:H#=/V:A$\Q2KV0C[W10kL5S")U,-`ueub^eB_:qrWX"83d2hhYp(>CBik8`q)3o^D77EK'
%LIHg:9:(<&URJp=?NnI6dN2Y:NBE)e"Kfs]:N':["p]^XhaitP#RaFX<N=ipQ:"!b.Hal=hY&XbTc.NU,i\6qQXe4.Q0S%_W,O0X
%?c9"i7Ge1[6Es&#c+-!eaj%Lj2$5F=*phW[=!\2O%"B'tldCI=d82j"L3Q(>NFH#\^*>5O+N\X.gZ-.ceLn>,$9Oq>ZaGM!6!.f<
%IHEs)kH1:CAC[EJQQtSUd,)`h"!,"8IsUe!?]/YROJA#*33OU&_d"+r<3+!*e@#iC0lN'9kd%63Z?34X%Y0DC\Al@iP;uU\]-j/3
%g<%?Y:Eu%f3A4PJaH4bfW9^C8MMf#[:@)8te2n.(^Lp`2F)/%:LTC><<>C)R=:u]ZR5C`2_L#khQ6UV*23pMa;LCl(]'$[;XNH%C
%W0<HrktBA?84YR5=t:72ZYf$KV$Kc\dAtJ10(QfgOXPIf^C1A[?\U9)V999o=2Ok#ogcF8.=DlmK(AS[.mm-UOF;^gJ6EHk*6*Y8
%Wj#r$+QsT7ip@<7.7Qr9apodcP:SU$q>6s.`<3f,o3Je:O39$+leXQ83n+$ajGPhaA7+p$(-k8tFA,":(XLrs0b7Xi@Y(R8[_!gQ
%FSd]YmgCnUqkHnO!^XN+YdtG*67?QkM4GXH=u\r0(I05W"@JdO"M2s93']`Q3Mfk1]XeZEaslY)$%`aM&MkRG#rUX5)E2@K4uGVS
%79WS3q<$>G7+W.Wbumf54JB^3j3tZ3N61t'q?5A.cOo"1IUIQ&7-bMI",UFrHQ6OY5_O>oULl\^0=!Nkk@5oJeV7$'<p:iO1a)j<
%\2HX:3>L`0X-UD/n&Oi],c#:Sa:SFDIO6k-C's;$pX5mKJ3=RO7.kF`^(P=Zb!HFCOljX=CYab"n0pJ-4TZg?e!hW<1qfqkktBCD
%!DV8"M@nhn';B@S&6D\.MlP@hVE;/2/,A#@#Fi\<jS^t^igILRmbYVSE!(G1euF(s1*P'Z9*sbmK/-&BQg!&"'XI<TOS:,pX5OIb
%:8-?@X+\[VrD9Jd=/#a2Te,nGA<^0J#SMIW.RZ\3U6O@sn6tZj:Q8sdj17IN.8qauEdSqE`-J`_Vup!o@Xgqp<89l`$i<'ofL0*(
%[i?+kk3D>&g1h_.VW(,%\MS0oj;%oAO9<j6<L)t,)rdd)V.nm81m/cd(DlL11TbhC#"M]H2+hN%`p&Zn8<_E`oCj>m96JRYM$/!V
%+BN2B:F!31eRkpE]N^6neI@AAdcLmj472*f<_V3O9(@NW?NCufh9)&A>NeQ%2SfW;-DuPQ;iG<a$E1*=10+jhQtBP64@C2(95O.P
%;X2"gMH->Q7Cat2ZJ>XVW<MEM`E2[3gsm;h_s.LUApd#m-0u9"3Du,XYUK><REc(BeO9e&PoaCDpY`T6pEr"3LnbOc-S*6hCbY=f
%eVJb\Bss=`_@89$13#h4_AGO\,J948if^lj5oI5tX"a%jjno%_3&[-[5fgoV6Rij:2iB#H8n43,A*8Ed,'_CN,WJC=Oi\Q"))$@+
%Li&XfGk0s6B>QJLW!9\l$IH1uj?!r()p?n+?1UUaRYNr/G4e*o<PJj*%tMslHF^;ABK??gpTJ>jU+0n!97dOqd%+^),isD]jpD-f
%CLMf;`^\`177h4ckTQZX>&.I(XAG?u5KcMTT=e&BNMuQ(Wm)4t6#D[:B;@ja,`&I%h`$`C%&aTDOQgRMN<!KIa9cc6S`m>KQ0MVF
%SO$J=EEf@(7(m(a[(G"t9#<c(a?u3]maLPV/ND9%%it;82D/Y84Daam#,Vu:,b9d+6k6K_k`i#BV#h&O)A3D*Jn_7i#>,S,:U@#&
%>iP0Kkp3_E+%1*#k0R&PpK-@8C'okr;oB8e_L^QANi!"g@!8`4&G_pe8jr-'.$*;bKq)[8,,iXR9tro0OD(K`h:=%n82D[HNIV_8
%QL`uPl/+lV#rS_1Q&=R")%YDd^A?:;3`Q?NX1IW5CRsYlT\S_mq'DDf:c@(1Fkm=d,K-$4jce>o??Ri6L!@FS5'<ud-di[QRJXF+
%!$nuOW&6[q.QcDsJ1<[?+m?h7DZh[._-0=_3[h0NNdQX`hYRD%.,IHNDpe>$E"+K(N`jfb.Bdr6)P=h=eT4pN%u[WMm]''i5=5%#
%p'al<#4mP!j%atB3mR=Ra\uTR7+@Jk8>*-[f8Wfi-BdM\^fO&55G+WG*)DQNS0DE,M9r14J_9Cf.4]s%J9Xl'^S/)nHK6-W&)-3W
%5mhdNh:>X8[(_tC.!7K!^V'6,>$PM)lnS(iOPUgjWt;$&o*?^iA:@!4B3NX#A(RjA`F4kX4ib\3[[iaQnfp3'2^[[BS%^_mo^j,G
%Isju?XrHP,g%r+7o2O(>Q2M(+-"I(F#_qsO7g9DKQE9=m;Za#/lm?WRP7Q]J0M#0(Mlb]t@jDVA2#.nbPL+P?>6HNuYM15F)]M&3
%j)?3dS>$&ADa.ckO</C,:R+WtmaV1fXo"^[,=JuoeLVb2pG2D9mPu_7/K73T=^`d8&p7#k7aF"`q<>$=$0FlV;_p?c7[HC3MN?mj
%'X9SH#_2o<>u)b]ORbjOA;qtP.^^m+kK)&'cB0Lj8l=?.63<GMl2E@H5LZ:,?=$8TBh<D$pNh.GIBYaaAIG-%/DM:V7:E#B;tO,)
%&PAu5fYW<t&JSPheY\OQ/YqRTm?RjPc\WjFQs2?p:b(>(.0(XmeEV.Z!9T[/U&$T<U;kac(MFL2+>E1/8r;I/<Xl^QCc4#G#90a`
%"M>mh)+rSBn-ONN&erGEALOo`9@Q$9HP7TTQ(g$CE7)0,.3,ap9K`95fLUsSRU_7lP7G!X9AX"^`tg=.PD\7m<2[@>]T&_$he7Oq
%&CuiT6XH-0nmo.[&@`p$39t8S2'I9Q[8!NBbiL.J5`lU%5e7$L\nnn/'Nj*2NMa+#1:EE$l_<Aa[q@4FaDLRQEH'`1#E@qc/pW*=
%#4(8Jj3<,b,U#*3GZRm#"a/5_`I[t;+qm1pb.(VO>2[m']WDWp>!e^T)>nV>_6_],dO<Lpl>sXFQE>cJ;*\>9/fZu\WUCVO23K*X
%Lp\gAZCF=*Zm9'4Sui=PM89n&"Ok2"U/uOk>ImjPY[L/)PBPjU;Z3DcfI-uG$DF94D$QEO4kWA()a6!Z@gM@pVg9'A_cC\4lC>'k
%e)J0r*_TcEYt(XFg"0/*2&b=fJabT7hiDL2Nk+7kBD8X5Whr/#K@8%sN/PPNaE'ne<Pb@U69@IL%V3cK<a8)=U9s!`*`jWnW>mdb
%>tr52TFK4%(iXFJ7)Gm[6ks7!N4`,3^'AY1V`L(.S,spNG\C"8D"t$E[6Z)*Ae'-,@WY$TN_\TSl8b]Y%DbDi3(toMM[T4B.*tZ5
%6!90F+ZI+`LcdlDMH-*?bkbo^F<A+=/nOkNiF2h2;6EPd/BGtq:=<ki^O)\^g:c0b!lL;!7LNu-7MV>]H)P+Ia7NSlEbYrnkFNE:
%a9`aL^SNY:27e@1M!e834D+!&`"Y^'+`C05i*)-YV#Y!!B>O\bGZ,#i5H1SAAPl260X#F5C1j$TZ`e6c*i.-+]kVl3'!G=`F3ATT
%7#`JFRpTosrq;,QU4iMrcUA>!aSF?+?u@dPAI_YQPeBQ*gX!bpZH1Cm_3Urq^bXdapj$.m>]gHQ)ZeK4&@V:#&Tlf>obp3*XqtY&
%`:Rg^@SQu#f1JhL!tGoJJI4HGX#PInNS!T0hfpC8gEl(E>]S^$fVc4"T\>YEJ?2nKW#]ASI79\*>5;bf:XEDZ)'O?IM9M]/%q@hf
%%WXM(M9'Yh3b^)T-XoE+).Xc4jqX_=EgtAh$LL^n_FFTs<^-Z@H!+Tt?mNQE#FE:"R@@j>PuM[RC\H^ii?A?9)Y9mIFrhS[^M)/u
%Vi;CQDX(m9boUUHbF):B6&Jab@7"RHP<o%^oV#JfF$7HWMcE;+ZgVHo.;+Ka!0'_#X\=j_EQ(:q6$$-_hR[N?_-qP;H@-%sif!Oq
%\@MM#ip?*mqWd_8]A9YNp)[4c'FXn\p\s?"2]#P&n)!s2_[k&<?G6.#qX0ShJ%>G<cMW%gCEoGhN\=6_3A@!:8E02Yc=HBu)Wm7$
%?NE;ti/qepW]CUrFfQh(]VrK%GVZt!fJU'0:bQ/4=btmZisg"aHU\gZiI,!ob'DES\ucq@*AGLap0.X]ptA9V'+XV_8dIU8pCt$'
%oLc1LfkET.p?K5e%OO.&m3Y@L$"Qa3h`D/V8+4Xd:#3*)hg'*_6>a%!V(")"q5]s\pW_k8FV!B)hT"jGTN4Q3"N^6'a=8bsE@XD7
%E;&Ri(^9/Cr+G`8H$<<0*-dNB01qQk9XJ(l*mtf"*"magZ$M3+3D,5shGoql6oKLc]'&jsMnX$%QGeui3_ZM#]%)iQFEE.M=k2TF
%_EBHS',`G3E)JL@9.";YZ2r>7>u0%2ap05eBKC3'q]QDfVS6>!LLcr`-VOJ!)O],@FAi(7pT>jG./$M-90;l3l5Vo$J6aP$B*M(e
%O^],5`hPE?WFY4*%ade@kHjs+OJ,fbNl+FO)Y^a7&GIEd._Lh",RB6Z?usqedP&qZCkqpmUEnpa7$52]8-$&\j6RUD0^U28c*32W
%IoDh!H=mjC:GXI0nRi6TaW^lV^$0eDRqsB+9_tTc>-iL-#r/M<ILu[7j@BgLILo_`H:T**Vd!t!C_ga"%S40AkFiMb8pPE\NfKZ6
%_2qPb=&dDT<B&hSiGR)Qf-,7Ca:ubt'kssaHG,q3Sb`n8/JAsSU0L\LDmCbA89S('>,X49roa9"b=i*4(p7EX!,Dl)dRbEN'<"_0
%f"VtBrJ!JT\;CKR0333j"F''UTGdrpjdt5(Ue.LU[2b3M35Lnbl)B*0l^f/<WFD>M&oJ;UXrEplD!$E_$m84iQd/oaBDWoE9DYNo
%(sF*.H1QBThDc1n*7f6EoAsrO9RK<Eg^=/UPjo+L2"bCI:keYDO[%HeK[-/H;\d8^8[DT^MF[oa%alTJkj5Fo)$r.DIgq+eIDTL0
%3(i"#Yb>C67E\Rcm>2%+&q&iXmb=lpDPC5prKBV(XmlAE[kj;,iclCsC?q80hR3n<9;FY"pdNF4Q,qV</8=(O0Wan,<CJrQ*BU*_
%@$u7o3k,"I!Y8d:7mk-N>V7?^@V0s*5eaXNjUO"hQ5ipo']e/@T;T0D>k=%LATJEqFjYm:SVe2hUMWt>$p;&"nfXuC<qNGnWpn]A
%4HW0^00Rc)@n`+lTh7#&%U)mm(nTY0-C$!5U$&:LjG7Ik"LO&:YI$hrmV`0CCf3gcAC!iS<SRoH/O&,GUho]Fh4Ds>A#J%(:T&+"
%CPS7WP*;t^M)$9b>1iOTSihlXkBUh!)J>0Z:^U"&oBpJpMMH,tWPLY_/sR'"/E4+?`=jgkd.LOiah=1sij?%;Cf/S[3G6f3KM^e8
%SV-:P4H_2S2^%-C%XCtAm"uI>N0ml4,21GU3G?;7JCoKbCG_#9N-]i;HctFK7j_Eb;/Y+>BT_F3PTj18$q4'B\HOQlQ_VDgAeAkO
%WW(Iqb<ohRli`-NPj(bn7aW?=Z-24T<i,Bl!GL%t<,>V3;3JoIWm[\@&>8km1=af>_S6^S"sTG0%2Kd?fm.<[kBQ6nV<sADP_6\;
%B+4mlf0bt2,5OG@*<M."b]rahqB:YW$\!TH5BV9]l>U3%S-!UH6=urC20-2m,al)qd5Jkte%p[*"N=RgBGVVLC2IO`gn1,bYgD$?
%$*k\*c5fcb.:5Hl5p<)]iJCB>_CS^\:@Vk(TL(1)W!4Jd(4=!c-:ElhE'R>N4RZ"cW^%?K$Y\aI\`ZGcWI#:V"kfaI5TB%Gn1/`\
%;Kf:HL+m'G[TnEB#Y$YK&0j@?=I#s]Zq7e%Ys7#-b9]d+;<+Z3f)Uub,5glX2cN\<>qscf<lOifr*6'?FZj9#-r:SXg)pj)XBgNZ
%NLK+:DA5Qb&1Yd=M#+D1n/BRp1K4I>LDL+##,-LV8f)#1AH=->Gn3TuiJ!'.RM`eEU?.!)o[jWI5PF?$1H'jeL:Co+51"h?BOup[
%E8U_)FH(itTiL2S<26\#OuG.525EkV3)cjrQ'e43L>AtR="UH/PGTN1W<`i7Y"<PUjtTAaOgYC^01K+JlDST4J09X3U!bBb;Jkut
%@*Qk.`2qTKO,hVh5Vh"(bi?](K4Q`.`JtPu8LdrUS]0ru0'8>fG#2H2bNp&n"gc>&H;#r0k`)8WQA!8`RL6?Afl1e4"8!dRqG[^C
%+G<3bBDCc1L%ctX8$L45E(m-BA&p-?>i(DDo5!tS91>(kll],WWWFfW37PA%:th8+-)[?oTSIKd&pm.]o%Gk/5i\hb1#isG*Q?Fa
%=$\Tg^I[X9`(,dVjF@Gb>UcK"*g6RD?SGc=hASh'6-_dqd6g9I-t--6*GTbmCU!pICQZ4#P\!iScg6hOp8h>D\s,[=.Qu%>X_PD'
%quqkWSPj1sLHg>BF_Ck7Y<l(5E:8<W;qi^tQ\A\RneN*coY'ko6P]i/5rD^cCos9M1^RHA@hKU1>PRpo&.+W2GRJO#j-DTZ49##X
%$V_oJ"g".l5*F>%%IYs,ruu(.do^3Y:tS!'W5CUAS5;WWQ45b^(@6I)"quj1'YrXF_WKUFs%J,s_LK@C:4sF\"ndsLF?8]SGL1VQ
%Qoa.V?7LiR'OWnWSXqYoP?G7>ea<FR945r0305.AnL>^iiI"8S4^#%Ci>C4tT`XNT%[^u`Qon8kdD(9@?r)B4%=qqRH>SWm+h-=#
%5b(0(rn6gQC;c"i396.$PBu^SnJJZZ`(/IY\r$9.bK$Ks4L6sL.&gYc,W,YN*u$HhJe]M5.?<Rn[0ot1.U!CFUYm#[)Qg'TYh-=.
%F)-<gCR]ADJ]'T)D1>'\>bi!kU$C2/,1lp*e=DLlc^p&k?qtD,8l-7b&T:g!WnZnT4Y,s7*o9XXr=h\7C0_"s8p039A!lmUMPfOf
%LC+K#mUAT\/&gNUbc:su0lf-n3uikIZ:6J*kU7-^N%S6WFeU'$Ob&fr[c1u2?4U=T.*(qTEMk2cS:Y!Fc])Dhf_YFda6+%O&QhID
%/'^RaUo;f4WDu_";RKJbc^(HBio=^g;G&Dg$["cO.enS.pquK<,b8,W#jEL+cO2sPEddd]d7&%Gi<)sWWYMh8A-9b(e9#Jc's/ZB
%mF(('/9EjGlKh-P!OH5*Nh"ijjT;A7DgB-U`gHI8a\Iaj$&i=@W!IW9f[QcZ(NRA8Tnc.Thujb7ZnQb,mtm)l$O0G*mTW[jNSi&!
%W[<l49nn!SO:(oLrC)N?G]u4P21oq9#?4UTQT\9OmIUR7=l_(>j#^'Q.n<:(,T472?@@qPDfoA#(@/kJ0(u-;luUP'@-NQ%)n4-$
%O^G_ddYY&-cZU",bs"e)VWst6']1p4^5INbTcliVMM+J<=dD$ROd*,<k[Zpl_?nL/XN'VZ6\QCJSdoe):OrFE'359]"]38j7>TZ&
%MSj\:>@gGW_MLuHP\C^=Po<k>A`-,%7:U)o;/8sS=@nrR\]R7C]udEsp>f5%`b^Cn%lY47(Ep)2-TM*sC(N0:Yboi-:'dfGKfpg_
%ALjhd>8@mt[332R>(Q\$[LWXgXobr.Pc$%u"rqpq!G5AP/?7s]2<Tfa_/LgTI;)/7'Ed/IWF;Qq&"dhn&Z?[p:7;-`;2G>:.&>7.
%@;@Ps&c[(!3C3'f-0j"MLN0#>W6PD3LtDic`J\m&L2%4ul9dG'+clJ;@MH)mjQo?[qW%Z,_(NMT%_&9*lpn&t1`*HQFFXIt]J3J2
%U=d.+6L!Dg4gS-bf:H-.h8WBU(u;Gc_\',kc2o]C1e.P00UjG9"hXi%P\4*r$7h%(O@gR$U9o)Cd0JuWDJX9&YuO9=+mQN]Z&S#N
%)riL_5QiVq^fAK\Z8aN@q8@Qeo8@6GQmjIB[>uJLhO?a9#@j`n@=[Z?pBNP<,L>4V5/j3Xr6jO5#R+<AB-!/TH#V=P3CXJn7GiBs
%i-s0A<M\r'PmLh]8Nhu7)k_i3O,F3;a@^)W+@>CmkZ+0H!/%,Y+U:CNRZ$gl.PQS!?Imc90F0+/,D%QL7=&V_\EfFbS7HCT.,u`]
%Bahk[.fE(V<G\tB0m2[+/@p5(]RQL,Hkd/dCDeKsQd+%a^\DCDk@N2Dr0*[fAnU\"]iB47T/aUbWY-okTb6.>j9uO<:_(Y.HY\MK
%KZp1SjIko(`GX0m4,YLQFh=BJeXS,ETr)0;!5d+`(hi'$T/`\rC06\h@1X&nmT%Y)'+%'-W%V_=r3^je<-_]n1S((ZW0Rm!3;59W
%KQlQ&)\C#Q@T!cCV-qNe!E<bSrd8`_K,VG8KGnlrAmg/%"BZ*a!l_E&8o9d_!B]b!:u">?\(Cjd=9[GZYDkqEbj*qg-k4/WVlnhU
%5SscTUMF:<'Uli?7]Ss,KG:(OE@2+5Js0=]aG1l%h!R/2SSD9TO,LNJTi\B+0:1<n6Jg[50>o?3@FQQ>6floM8dCl*>M$sX2Z!D$
%b:Xds^d;bLpCu-hSn'ea+RUO=[/4rl_gU\EG1aJ6f7,h^.+PWEqG7Dak6FrbMbeNR7_L_OArn]c10m<g[l@oKS;ucBM+'CHNQn9Z
%aIK,N%(@#eT;]V2l4DK>_jb1`Y60oi;,4$h76n(ec$lD>q5YaA<SoV,Xi*URi`6S41t]SH@.PA#C/T[KD6f!NB9oh*fn`(AYKsp;
%PE8448*`?a4nA<0k/pAU0=%ZsCFt\,k>Hkm;,@a=l5Pk7+iu3=.cD679$:U?Dl)m^=&tMpGqGLO8&nnu?3H)7c:):*k'so]A,A5S
%lWDpu.KUWt5\d<G8/9+>AdB)[p)&LNG=9U#<E4QFJ`Nl7BND#rKI`_9DMi$Ln=9:t?j8Iq`C9WSfsWSRC0Vq-$A!T&"&K"g<G)o`
%=R+S/bh1JPQ;cJYlL"_R_B#iB's'7XM-\>k,mPst9)];#$E<1n(@p-"bcM^'+)B^=@=p+qMO(h;:Vf\o#a%3!586K^<"1]IIrfDP
%:;\rCCN5SoWdO[J,8Yu@p<gcnp!u,QS!QDI%UO]d"pCjW$SA"kaeEWIZ#4/'cIcEnBJ=_&O@bGu!Z!O<]e[8G(Vh%Jb,R^s#<=&O
%#IVmprtGCQfpuEWcD#It"-D]?U?:lkPk'0kYHi'4#/iCdB)?-a^-jW4dVaZ&9a/phV^e_o.A)g5qB3e*Y]qDZ![))pbLfIo$#L0H
%6?OB_jq-YQg0q#;>=<1#V(BuU!L8UY&Eq0&AYGSlUdD%oC]2K%h-.\o!bjtL@S"]R)$dC..%IsDnD&m_p;CR.e@).*.r)*l8qiYr
%lMR.-\/5+f&4q[fmY[a:.Pmh@>$qHl6!_c"OW6-qKETM]c0jJG`?:,E+U7Tc/5'5"Y6I8*'EH1`L.1L_`tEqK$%t22ECBXdZ1hYt
%BMoh;(eI9=)%)\r^2TOegr_6p$"m3/.qFCI'*KZiAPpU)i>LpVk9WASWeR*+3f9Q-U2iIRLEEO&Cq+`)E]l<!5!,Mi!>6@SYANg0
%6srieG\*Oo"f_ra6=1E=!YTnr:F!#9i0T!k$'7S%[6UG(b/6K2c)*bY:hO`LFVqb'g)9f.3=p8#<aTsK1OS>nfNabNf,+%eA19+L
%1ps@-K%DZ4*0YNC=L3/lb\5]31q%tk"JVs-b/`tH0LVP=+c@do;VDCB",a0/1^&rEk](Y7.LeHr2TD9;,OSm'RQYpDV@mm(:!l<[
%*qjZ\O9ohGj[*(/XqoPfD`SYd*a`eb&l'#PT3C1`eb[Y0&&MmO2)>>L*25:M)=a0bf-CY;DHt-dUR3^BCM5mK?+hW+KK#WN_;<mE
%0Gm`B-N)=B@UdmfjPYQ@Y$;$=.Qs2b*<W:n?$PNN=U]VXk8L'q3$d"3\^rkM_q72_X"PJol4g[JP/`E5M&rCQi<*iU%<IJqQ5WK/
%R).E"E0`Dn7sZkfk_0:uLGt&8<Ke5FTTdSK?^_^lm7K&<KJg\m_i(@!D'OR"QB#m(\i>^$X*YoRW*<!&W^iem[6>30bbrpbU=7Ch
%LXa\$.p6:L;>+Q\/[$XQ;N%h\1Y/=*VT^j=$?LF&/N(-OO6N%j5'WD?]cIQIW&(f3+aYZ<?+`"sWHkKc?/1c]if9K(rosq%En'N&
%#I8kY2DqgNXUhg-5msDM'_iU+G_J3s[/d%U-:5q8lq_X3Mu'a;bK)Di)(#/B/fq]XIj=b7_Hk]>d6WAR'r`:LRc#>aaM)tnY@B3.
%JJ,g8CkBmdO:,'?(Ah..=s>So@B5!&P+1s(M=Og^jP7Y/+H4b@cD&)c0i`FP-fOP5d0I(ZXUu#t\oHbQ,o-;BB&$89fNBD#OuO5`
%UG0t#2T_09el:<.4S?8;E&bdaX\kD<O>6rT'[7^WGe)n22>'P**M=]QX\fj)In4J288-9EFJCcQ@0E`0kngR:-3^bXSF;TaN<0\^
%>H^L@@_$\:UT/!Rle`((cC60j_=_YR5-Smr4]i3(4:S:j.Ga%-ZWC#:n>!9U<JQEgRJX-B.f%%5@':l!XC9K*MHdVCp9>#.6>31C
%R,"]n!]5[(n1)MDP-uP\Lt8,)'8eOZC/7J%g_n@5D,j:S<6T!oa&CBhb0REt8$kb+=;HNFKJ16FM(-0/.<M[SEhAZ_ToChEVH%n'
%[V?[2o,NYmBHF%BC::A=P[n1J!9)JDM/#kHeg^O'/X$um562g'^<SZrkY=u;"A['E4mL/6^Gf$TTr$b#;g&7CYppG&8P&G-OpNk-
%:i,De5B^RPEmpja4Hbpp]/q5]dkRn9Ym%r61]j/EG`K%??b?dLkSiD?]R^PU#B_3O1qeZ#\[(S"]N'/&"6ulYYc;)][PGs]"H`C/
%,%!O(8HiG1HO&(#QaV+[OrRQ//Z04+a@-Xc!OR9WR_roF4.8&,ind1ujq/C))AW!Y-Tu]S9i^ui7#md5Gd["\:Bl,r2&0u*dgMjA
%OB!&?!_IKc1TIjK,'$j%e;NbCf5S`=hoSXb49W]7:4FUD$H`EAb"kl(R-GVn`JBdnC[(*Pd!P7_LnLC5m/>KTqXN?O"#eb;QCG85
%(+b*5[qu-4UJaPoLK2HOJ'[fL:tu5!n#0qaBE'QaScX/QI-4a;9i4,K>XN$e2*ib]]t34G^G64B!oe6%R;*@n+*kW&=OB)k"gTF>
%P,S<'V]JM.iMj%b+Z<c7bXY"m+X_$d_S'e(e@[;8"hTg`b&1(=\'XM#)R7eNW>El9<WVe@&94jTmn[q"#/or[[q&l<-ZI^1JT=\U
%`^*P;8Z,HSSK;nr/rYHTdqV?rHn2Vj=kK&c)NBoVS"N#\n`XKt$5m7h0+a'7"/5LTH];j!V"asJp@gVn$5,da@i>7V[mf^$JjBcr
%A`EH;e-"P'BL9fTq(MneoH!"\.XDa0_If&D^//6si$23s8(g._A<#ul:o]4<%gHRkc')<8NdKrU0K:`?HBoH!O4:X%rlPrp6>r9,
%9-m2u?h\*pH:dnd_!lB=*8%#?!h`FYU\tMLR4Z#!n$<@No1brNU-6!nXB#?PK?MU&fq7k?:Kqj&`\)@RG]:fg(Y2Z[FH4&]Z%Hte
%Y*36:c,bXjKd^jG,]o5XIQ6g_qDh8'k\I8K(F"Y?14$`td2>6QY+-i7,3-"U8XY]%fS/$XhN#^r),^f:Z&bYBLSqm0@o8?+pWfpf
%oA+aoB'rZM=%%iA?sC9Ho6@u%d!L!^"2'G("ZFT%._rpo3<13bY2.T#qt:t1g2a4([p*m+<Duq9</>%u=*S0?iQ#"j#F7rQJqN%,
%\TT"3\td!VPA^)EBldc"-_a]&#:\rO8,hFm22N>@Q,L2l/Kc*&IH=`-.gk$[\JeZJK4$m.>a)BBk?go6D]c:Vp]S$q`fF[3Wq?M/
%Er'%[PjDhiDg17<_#.r\m@$ish";0KOU!:e%3@-33.MeX/Eq7'6%YHS$a+NWHg=6)fXMS)=P4:F3+?XK,JOmeR$eA>%P/'@*=q/Z
%Qk3pTbJ\uO_nj`.9+F%C7qp5Gk+_<VRnh28/Rap7Q@E#4Z?fBV]T6i2SER$DB9!1E@t90I%5ae]<,p!ME0qR8']j$6&hrhD6R7Gc
%26[ktClK1n@e?d"T(0pg/#+BR0-Q%t@tZ'ZqAZQV&^)@QI77ik\oZi_lE<^i'9;@Rf#rBla'L,\DR&LChDHl;?^\#`4+fFBN<rp@
%Y%l[FRI$,4V!f&>"XAGmBS7BEWBV"j.<0,-r@ilDroWA8f5$CHP9tT'Vg5W$o_]q'M?E`Q*b8Z6f_#bHntQQZ[R#6;K^STH;oL'%
%#W!>!&jq^"%.W\mb0+>DU^SqQ1ae0+agFLme=DXr;9d<pNjNW82*NK@,W>66P0'!!7L&_hE(f;!@s:Pj#'I(I1Uqn,^E]SXL(VS:
%_Rkm0"BeZ$B*LMW7<bgD'-Tp#;*P'ng!r5A@Q6o\mdbkucY].@jstYQ2$eG'!l4e_c>3fh1cs>b(1V.@LUs]uEGKgh(!7Oi>mOI^
%D"fph2mO5Xf3*s_SocVo*DaHoD2#.Q8BCt)F,aF6?(?^To/b,?kh>s1s2H)DQm1]b=u>-A7<ER<c=F=YZbuS@X\=0R([N_n!aq&/
%ND_"G2#1CLSlj]VVK]T?LJ>]78[U7eaVhUJR&4KOfH3TcoPr"OQ0-TWcWqdMlTa/A\RX"1Y3GS,=&FHfoW!WH:<<<dUVgkM)R%NA
%Ou_UApL17"F,Qkg7=.7G$t.GNZZc<T^`J`@TM-Jdmk^M('?S#_\;ZG"Ze,WFPs\1g!<aa*H(jY2d`K5?"A(RWiXqe8S`@@,Au1Bq
%4HdSMflp$ThT)0rBP-;lmWKMF]]],s2PE8Re]t.lhGsa*h.-U[HstpsdK7`MeT#,p>P_i>F]YD91WbG7=hX/MTfr&4I#lg4HIZ3I
%+o7L6rlPDE&7ssrLc\J9Qb<_KP@@\khsdc)ZW:Y_[HI2+Z'aNVJ:oqVYilYs.Ug!-?<Zktoc?VmBCQ@upKZZEH%Y=]E6]\UW6,if
%S^+(n?uj5)Jk^Yr0/J;Mf.s3)B-#]#h3Ck'4H#D990oD[X9YF0feG8p:`'0'7]u011;o6.?S\&-d65R#+#?hiR8$k^A-8HlDh7&A
%/#1E8:u>?Qdr4o$B>2Nq9TS$#+_geg_:;*3T@Hr<QGN/@WZ:a]od#<%'[.T^<KlU>Id%0c:a>]U#%)8r_j"2t+T;STnP*Pu>rDDb
%A8s044Tsa+GR(:c]igd!^='Fhi@NOD@gOjj>X8<acj\I_KHd4OAtVp><R07#hK]K90Zc-/#Z"5h5q5<j;#o/cF`O4[G\ph$"EFnn
%XMqm>g#k!Eo%HD(;_fW^Y=(t&30[(kMnd%$#pAR_pP@XTkc\S%qFJ01dIS?H"eX27^Y_euijm7QR[pgRQJkE.^^<DN&bYQJ]4rtG
%MG23.n^aNmP7I2sObR(YL1sG!q%'A`kPr;k$#%d"3pU`FR(h/dDg9GOHm^,0eMrB8J*"!J"PB9MrE`!^KsM@FZb*T>LRT_l%Gr$>
%nU_9f\l_L*14XCiC=lZN`>RF;r*RHAYf,l1]NYBCYE2B$#1I`Cg\MqPQut^)Q4@][?4NLRiQ\BrB/"'M-3I<XT66b$]V_sVnOnB1
%p-q/j[/msPpm9_Or-fX%Q(gLpa.km3)"hn+9B0;<>?=s!C666OZ:4J/NpHe!4mG3e-Um`d,9-QEA^cIB!r_/A]X(sZqa*$@5BKd9
%;)XqU!_Z)*qfD!A5.4X3PjL*(KH;F]M!2E%*+JFZ\"in5]R>L%0o2K?ZI37MWW1Q;O2Cbj6i],c>;3a4W1KfVm6.]R]@$Hs7?XW;
%^_;*XC&KUH:P9/Jn??e+2.tSYfNd=IPt!YPfH"`[KL3Ors6'8:=HT?.p=IM]iOO.LMK)[!&<'Z4A!h(jDn>DIHjqnF>.A2"r3lpp
%lX08YaT9A$[DUa1LAPVD?.8(KAJi[SG@)F5Oo)p+Q",2'P9RXY7Hsp9>?tcEc(PbKkmI_V9i"c8KIGpk3Khn6BH>qEV9m$Nl!j>d
%2>\AYNS$sP$_,_=or`_1iRO>:jjmrroQk+UHHFf'QWAI/\s49gQqI#QitO8#(:<KB,E1XQ<1ana".MV&)T+hJ,Et=86jfqK0)`ku
%ka2%LDLt^9'8HQU%iGIh8Sjgje`&"7DelKQ_*810RjO4i\4%#i2$#7Y',bXUEm->r#H&@7W;4_85>LNgE.jEJo#I``37Kuj&+3md
%oT,g/N:6:$MsJ_'FtS5i9'ND^/*ugU?e'&1]?7>f<Sf,94Z]JJ63)X7TRp0ua[$gtoAI%4FLIt:]27!\q*qaY]*?SF0aC2QN2l;&
%BD/At2teh60S7/)]?W\@cRq\Hi+FQL1aqQLR=kPH(_G3;[bcNG.#\=BNUp^n"Ae\c,jqkKlTEP\[Sgr*KT=UK<Jk'Y@5Q8g\D'N-
%?NK%\H-Btab:eYj+S0]rPp=&iB%W;%FIU7aeH$UD/]'r)`o'L&5nU*^qR4:M@$6bi*m3^scQ]\N<2Qf"4TUC@l/JioD(ntL)KI0D
%Sp*mM$%5!`:@MD@/O5%dc@bFD--70KB.)Lh]9YP8aDC>^+F-7F5WbWjHa_3#j$0']C=i:+fbqWP5Z!G)0"46]H&"-,KW/p`a(C;A
%_PMYR3d,+r)>ckb`d@n>T_e8;qJ@Go=7V4))aRN;04HBFX/ouLF/taSMRLG>`,59-i[b>Y[CDhakgt'c.Y=]X?sm#_Ti%[2f])0R
%N@Du,`Zt[uVIW181QDntE:I_t>tk)1rf:o)b^I,YG)?*4'-9L3\=^;oL82-9,>4CA0%GsF?Hai)M&Ee".k,0iYe.>,E$(^Zq(S^M
%*87NjfgpM%SB9T56A?:IFDNU?/!S6G_Z#;m^R<7ipE*"ll.BD?$X\EDI9;/%DZD!4KYN$Pho?dLO[HV:.Xu6k>b,nF#c_'RQ:!3\
%juUjY6KI_`O,AqmdMYOhK8SMVCYGal@Xa]je:HRsesWDD3m/]D0&coo(#D_1gcuM-eU6<nE[A?T1t<o\KEYJ:GJIU4jYP&-9`Ep?
%%`VR@PPQYq#=24GABX%hboql7bkU`kXr&^<7FS:i#;Nr<nE_Ee>>%a7]'6;UaT3Wh*g*L;mm%QEqXGh8,L!dK/X<2--/Fa3.!WR<
%"%7K=&fmYX(o7YuP'u)ah2h-glT[jfGEr:K6!;AGrA16cLFF#1NZ`Q`.Af4+gn_mYAE*m=/TS4f0?k..%UYTL;(3"0Y\$Is<@tX5
%e+=^BI13mlX?"7_RSW0SHk(dP$]>+jbauR`L;B4jg(^J9gO':#,ucs;asN/ohO^06*gQ-7Wc2tbM*$XajVc/E-7be>>`S0;^Y[5X
%Jq]`=Fns$sM"7GF3Eal=J\G^XH4ICL!'d2fX9A79=luO9g30@rUOeWuEb8ks@]pmgPAP2s^#]HDqo83:Kc9Sa)W),I(q45nJPdI:
%pPE%mPu0bFG:nrJ[V<X\BtS[8%SP'JB(0;&qC'.>6j9-fCj.jJrodFJ=2pd"7KIF5Y&@[UeS`!bVr$<<(&=\<(#Dr6AD>Dre98.J
%XRGo\oBWT=G58(q0Y44RYhc/cIZ+6T\iO)&kh:,-BTD^ik[qOMTeMhP4!/rZFHJP<Ge:+/%4eIc_R,NMNP\!O7L`@i1L(7eD7;\V
%J3;;NEE5GA7]&o9aJ`p'4::O%eGXEOU$9ZUTe#!Tk*U"];n/n%k2VI6IUkAeS\7Gj.n!fX=X#hVZSf3@")NV<oG;$P.,1:!%obAf
%dOQd'+TZ(^i`^,kkX=XaDDMF.SH6`m1_tW='[D,R^@8)*?8?;[q^mejHpH8*k*PA1WV3,qpZ%)hfrpWuIR,3N9L7iS4L)5pV\Mr8
%YQU/OEkLp#<RH*C"H[?ue+RZ'Ru,^T)'sLanWC505*BKpkq^&sd9"Lf>rr[#J=6+Cl\)[YjR*1,^u`K=JYkhH[DT?OOD'0:*iK(?
%JaSn#&$#DLo%E1Sk=-LI^=^!pOab,8@R"*=dhUDL$ZF&tcRB&CU[HIAF`Io/h.,S2C#kQZLAHK[lsMtqmr'^g%@F"&SQ\<,n7J8e
%S6Jk80lQ+RJe51'IK0W9&J?H$]kj;045'O@r60'Gg5`hCPo\2!e<0i/*iU>U?DX*l7uhg:Y:p]*ouDQYfWh"4)R%;2.*7rP#gLGe
%qss66e&E/Ti(d#K2i_A\en"YNV@]m9V`f-;9#_,(1-D]*oh6SA\so26%WJ)lGM#0OI*-?bECKc:U)DnmXJpt_aaV$r_V&=l%00Hf
%7^+U:\SGZL"/9XC3c-?%JDB%_&rZQ*a4VG0$Y@3_<JMl<R7GL!U-&`=re(slbO?*l]Q2Wo54S_ohh&"n,dbJQg=+#``9+Lk5ksWF
%6mb0]AEWej[=^d3a`N+<d;KRN!FKDe#7[t^LT5rBSm((C-Z`;@-5aVt>i5Q^qe-.Qf$_oS^k-LZjGG_De#@uTaJ/kXC-VYBcRo8Z
%g'W:"05jcH(png@r*)Q_-VmoaZ[jOrN!F^W-QiJ0!j3GAo5,p`]&ImfU@^B4>kP""M/+H\'4d7fhEe7#D]N*[KQaiS9B5O`o*U<<
%S`Ls:'#`"T8*[dje!Fe$HTERiZZ?g^RX)-sHr/p@DsG#8UGF;?e2kAGS1-o62>0HDMGH-gVJS9h)2j,Rb5s&a&g.RPnni<JJWLd^
%$NITDE>*h+bO./9W-O7+`kL:cr[Uth4=6c?jDo;@/UnNSn91YeJCK%*Ks%tYD-EsgCMNOp6`6$X,DNRgi$3&@5OVl;:)I"_aa2[3
%E[pM,nnOuU&?YMpnVL=51ZSXZ_NMY:%acVn=^itu.G7F'9bUA"W4NHHpjmG8'u+7"`j62H-o8o,XKR]<Wr@%"VQ;#A#s?#(Q%t*K
%K\hV4UnFN`MWn#`5n0oarlL?>F;D(`C\?#+"@Y+f0uC6Yn7$Oo$5i_fbWqt&earO5n(3&Q/cKE@W"6`@Gl$YH7.&b=idh$FR=Iu4
%mjPG=:Y\`tptKICrHR=@UdmW)T,(o4ok6gu8'2QiQ##EdL#Fg+prl^r<)MT3Q[G@uAgoK4T9&>h]CHHb*01KH*V*WfVnaPKe?62H
%N4jc:T3R,Oi.oSaEW:)IDeKX)Vd\H"#<1HuBe?e5Y/##fX^D$o0!gMRJ<_:V)fkuo1KMg/$8Y<q-/7Uc']*6uUUZ_7_A/>LdC3Xh
%-)W9a-_LafIX5.D+$?"_*41m_X3O!,U5<i;;a\Tp"G@N/&p#F_O&L01D6\o,I(^TRh+?*.9eY>Sqhi5Vd+-5#d0kFo@N&4o%qC9,
%'ZJ/F2*OPH"W/Z9GURJ:=?B0<;=cOT)m1s<@a(jjh?5Ea\0NIB>)K2RELP>@"*pR/>MskQDRRdq$Q<+&%/]co0"+l@BT3&O_(n9>
%NV\lCmcQBgrDDE$TEWKA48._TK*+SajUKG<qM%+^WcEG.!KJ-p(s9+gc>e*/J<=pW;Lk=M;FU1Z^mkjK7OpDj`e6XE7(=80/[jDe
%#2RJEj40&%Z2N<!G/VtMUJHB>?Ao-B\gs;KNl)6c.2:HMY\CIdWA=.'%RZ^>K:ISoG;YNpX$9'rE0mpc(hM?nLBrt<.*fBt-liRL
%\DE*7;q=8ZhipIqYVHl$NlkTtaRP.7o2eP[Xs6H2@kN=*C<%j=O:7E6[(ee0:hUrfh8FjFd4=_uCS[PqUAo5$F7h6rb`-mTEF"0A
%`#`b]I?r!Er@[)I-msi?cGVp9G^i17+?d:lcciA6\=C*%UM=P^60plr4p_BX]I+ePT<)]/4!PL!fNsn71:$B+Z6k-/=\nQ[B80qR
%&V@gF:GbVUbi=n#./&c"%grI)gQ4>H<kCOZs'm:(eP?@RU(Gk<nnO#qVSY,5I2c;Y`&j9Y`Mc[7&_OI>8b=fc%@+e5_q?+FdNCNp
%GJp_IiB/F14HXHpO"/Z`R9())MDD_@Sj<!TijgIMiSKl$NW?MC=I51VG)]2YW%%5[Nmbki_&:g'Eptb7\5om@AgO-.ml7f`W*<Yp
%5%pes$7[nHVV4(PHgFRGS0AOi=<^TREF<ek-s[YaruE0]*C>\HUoKAOlRIB=.T'<+S<?b4<P[ZjG(u&l9$=\5X$NDc7X!**b1Ka$
%>h"80Eq:9Yb)e_9<,E?.W5GmTSb8E!Mp?^9M&u!S>LuILVVVKZFeLN,iTY>ae7g:g,DiEq2mMQLp%:dU,!Ka.2Ck*L<:20bkrIXJ
%#/<I^!Q("^+9Tea_SH>:"KOkn,(!L8D\eX?&ghGCQl&.aq#`d)R3f:;m#kRt*-HSPFe:/tBttckPFnmE<Y9M'1I\DX\Uo=nTWCEh
%\j^WBN]RK1/6pq=MBd>-#SF.(fKB-49F;n"9t5k_.,s1M"I0013I8BBKq?PTkDjj+^,3.Y/+gDb"VYiC1rUs,Lo5h0N<N\iKaT8A
%nUa65h(2)E>bPphnQ%!X-R:meL^pidnP[qST^-aA22*L+C-,ifdKGSC9Tc:U1\&&"hh+ja:`-Ar<q-B4![sC&YQWZ%Aa@kl;+OmX
%Tink41(U](?1B[6R2XO[U=V8"jHT:)KhaE-H(RTE`rRrsGjD+dc_65(^&uS6etQi#3<Dnk0QU;2QgMf[`V<9Jn>c893=Uo>c^Q7?
%'0AP3*\@e4;GKY'=V83"mY(PDAD_QH)D#jqDK]nuRSV'T^aAt&TJ`u4_R<J@nZlg`oTu5^To))+]E/^OX;uN0+g,.6<CHgGcreSe
%I7-T\<WQqYLj5BYJbMIT!otp3T/\Yg0s@ej'HJ?B7m;N-1CFg[ab$b*9ZZcm,4O,&he2<3F"T5k\>t'k,gjr90Jjnh?p(Ek/Q;mR
%CqM=%iS`VCB.h1M\Dlk%?Gmo>Y40Gg?!Cn3[Wn??.r5WXK5[<ON[-7P<(pfal6a.*n!CY(K<pM"5=J,^YJoGCAY0HfmO'KL?J5no
%]$m>FD\=/Z0L)F+`dT!:7!hY[kR%`f>M%1TVik\<:9TsAb"9.V=c(KM.KuVndV<kjX:9*g)q-hglKU<hrlg-B73+nDfa^[uBk05k
%*_E:O;=?HgDr+ip<F2li`#cb&.Ch?h:B]H6g9'Fak',)`$+#ecPun.=#f/_-kX<=>&kLfS@5O9ISt;S3!ce7_l$$qEN9`dD>pAIY
%K^)%G/Zp0L5p')F2MFHQ1rh9rW7`g-Td?pDJ_9J/:'@irl]VoFl:e^YDEAL&WiDm)'83)TWo[JD$4O"O]9h>09cFh6qU?_ncujfX
%:X=W+=`u[iVaGTMB&f9FLVMZ,<C1K@(d$$=o)9Lk`FKb"[`93ufgQ<SE64<sanLB3hrGZP&T:+MTLrTdU]jE\*B995@oJ_8HPu5?
%Q.^P\"X8.&?Grm3QA&?U4M/dWp%UKr3(PeSQGE_`E,6U63M'kI:q4-hQb'B$,R-EACQm%fqC5E/pnBZd5>OtD0T/<'gN(*mKYbt&
%At5u6BlntP<oTt`]NcbFLNtS"M)$UHggCbd8QIGqCdB^9;]8J'm;_Rb0)H")<nHO0T<`-OKY?+(3GmI4IFh)q\!8%/^D=Hl64gN3
%Afr=IU*GO#7R2L3gMK:Z+63Q`G7%b]H/L-aX<AHGX*@$^<#+dK,pRrNIR[XWi,RGc0tR>Lao(u_b4:$+Or8m*5Ucj&P>:pL-:]Zk
%DdT?e!<EF$`OXtLW7qAoA=!qBaEaY3i@R<;8BYqLqfGO8-$pb<o,^BAVORm^cE;s.6VYkkCh6Nu6iW1`*p*iZhJ@V-0s,gAr[\R,
%ZI=($pk<$Tcs.G>6"iGl]O(VT='[Q$q^"4AF'i@Z+>)[BQ!g<[##E,iYcU!65J@,8caP-PP>@fR%.Jl?9M>X$V43/X5;DVq'EZcf
%pc^UE:K;&cGdm8HekPOC;S($[JK9I]a_5_)Sa1M)+?RIgEUl<dktM9p"W2i]GuVZk%qRM+7BU;[%bT^NNJhhT=8N_*2<lRMMf/0#
%6@B",s'p_$)2<]Q+0&S"3$b(=RQJ^oYa'Bb@E]8$Z5/jU/?_qKnZ/m*'$7[o'$iukc<O)',]jeuCG?e\'3DVi#dqc,1<>#R_g,CA
%XKgajF@a2`g\*qk[rbO/@gMUKI4(XhJ^EF4H*b%;'O`6a"J6<+c!;l<hNNslG/@P,>tR=nNjN9j\Wjp2_63d[8FTCS8Q*]_+QE%6
%kQljOj";E/]&lM@,q[Wb!AN`r$'?AI&=Wo]b?n+jAlLR3_!9M5cOSmhJ,`?Gl+lkYBtB;^/WB4A5k-bl@mdI1X5Tn58f0-b*sfTm
%Q1&Mk%W$(TB[1kSaVN\#];UfN7F;S%\NB8#i3KQh70hFm:XJ9A5&'a/G]hMt`[&^U)PP,_n2\\0#R_b6jX9t>s1hbl#qP(B]YYr'
%)C'<U7=kc-O`\ON83m%\nAZ@l4Mi<q/<:C&/jM.<+mt$/M3S67#ul`+l%O39DnrOZnO47tf:1pVe<iJPgTSAU\c.:i4Zis3V\-B[
%8+p=!5+M0&[9DN55-t%-BoJlO(kR3gEn8;PKq;A(/sNJTXpBSi0<s<PL6hE%`Y&F#hhk!N_>s!F'Egh>]bVl%*!H)^*8upn&&clD
%Y66bNP+_IV!au4VrW/<R#EL"e#7;@"7%N30_!?fA)Q?Ie:(T=u:#r:2f[qW21;f(@8(_Z-&hO,0ee/Q8*]p79`4cKj'$VVV7Lk;f
%NSIQN&2#?1oc[;/bWpK0++omC5;1"-hn1r5&hYc_IabI+HCj;"8P/B!k3'&+_PbGUE]>!"Ikak_Q/^.FN(&Og4&"Nt.lo.97f,SQ
%E:4ukX"Dr,OAeCL%L5D"=rq/Tfq63qS72/"A"k!]4MN+JOZ;W8M=%-]Z$V^)$.hhn<Z]0_'m<b:p<(tE6upTr`bRd-"N[kB6dF*^
%n3=XL.QH#/CGkk2eSP\[\1r?-<kE7Fgb19[kM@MG+MrHr*j!>*jKb<R03dEJ3CnO[jcDZG8/XM@r%dr?`9NsjA4Jo72mf9(cT&7#
%iC0QlC5WZMa2XMNqqBo$=:Q<`DId5ha@#'<]M17Dh56FOE_#"%)?TFQflcdF*p`Hd=rIK`XjDG?jT>j"SL_F;#r/>.^n'Ss6Y/CQ
%IV>-o1CTO3C2A/MU8:XnVaL$bK+>C//-VD\47Tq/ogV^SC'\tT,&3m`[,rNrcJ\qB8UO0uP+Bj?9"hq,_gh805>_[?UN5FI%uOji
%^jM0T?X2)+(P;-B+,8qaB87_chstt2.-W8mXE0HKAdWfc+"cQ2mZa'PX4kHs@J*t#LDY2WD/*kIg3J**!=0hYEFojp&Z9PpDsVN%
%/%#:H!9[9*ag*(=H9pF*IH\*0=CEB<CZQLrHan4`=+#rIWZWT(#eP:!qI?MNkY-g1>n-VSjk.DuqjuQF;1o7I=;\'iieV$UB">8,
%i&Y9_o+aJX^CD/kiE._BQCdI(Xq&`%;%lk*[,A\e/\Kj'>9>O.MQ2A)`,XG<]E;YqB)h'iRbeH+""=l/2IiT@a>n,1Pcu5u^PL'!
%je/n]);t*'iHcfAdVD$Mq1JWN]RL)?QR[Qe-_B!jd=4X?4d]lAj+oK7"P*7\M.<C1&lWUJmEK+[<U37YTOpklc<SrnVV_PcX'f>5
%JjWeR&)bJW_QT*<1iJ=_+9If6:Ijti3+@sJ/#7G,'hrV`I(3,<&WW0s*OH&0Kkj><icJqH%?>8@9f3;k>"m3.nG7VdZ&d'@qi1`B
%&mO[#$YlHV+e)WJ+greC<MupQR%9r4K>.ejYo,lp@,pA.ZJsOjIDmF$PAW<]$&#O]nHh$TS,+%!.[F85R)c9O'Pp/U"pd7FLbSV2
%;)L_M@+pf9[H=USoe?Qs4FpL(!YG0toI8Kl=fL_c$1!,H63WX-9DDfnA)[ZYq8'GZ=:#i1+Qe[a!Z$;r<PdruTj_5Bh1fd%IcN&u
%VRUEm!.<*[AIQa`_D`ZAdMa\>*B;B`9M,'\bA@JWME/C^]sX%o4:&dP%/=C0JId26MpT`D`=aK3@V3Ger>*;aU1J.o:iSl]16\^q
%h*=G7VSD+B/J`4>`)0d/#oeF?\J$eSj?a+jQP,VN0e=9K=RY*["u3?&M0diI[erLB^Re.TM;9^Y?stU^5*sigbZ^@Q-"i1N&Y#+o
%(?B-I1?p+`'S@_%!c@7*(4WJ&?R9jnruYilLW2].@eAEI0rVIN`_fV7!'UE=IuP3)k-@rJc!_QjEN2u:q+%FX0FjaTRnlhZ<]^9\
%CoQ!L6q/=HJ:F>H'T?JK$70bYO,#F1($>MWnh\uAEW3uV!C?PN0:bD_+e,F?_Hc8uSe^o`&kTpa>k2m!W+WFsn^\*1CpQC/RK._h
%,*b3;(,s,R8=*6p&@>SJr;hT%[AHnD=/=Sp%T9QQ6lMRcKP),M>l0N)p\:I"_9g=7WOpYOc\rXACb`,h6I8%t5MB0.M)tR[!%+9L
%W_qSY2u+AfkH,c1ibiTBk?/2SiB<nos0<pP7R/dsIA">>;4;.f.rZKUIud(B8d68Kn>.Q&E+[:WMg16/obPH3_1p'M<)-8IS@\#K
%HjM%qmG?.;!gI6>k:#5U5>u/8T%$V"':q(l&i<Qo:NOc_qhX[qc)Z$PRRl7)Kt;3[W,[N,e'/.p%XNi'q%Wso64peGW@5jNn2(dH
%$/jXF:5uUTpO6G,73nAP&K'V#oT7fE'PMl%RL,$VYb\JFlT!\5/%#6fTY(q^ReVc@Z4$KM7nFT_0chWbZTKJbSf`S`$3+Q,qtCb-
%kIHkO#3Y;?%]%UOV`,7F`>70A2O"\$!Gda6$meE$r^mh,SB%1c-ifL/S6NI;G'Zu.B0o]5?e%8X0`;Tj)e::-)*o#W>+I=e"UR<c
%5dnV6[ld2#[KE$*RJ3sONWLQ<5PJN#"gSbSNLct]^9M-IA&.rS,foSEEFn9-8/e0B:ujI5a)Am/W"$uBC--M5mN8_V#A(Ic_?t[f
%jZTGtV)B@EO"9]Ylj0`Q6=\?T,GU/iUelbdKF>1?<nE:E//Q+1muhq5B<hAA`PeNM5J.ZuW*X#pe,T,F$SF"gB$TI\K>Cqgifp.`
%W:JacWP$@$Bh+R1>r]-9AA=6Snu-%6IL)FAATZ"`%S0c>-FBnWb!gmd?''<'>UBS/o>mK^WTL'6p6U&3dIqj!j$1R?8l<uYV:>m!
%A6h]q("fsk@CLD?_VW1;YG0$;RS%R(DUENZf`'NFguX8:/Tt;QqIH.<`Cp76+XrNnH2hlQC8t##08dS-/h,*pSLsF_+,e(N;+3O^
%lBc))[RKa0nT?[XmKed!Hsd&cnVPKi^ofZfi@6&iJ[ORk-"FM2i[o5N./q)Dm&-G77VR?@S7$<fUC?uMZ8bLW0;G\drPK%9S)VjY
%G>T\t<*9)=er<jfnJf[;"sUD8b+l7XkC[6Rg1%NDeUYNaRY3m?r?&86?1E>m>^%K.dfMXH3E%k?2R8/67AlLF%n!c4*+i34`Q]]m
%!"&VY=$9PWZT,"PHlV0Pj[;%+Mpf@\6X55d*ao$D_`W3\ZS?suj^iu.WibpU<*f6Yka<r50L#+6Ym/:$8lA=P@6HQjcD5$_OG@mG
%\[C6hJ$'Q:LF@;M_*Wu*NP\s\\S>m.j":q`*lR5EV5Z9o!\+6lD_$<k8$a>HJHHn'#I$.6C$:`NUf_NTSp$>noT9/'/Q\^a/eJjL
%>lKnXLh&3<oGc3V>D]:k>"QJ*I"]siTMm0bW)RGQiZ#kdCSdEJ"UV.E#>[^=b;GNVljA&WImi)3G5<S`W*1o?1JYWB1^jd3VVb,q
%KO?Nai/hZuZaDRT$^Md&IZZ.BF^g8=YA'^F6om`q+P*tP"`(hJB@#,5Rfa$@NRFc@bF.=.p#:M2\fY$B7%MD1DjtDK6p)-m!KGo_
%+)]&@Y)6)e.j\Vi!+4c!3b>'3=`QJT/h.j'k-q$+g-uPZP+'E6Q=]:Eh8K/c??2i+E=)kAFL6ddnt<3ui[^<^%jcFTeOXhQ2q*u3
%>(EN/r(K<e7NGTk,^.(*RI0JSKo+$oG,<!>PE1USWB)BGd$?"2'"9g98sZ3B?.!hP2X.*L>d7263,C0>Prf:.`-25t/cb4K_aU:(
%J)gYQ@F4VOiS8;a7t3^W]1r44MAh@<8>Z&]0LONd1kKfOI6UuR3HNX;U\)/DaG8d`L:@,_nP/OcP?#0Q>^W2riP(K0`lap>+b!Nr
%LRD+b$E^0_BhIK<:DEU?cAl%MK3!iSIHn-H>_?OlkZsZlZ%kU`C*9_4EY"T$haC2"6'H:$HfPAOqUk&V`7EtkoNQJi'6Rq<^ip?o
%g#UaV`GuZ.kEP2KS]AWj<PJ0,K=A=``Jgun8oYdo,1FD`3NV()Ap)^n3IQpS,Yn;ue4#fP"8,9Gk$;$61gYCr;HVVKic>P<n%!=]
%b.'J)%.jLJl#TW$&_u<p[iKA]Gu>\#Yjl1R)#F*l..gRTAf<BL/Rj0\`Q,WT`6"*C,a]oXUdO<hqE/P+^-CWHZ?%+&nhWO/:Lup$
%KNM8%"6::]ga[G+Ja%$iM;WL5b.Ld[cYTkkO6;6$p&goIbj5n`$g.(%J*WO8oK\oh<gW?Ik\LfN!\k>hT6g1UL+iE&kV7*I.)jBb
%*'_4hB_@n7^P.D4#C,:ZO2V0YCF'$&a_(PM_#@P]%'`9H6/AP;C#dM;_chVrH6-FJkrkHLJ8$g(TiL1V72)SJCJV+"8pDOC:gMr4
%Dk-R$0^\Z8^UMIecdN!>qf1q$0(AIuWEX't?ho=N%?'O:__uOab:c_6K+Iq.%$bRqp+ZJg$9/H4$_<nH\1)V!mJt6M&%u_[Acb*\
%h!ChY3^rh_l<5r%H["UP/.;_4q0&R)/35[<jSPIT6tC(DJC!%6X@g[EMhck1P:JbO%H.+q$>\K#c[t\/@"0k(\`SPY$!B6HGV>a\
%54K/-\bf(f0"G+YoaDe>Ft72abG"dAQTt^K(ouU<qn1?an`6NF_oVsZ!8m7NFC7Hj[pqt/jKXAtEK'[Q>F@2!Fuj52<B^OQg>hq$
%`1,aqTEgmPdM!>NLt$dtVDZs$A5A#p4(`,m$08mFJF:WVZgL!J7VG:#"(>#<S0iPi>%GOm5h[OB%;ORCa5A"YR.oo-q5VocX.8cG
%Z$ZZ`CAGTOq0S.t5keEVUjEQuNR-`+)]$;FJ#&'gSht%;$Q!BZ8p8r4Rgo#\.__caiQSkh'bg=^Co8^."j[`Q*V<KcN,)m'IJ`DP
%8gaYth:9//:u)!WY_"=:1-#=PaUlCQCg/rn">N903bP`<OgW+7,eWs-)m;f->fgU[Nt'l2argaZn&?;V-c'.lIYZ'Cs%3>'U-m1c
%J^t8]+pjc"AnT`pYu#!0i1cXLiTqMDs.@gLS36Pqk1FO]dW.cYLR-D@(4IZiQ]rh4o@!>-j[i-)JMG!ec.#.D%g>M"cVU/W!N2CL
%ZmJgf`D<G26.TOnbRI024n`sp.j0Wd<7W1oau)U!.6GCrN]4MLe&q1R=1hdDNe-`m/@k2;T8c7d49bl1dg#W5]4a8+ZM]Ic--J)/
%SpHR#1:Md7pL-FpH?!TCObAd@<nn8`Nj_qa)@e$!B#j([=s&Qm-V/kCJ4/jq7q`i@CRfB2qKW6cAP&I)#FS&q>]]d^H<sbG63LCH
%jeI[#%1q,6?ErSaTn\,EX/782_%cF?Xs40H?DT)8bW!9&gdm.@!BehIHkP8,)G,lg(XdVPa!L$9,uRU.UXk"SMB;;X3JdRUq[B>.
%:,.s2jkFZY36FL.Ql>e-Ga+1sbEf[G'(Vk/Ehm6`rDk!FD[<cf8=5f!1CG^f*YT)JFogIK,r:$?p;=s?ReQ4K_EG_m11MT-Rkl;7
%\]o8E)<EOgbT$!5-2dTm&X7DMO(fk/XWo5^UB1#OK,a87@YT\i5],m*<.a4sKd5,^AT;4=]PGQ5QCj1/:24s[_2>rLGtN8hIS+Y2
%=T?MoIq=H7<eCs;Serb!)A/hXh11gGor.pFRQBDMP7/k&%lG?TJ(9WT1gRDi5)8o4^nX/!h_/NHiJL2n=5s?G/P2lgkHr9($*acS
%!8R^BZL'NX^j.3D[F$DU']Hu@YQ:ASJ[??7DC-J%F<kZ4c;@4^6;7/\-0$J54Q"?Y82nRlR+cdu\?F6GC68TT!.-m(h!MH3[f05G
%#AC&G5gF9REHIsek5!MiV$Q*bAKF9AcC`+L-mB@m[^tKclCWqtR5UD5E;eq*E#!D1%$/tPV@Y.JHm7<[$7Adg_"N-tqspgL.iNtm
%QfbO2`LsdM8]\\;U$4+k%f-NBlUq?3b1J[f8rP5_9iH<]jGUfA7jcc8PUC*'-VZt6Tm,?j;=n8*!_F4Hq7AecBE@YVg=fR(Es0ph
%d%e#QA:T8REbLpHpB:&Y]tALd>Ug9L#&VSM6CR5p;+Xf63utDD]nu5\jZ%OWCTCk4G==63DX7`S]1-XsImp]^e,4k.oKGqBp:W-/
%VBI$bLAh7Uq@BF)-F!7)UX,_E:6%'^,!P!)@Z"m[_St@0q,E>A1UCr`GH;@%V)SL1-SK,I&R,7G%<PCqft!.sRr+H>%;FAVb4GJB
%Dj?2LbW7ghF3\6Z:CCIAZ/s1%IdW.$)kEM_e,=Z99BP03gXC[*7X\&MAPJf'[lgd#.rMFpc`/C^;u(I40KW%)J*G4TE',]R>_6b$
%W4uSl=-+QCqu/@G'b%dr"0=%KIk9Pcs#JN6R=8$:cI2"Ul+r8)<_;@-Fl0T,S]pfLWN'V^OFHPaO)9l(DUO!7l#D>2lA`_K81i>!
%%QO*22^=C@/#O*WM'\>h4FgR6MFsM+nQgm#qVE`9Jf=j>Uqah&"`@lAYpC6n6oYp!Qb96aJuOh^+$2kE<,rmtK^-I7i\W";YeBGA
%k6u%R;ZVFoNuhWC1nTNiWUWn$S%u\=;<KCco/b3FHpN_oeU`u(d?WkN.`<F\kAOjbG<[]!bS(Ninpje\eJ"d?e<Pt*qo9B,9Zs-h
%VK9hQg93pIW.ca6qaQr]BE=.W><sIh[<#KDG#g!Ii'duMbM**6Bdh=C]EQSk;n.p9iU=in;.f.?LH\be5W<PZI%Z=:gp0;B$8^^g
%mrfDO>4D]G$p=q?\R[W?RB?CR2JA)f\Wmf6aIFdk?Wn#NMoE(J'?qO(h"2#".Orh#?gDH4f`;tNE8gi+9t&*LRJg&Dfe$4J8p`-"
%!5%GWq\1,4HY`kLi%a2%Dcln9:P;-&42:+>]M@q2VeTC:li]B)B.]*ZSMiI]K^%'*'GfPY-`Kj27$13M0OU\TpK-_$H)_j++>HkP
%m!BBe%DsHX#B'\J%p2rRK*1upgM8+FL2\q>[JrU!]<T(^aI`d8ggsY\oN%3%/^AX=3KbtN+Kg-I\[t`Hg`\1OGY#-gQ#gWYH.;5<
%EcrrIr)E]/TFup`XFX4n,L)kV)Mcs8doGdo+X76bUf8<!U<0)ZH]IeKc+5_\\1N@)I,.EQdsfEMS_[6a!"B\b:D-3a2`N.2[57,Q
%B3ZW#6RH-ACYQ_JCkY2483QLk4\'l:Ht&-uj]d[m0sHZ9U?gXup7JoM7OHk>=L*'4itCqsDIeC.RKqe#+hrM%=!As!21G.:YLM9+
%pX"$sQI6JXnm:O4AkA]gDl^T-'Cf2/p55NVp,7pt4-o`pZc2gKV:XQJet$4p9)>=\K:`KnV>cB_rjD-Gp!VOICW*G<c)SMKB#%(I
%/g8g.FaMnhm[D]3\NnBVZ@5XQ1"U3@2Sl+:qBG\5Z2XbQZN.F7*F>U:;S<,Gipuas8&pFaZ(F,G^rIq,O:.Uc.d`7%k:X.%+U.qM
%HO@H=fh0c!Z(s5sJ2Mih`HCOV[R:CnR[bBuUT^NI7emEL34eWELY4A]2`UI>)-LWn2GT5so_pj<^[dJ_\]`BCe[hRf+MJP/Nq+`^
%ZD#(S7-XUK<o2`-c;Vn6ImI'jk?NW[':VZ%>l%@R+05+T\uX5G5(S#.Ta9gYA&"8!hf(j*p4#9*q#+;#A[^#jDRljkPGNP7Q-soL
%\&^)_R[rQnhY7Vl^ZSHJ=Mr/"]**kI71mjNXHB.m?F9em<?G9oB08i@-NJn5^ZM*+Rb&6b<oO=$1\CM0D_?HcUfo:7OE*ejH",KY
%Vo"H-^tQi]\CS)S6X.Mgi[N&Lh@p(_F[>6BfT"+rTB>!S7tF=O^K/YigPC,P5IpX2e!CcJ@"00?*NZm'qt%%OE8dS.Elln5\"8)=
%5pN`fEP*h&J]oO3l2qt[Sl[!`p477YD/?@AnJj,*$+QjE.<*A.aI$K;7rXQ&2n(J<k[g3Yi8IrI+dP?:Q+M5u8s>sOnX]]rVX:3o
%js\oUnHdlB;l#j;c\eAb^2:cu]Q[C!.t1ODr<P$\(*58BRNDp]f>$ES2gD2<j5S_PKDVQ:O,=]^oO4ijV3(tr8Zb;e;B;?4D-q:.
%g?#"K,3>N$nPk8m/?',G\PrNnl;10;PqO9p?o;)t;2!g-AR&?UF-pq8Y#i")<6:j.o)gK[lQrE_Y26sfMJCFrJd/oViVhu53\5Ym
%gE1(o:K;9N1Z*1gh<p42+\1m'.H7l9)K#t8"PNu]0B$KcqDXj(lP'qTq1jsh6$l.dRCpfeO5MsH*i,eu=1[q#/[e#-p50]$21r*!
%4aY'_el%OFeK2o[A[+Eh@%Xshb:LS[#rK^$,N.+GCXr$ig?Io\MFjIiX$LB>_WPEWVqp:cpDD*h6+^E,>(5=B7P$'sos_gn^.c#*
%;/'?"gh7(RGg[d6_RlkBM_dgn5A`REIm*mYWeAG=(nY!>`;7LSfmY;[+_;;tV&EOcSX("Z^;$SsGu'ag/1i+*3h3;df=%-8GG,$r
%=@PM9C*n+o/OOXGdbO.Ff8X+"%F.jMr5r6)5A+&36H.cp@5A.'.![YODqrp(iRo1QQWPrKI$=R"g,k0'Qu-3g[9`=s"6iI9$0P4$
%"&=BW1LJ]2"Br<Z-"k`1^LH@\r&i).]9MS0IIWhZcX\WH"pV;sn-;Sm$590r>(ZZ',E*bB\@B_Jbu4_bc'SkT?[/@q&?#fgT2!U=
%K/q]_hJbKD<01.po,coe4PML*=9iZo4EBe:kg&Z0UTJ@Vg(ek[c3c#+(m9gKQ`<G!`G\hQC+l%DrhiZ>e8M\GXtWX8>:7\"op_,h
%=nQ>KgV/@9gkFn19V,P9#Zj2]2G"mci$pdrX8h_]Wr*;BF,eP:LTbRnksN?Un#ZS\_#Dc/`Z$TdWHM9#M](urgShLiF*oJm"7'5<
%=t@0"U`Mmg<P.MGc[C:B\^P\Xjkas*n&*,qgP&h6O=`'(S^D^rmFu3<BC>#GFZjGle)S?n[NY1_]&PNV-dNP>1X;aaS+iYhlKH<d
%&YHLMVO"U^EVf5\:Z)T+[.T-_'Tuc4,tR`g>sM,@C7*OHW=qbIZq<XdYkDZ:aku*\beLM5D`\G;Q&)ck*RW88Z*N+8m\bh6ZcBZk
%]#ZP*d1s,#USbCpV0c0V9-p>rK85V9:1<d*`grkU+P^eiiY9&;T8`]V)&3ue6@d!hq[%AeNMJ3WeNH-k2bTDtZ8$.Ee:H7pmLA8W
%L]u]=bJq5O'<,H6`RhG9Z4#)c.Ed+:p8M[U_!IPZd6Wg_==js*k.JT%q^EW_Zl+)9@l+6[RfO28l][*36(;#SkU+lbfj-Zo&(cHp
%!+0<P7Ib,RQ;"W+A`5uoasB'okBe5kQ[s's=Ylgt\`t[eil[;V>hK+2qHh"!MKdNQf!IfN;/FKJnn9cP^<<7:2PdOiqB'8T8c3*C
%aAAkj=K"K-1Jt.Rie\,gm(:&YasRhEYZ2g[>V>q"jJ4R-Z-rQ#BrMc0F?WVW"_`DZeFe\&:kN#9)BJg9J.=ELj?'O7*D(mR0IIle
%]?>s4[<-pp303I8Pr`\?<*VkSG5DVM7:YDHJd8,;VfV&BWK.;-%]ZO,X>]`)eiVr8#3<a<Nf?Qp?q7`jWO3%sAi_HjVSqe7lL]Gj
%"`j22ZP,qQb`=mr8^.OMQObXY!RY[ngA4>1KsQ)3qg7U>]C/h*V0G?W6U%R)PO*4cXJK=^i$AcS=mUs'@?D+Ge]*g)):RPBZo2SE
%<CXIO?4Ss]6_5[Y5A<9P.T5Dfhd*jS9%h"]FI#V0OasI.)(S@cTfiM/A.IAI"0Pt"-&8q\6XVOROW9VpfrhAdfDIYVqM)D0,oh]3
%%I13!g*?*Wg'rfh_Z_fCS?I&1m%4"s'r]]d'a3%t[@q/>U5_=H>X9V&Z]Z#*T%*sS?o2@.U']_A4jXT.@>XN52TYp/b)k/r8]0'O
%r![')lon)bhgU.I?f`Y7SCno;YO?VPc%a#*^5P0`*>+^Xk2)fLcfb#f5K"YQ-C+G',iJ$g.OiJ/N4X_`O@A;bK?:=kU/$MD`?m9f
%-F@I%mG.,X*a*l-;RcmcFh6YeOb\/KRN*a"q:&97:O3%<##KZ%cS"(7WN:q?lhPl4VbG6UifG>u=$i6,:q/>j]P<JqEqEI8l3:;n
%MEbAZ_7l_'\]7-\05CJc4nO3J@0?]91UGum.b"'f^ju<XI@B('56^:4@d9m`UP3m_F%%otiHjEjTNO#CI;5+@+jZ`+8IYHnKVNAs
%$0/6o&,bG?]/@+&@Ku/TCk/b4n.os#T6EWp*QT<D4[LTYB:;"X4]F6dh.PD08Zt2uPU6\Y^r147?YO2,P?V>.]0+?.!+(J*g&$PW
%4Z+>VOPud<@m(0:H3.>4Z&AlELt=Cf?fnB-4OA%f0.3,S!.Vk&Ergqd(5hO]nk=67\Z[S?d@@LB4Q@e'EG$@9O/p-LQ2^/qfr^sP
%!R^nnTgSs%kK_58-"[kR7\7#6h8M"qaCruI,/18eli-k4I-pf4b4_olLIEd9/(Ll5ql-n/16>_"Gg[oPraRb<i4TZ-b0ML$ht);0
%gLAZJ#lmilTI`?!Z\.!$jp!@;>nDWd)::RN,TH[[[b8.=.`2=l5#EKlVn&]6F"bkN'dYid_Qd2!&3aoA8^fBJ&It[NnE2_%(o"6k
%C-8n!DM:oW`<#bqdX-^l&Z!7r$2$f\Q(98MWBB0.pi7@ZZd/AQBu7G4?h_$0@NXWZAi?W`VA`ih]*Z*hN[`o+[u\%Hj;;"CE]X[/
%N3T%nN7,k\_g0S_k*f:sC[!!&@9(9m.k0s$$Js&A<5WXg9rKS,Gpj@TS]gEp.>A:+<nm#JhL-e=/D8iTOV?q%?kfHobBW1B:C?(r
%(2X9R)HZC&m5EVFl[aWqd,R$Dm*$Wd"7s&n`#Dskf]PkIFuF_s2G@C>r,[,Ema+=3r$Lc-TeJk*.EQtlPV8qRXjTVEU>K#g:V0Ya
%TW,T<cSA/&>N4I&=ck5iX'J9Wgsb48,AA!qR=s$eLIt7a2#<0>a`f4-2&\[OldJL1G=iQ+_>N/4Ko3$G5E%*&X`7k6iL@6@CQ=p)
%+'Y;T#oQs\p64Yh>1Y=KSG"@7LE?H]8L6KeY]1o]:Z6<t,BRm9OTJ1Qldf!oiqFD<(^"=O3'VL6m2R%).jc)fg'VtZR4L/q<7]er
%))ZsR-Z.g.>oSApA]W-C18@Wp/2+F!E4JZ/P%VQmp<QMF_J,or2Q`O*;>*pDOR0u`5qJ"LNj=lsh_GRf<ta4C"I>oX:lBNt6[u1%
%0\[X3L6/`S8-[F7Y"7lU9%,W%=ZR?WN<0%d8eNSh^/l23G9%HlDWUN_6Nu0USnO>J,RK32m&2m>1=1b7];EktPl\jC]YY&bZ]kVg
%O0+1CRZQY\E8tsU`7AI56bT1uU'86\$-T&4p0$mVO<aOp$KBm[@[sf'CIm4E>8P%;c9cc-AHQCFX_B:].IEq7rl76.faV#HW7"P6
%K6uFn4(_SM3#Y8?A/-mY>"q:&UWN0MQ'hG_',Uh][kOH[>o0WNMXZ_<i9V/GSj6BS9Wk#YcsZCkH@[VuMFoj?N$)%;lQX-pYL'd+
%bj*PV0nX$ZL[b,6V,i6<qg3Z`'L'E>8^N7$*\"/g76o[ookA(f9?gK>VApJ=.`BGZmYo*Aa:N9V+b*!-oTZ3G8R"uJ+]YmPj@@UN
%251:0X`eoSq_L0c"-)-C\k;9l)iS@b\T*V)&-VoVD86'SoQ?tapjjJt)m+cWa9%Bld\/,BnDh<D;r0!f+m_`J8"<A(iOBh$,^r%d
%&PqN?-&SfNGTQYn_XO*>`P(4VB;l5n#uLn&)(!=n-F&\I%$MC.kf3uN;%rpl]"%G:$]Z0S3m*kfNsTXbU#K[$cT3;+cdIq@LrKli
%kB&-LdVqB"<]#<+WVF9@Cq7pXX\:[cq1E?M__o?1BBn+&,1PZiZ8Om$+\IQEfiiW^j*0MNp%N7kX8:_'iNtZ[<C>js#,a@.9bhOX
%#s5gm@8<ma@jHGb=;ru;gnIf5BJcm!/N(m>*!K`FW/CdqSp?^-(q5c$X$f/;18`e-i"mj69[M2Ro=2IaCW)^Sn&HqId5:DEdrF2f
%(/4jBl"<H???%!u8rqLsmMsUSA\rW!KN3LSL3XukSY6^VRb=).JT/6g((+*pTl7b<fC7g2If5fXr%IX.>;gT*Ic>7k5QUn7j]\f9
%E8@e#\nc?.;\Nqa-F<CC#o5[*$k9P%TFF/6BB[,G/sMhdm^p(0V:VUs6QIR2@OQ>OgHePg<)gW,US=XCH]s\#bt;"GVB)8H0>llP
%5#Js_,G+[N9p)JEg#q:.M1]JmQSO3p)'R^ueF$]n3$H,@BQkWQK48T6^rlk,SE$u=(sQ+Nl`%Enbk/1]_L/q7^b^@b-;@9?)/A1M
%+g\L:2pf<jmmh(JZrfQ8L@WA2/$t0qJMVAf8]JoE*VfsYO^9mBW2"Cfpa/KZ3-CCV;tm\J?W*#*."s7Y@r11F8&&`nRrV9Ll$7YS
%g\L/nd?spnN0B5R!_?_kH^^?#Qga_8"/Gm>6iUBOc1lTo&<o/\IX#A3A7ZkcZ`?-ph%PN&j3Ik#nC"jBbNN]^*<l-2/3.)a1@O&M
%UO73S#Ji6Oencd*N/:s?S9I(MR\lf6@R,es0]5CIKXHU'`P$o_He(G^GA,/pgdK:-o/WQOa/-$/_B2m@H*`'#Z4(0)JB>C/=j(3W
%JZa#n5Pc,PcLG:l"9$VhCK\CZiGIT$;2J*(:6OYf"4\.##$)KoY+RkqA-gKe);IG/^i-\r-KY"-D!EW3WgTn)p9<s6TtMu=%>.dH
%dHX6BV2`X#@a1[bG2t3l"9rO3`#nZDFes4(AWXi1!K^J^Ok]"AaJ9`M=46sU<++W=!h=\7r)jc2qREce1<cgaUDW5>30r;aF%6\I
%f[CB(nNA/O=XQi-Q0Tu!1Ju&7jbWd.(l__j@5lljSmW1'0/Km":ApoeemR8k%S1&ps"+dCh6!1]P8r4-*>]2Rj`e90IjP"j@i'7V
%Osb7[_f(0n:GUWM-i]&MWE@AGquHDle8aHPg-"A+L,?CWTmsi2hikDH=$/U%D''SOJE1g#GPhkC5%D&*L`WidKF"Q6odM=fi@d9D
%7/QI/Bh8.N@1\H4Bu-c*f9IT8,/3jTc8b+b]m6"TKP"jeLnoOtWmqK^>KmbD#)<P8k$SnK/E*7<H?Sic>:aP8PpRSl%P,B5L"7b[
%[hG7jV*cM2(Cle)`8QT+iUYW;[^JniTnJ)BUJNfS)TlUOe?]NsUWbOP.;LADLUL&C("QZ>0+@r#Z]YKRL,H4r/e5.kLMK\;Ip3@+
%oa2I%pi0d.K`1Ze??6+B4)7CF;FTT$W6&X/WU$1[H"i[gg0,`EZ]euQCdNLELL:%iNon+'h)(J"5Iu)L5S91'`(RMR<%u,P'o+-f
%r_+/@.lJ@Aa%+1gQE)8u)nD(V\0AH)!HS=l7SWlLcu5[uBaBiF1"<sdJ2#i2'*@%G/;!d$/$5Z#5Z%2*l<q/Y2We?:Q4/(>gWfY$
%blt'j5&(l#jG3HJ=,8h;g"3M*b&X?#P\j1c4n$YVh/`Z:/!G;?ffHqQ*EceV5p%n@*9?,5D7POKbQ.\_"eM)YH:t2PYa#%>`VK76
%:LdE+"]`05b0=2\,:d[kolk\(YLLg&,CIktAmO&KZ+XdiHOMYn7(BCYq+ug12#/Vt,P2g/SMq',BAbD2d2H5>,=DJ#P%B(Hh-C%C
%fN%AZQaifJjj"O5'&&LRTd36>LgH&PH^K&M[2XeZ`l*kf2b@t/L5]$f(J%kW@\+$tGeOLLNnqqkJh5[7W@Z2e5&1i.H%u??]o_;m
%$)ua>V`RLBdth/t1b'M'Z8<C[^7AD@R4J!@R6D_X]M_P\Uk#*`CG_#idDj":E3?<^#aVVGX'9<$KoXh&`r:"SkhJ>aE;e6,i?uN@
%8R.d,VdI`+B1P"eE*P7$e]IL;"#M?<3cLbu?fa_S.%ns@^td1bVjWHr9-cCNAXeFeXiY\Pfcb_rIca?tbGVj?E5RnFFc3'X(,QXN
%i^gH,0LEf5D?]Z`R<Ti/F=IMJ\AGt5SAqSYc!9,K'1+^MF:$,gY[\q,\&mF@ld(Ld>="]6`k@CdVG#a;2+\Q,0bF3'?<fe&IOU*h
%hq%jnE33HD33mjM0\d4D$e0/7G<.tHOFnD\YpB@L4l_.2!8BNF_e(M;Qk+8r[]dh\^[ZfMO`HHN*9c[:n+'06.k\J2e=Ipt[Yu3%
%[O;;f\$0sBg!P`)6(K[H:%qi!*A[BiqYD\Z?WHF0/Q!-U@Jd-]cC;3Gl.-iV#T^_)=2Igs8\MTkPk<3(Z.@o;Fb(9gnZ@O*n9A7T
%A3dAnh=(Kcjsr2Lf9a=6+f^eTitQ^d..SNU.,!#C@$>*rD=itR-hCW7L!0oe(/<Im)WI_O7s=2[FT*5'65WC\;DW"#+Gto":4?HA
%hsYC?$1<.W3e7%=ZgjPtb7.YtCdtd$,o)KGg#,U(+\t:a;\a1#1*AK6(!#:P3_O?\r;nLD8Thrb&a#==>qY#jZRIs8N9[Bs`;F(2
%@5W.lNk*p@m^8:.K`.B1`V*"e9JUi8))KM,OLd=rZW2W7K`nJXN!ue[Y9F7QhS#10l%M%D!6]-!ZPYEnNf2<n5o[M[Cf=o/_"n.Y
%Zu8$dPiIH5ZceVk#K\:`,+39[X3jL8Z<kt<[jJ%BiJ%s$);->V'@H`_WMBEnr"ZUCa4diO)4C^rlqlm`0Gs>Z:U3(Jcb&2?4W2!i
%;;PKfp8VYpP(M*Lf/6s_83sgNZ;O.L!*ifiAZJJMA("):\184qh"Flr@9j#g-9r5jMr.Nsd+,_Lpp&FOW[[5mqi.<Ns8=HLY<`n3
%3eQN?2s$ZSe>cDjm*m>o:c?0AM0(5/,a4:6Me>0i8M&d@Lu=]7\UpW7RF.\W3Z[Q^:%qi^Pg_+o]gfikl921\_UMg%ldV0.cEA](
%Pi$L\>D0!h=othcpVR67>)cV`g8(Yf3Y2'Cn(N.109ioRF8bV>VeVjA+(+6X3gq(X`TT?]b?SF5*-oj0bO*Z?[E.YjHL['l`=/]H
%@eUs>_gf@6@nSW<5gs$,=_qGR8Ig9U=is`d'MT\%c'a)[M=WUU$%'%[rgs\q-Dhn9dut@3miu'M$sl.g*#)Zb6MqhAfg<(P,?YIb
%Li)cjqYcC59Y?_+$,B*7-P4>@)f&s.=$AXKk*hMWp1Y9@W>gMnMHZ49n]8&CQTRb-`':EQcgZ9%a^Q]IK$.F]+WPa?_T2Y);SW3R
%]1#Y/g9]-SA\k",BQPh6&\RDT4":d)o4-;]R_8INcY'7f!7'ccAW`akc(,*lr"V?A*%Mb*iE"9KXm]&u\"K.N%W,/&G:,lo#1a\-
%R?#)c0!X<sXbT%2aF?<JVb[M(rI3VU4te6(pT+K9F&C>^I'1Z=POlNYs7o_*&k0:p+(oT?:O+Wtag1B5P!,1k6:kVrW`]P.c:&JJ
%WU'm8LKc%LX;F9TQf$MIA?mBup)5dtiO?u=k'^kQK`cj1:eU/C1nDt9IX]]BpA\N+r+JDl:nK7E[p^CEWZNbUI?)RsBT7T;R;ND\
%Khe/LnZH$WKEY*,P,rRVnFQ?n=Xd&uO_bG]NiED7AZ7^(g2s0MUZOG]J:#FI/rTed?uA[bNlhk;;rgumO%9hD!^U2FH!%nn![K!q
%iM)Q):YNVE'YTSP.[+Yn4<+C"*XU+T6'C?E-r)JdL53X,an+U!q8O<f@5KO-Rn:5_VWVR@b&Pp[b/7a<&\4-XeXUlV)pdq555+3c
%j';:qLO[RojM"5+rpqW=<]Y#*:EC$L1,'(79VA&)U:XE-ZPN,";A=]*,_9&(hrRtZ@\2Of>L?3WKnICUQtq%mQ_6k"gr@s*qn[La
%oNfug!^tuDD^>\@l0)9[dY`[JRCC#:>BGt4E8gf[itd]H)>ZAf`HfG#]c5sP1$uMdlQ&U9VMeUZ>7NGoDc\$K'jo'0knGilPQ45&
%-`H8R"jocBkAb%c)AU5H]b25`;_[+DF\21;X5U<qWd+(5_^2O`o_#A#qerSRnNpN-qo[l)QWFGadJrW+-2b__e[7#`T'F3`L0)Uq
%TkZg[hIOk(MD_>hf52?(jC$<bYnEJ@OX**<&%SFZj-+D:W*oaql<E\RD8<2*X.Fq/Q?ro`nk9ZQ7Z*%jK]`\JjYf%u.`;b._Ni<X
%2_$?H/%9B`2+6:"7Z'2>i&:V"<@+!YTTJa=2>W$j3,\;KPZtLo.5VI<rS'-uh)>0IcuUaRc1.LY1<"dDP>k.m6p#-Tq:I1/6Cj.i
%^jC#+[EjB!f1X\R+`i0Mg%0^t)!+5>q`.&nZT-b'd$J*O`PCZG(W*lOGDSb"#@MY7lKp6C?-M_=c1Rf-[(!2I(Z?J\"hH:SI(F0F
%g(3n]J;@[)=I/23UsYOj3p?)h$<hEK2d=K0@0u.\j^(co9mM.3:k%-9T4duWQY(*e7>FCS1ZX(QL/7(:%^!0EiL&g`<PQ*$WTa2f
%dkHi7=h\6&mfLNmUmcCkSMWaHB8[JTH']>_k@7SsS.*s:!m?LY#(Pa!8lnBr\LR%9[kiinLJnk#Q:kZ<'f>4M1\cF\q&L=pA'q!m
%e^*&8V11^,s11fIf;VGL<UAU#?)JCbZ@OK**?M[RMDn(b;16Zp7K_F^VSi6tkT*ZO.jCD<kNoN2';ju?!Of$\g9J?[X`_Xf.(tb8
%JGNf*^[*&VmXMlO_ce9W4of-(J"2ZJ^5<TC..a2-C@rd@ddK?!p-:"TE6F1gg?i/,V\UM;6Ocq=m%J@-<(l6=SQjTsQKmM.G!D#R
%7Ojj]h0s%RXQ4]g)T9,%fWCg*B%.]_p=!hE\GbKe`Usa@fh"3)S0$ii:^q11]jlEe6)s%4CF7oE"*#_%DCkKkG@]*#!m<#bF[m,e
%pRSkdgJ5RLSr<P9B_@6an=HQ=K7S)XET_rib3W9R(GE]A)>[#R?<4crBU)5dJA?KR>obPUL+3.ABn&W;=Vp,H@K]-G%cUL>g#+E0
%d/,uP30n9&-sC7#"$eRb%&'ENd^-m/g0Xlr:@l&WQj/WXgPA8ljRIkEiUI8j.#h,SeoZjV.L)2e4,7hKY&S#UlW^t2Mbq0/VBV]V
%NDY4m4s8^r(nTL7lEXWh'g=ON5_u.0LbZEb<Ar4+q'4PK3&HNMPmb@$*-)K%Z(4%t)0(seEZit*8U<CdEIYo8N(Qt\!T*D(['AS#
%TJNkAl:50g1QUG6Ad0X6>PI[U>4iXq6o0](>oDIZPhk!0^B[86]d:Fo3a_Hm3DX0H;PCia5S5Z&lCY\sg:#fXnM97NHUskHLIAS!
%&^"^GljV\D1Wg1W1t.jgNI^-DoQ(LZMQt.]YIYMj>O_BG<dYG&pnjeuOD"7S@<IE0,^6uFHZp,MXl1L>RI"aj=QO?t)Q,1bH^nEH
%H5%"]5"\hk8IP.+oR>itOYWUTeBc1u^KU)O2k#8j:N)rPVbp=<9($I*^[RjrG:6(lAmEY]:Cl^f[J0!M@,rg_-k-kudm1qQ5%9S,
%It&IF":q]o]"_SV<UQ`^LPf7NOgMj(4hnb\3L%r]qP::;EcT'`1mhD.,`6;iO4%gKF<8_PIAj0'pL9%Y_N[c,0QE[nYV7mHXORqf
%-+*p:.4:ILACCgH^`fHC%qkZ%;!['tNIG?(j&DI7keOda%0_9M%.pd$p2A5<LMX*]ZOk<RoDX3lq$Es80`[,kce/r"Ec)[.`_Z:q
%hk-lgT8GjYUN)7Xo!,]q'N^!d;Miu>T>"/?+Cfb%0M0Z`m.\u\=O*K;QkpFR*^C*S?M68QH'\GXV8jXZ:e&V#%*LM/.T"KgYi_kA
%o%8m24noc2+W5T8I[iJhbXW,1\Y=4Qi>H0%dZt=7$doa7^tCqq;'SshUN@$W3hh*BIb+u-iTpL+.m4=Yn4#+DF]@P_ps(GS]/XSP
%T?0m*,t'bhr8pcJD\$F!)[#X!Bop@MaeNsFAC3QpeepZ;n-k('qL@%AFs<>bX4@Tc_8hd5aQH$kUl%=`^);!H4nKAbJTIp<:JQIh
%\I:\3L)?d<Q%aA9MIr@*,7?JfP9Uj1:'a)lf?OWJSr50@TttAjBJU3jpJZ/Ml6+0^CJVB&k1qFTH=a(q@Ym!pZm%FA+#Pocr%U(=
%?4%d,UV[LhX+NRpN*.8<6NMT#$#<.NH,9OZgAYFDFZo)+O]>'@Q+mj/o3lS,(%hgjFN#q20d#V@Bi3W6ddfUU>cF/24f.8Tl[L8M
%D2-lmO80LDqKeSB7JhL+5"!9j_pUq&q)DV=k,!#Jf@VF@9OeMD5=693:bO`l;lNCnhC=hRA,B3e;gT5?j4^(sH3Nh-iF'j&Lm=/7
%3J5RZe]V[jFg&G.Ik6$D,CNe&k4WNf37,udER.Jp>=5f@\N.Wf]YQ+q?-\&o6=.&5LE'[a[`8m@>ijU:075P6MW:<nlRr/$YM/=W
%bErihk'=,B21M^ED^K<sf&[[`DDoWbls#JS5&qnrYP0Zq-P'o\C/"A63,+(+9EmROWnk/BO@,-d9:_5cI$a*nYM=sh3TMh/AWi6-
%E>90o=`Tip#H\qtokd$60F.a>Tg,:R<Xi=%`*_f6`lrUcb'X%GMa;Pt"lM,@_e]PS5WLNZ.n5UbSt5mSSbI&%@4'R558L5"4`5-/
%/1)Po2HQ[=OAJidY,`6o6[Q?;ZPM*l1T_L!A@7hIPeN9A:q`hDZnmMtpa[!onK']r7gjFar5cu`82lHLrZJA!SjEc'icsd*)N#QF
%C@3SiH;sI(PMQZ3ag@O+Q6]VcbdcOpn^9^tnPsq;6FskYHcpgZJaIL8hnS;(ndJ/&=ou<6MPJ/i]C:g12;m[)\nFU7llCGO*h"lB
%@53/\en%.1f0"[+q5l!8prMZIn<H,]H!#:lQf#+c*csX*dD[Se>Zb"bL2ERQ*Q.k!AnQE*,$aBT-<hH$mBO(&5MSiWA[P,L5@SUX
%o2fo13jrT^C1>S3r'cY/.ONYbQ68UrV>BJ`P3]J%Onmb<jt3p5"Tg7iT-G$G$SR58QWUE=EB\XkUBJh,e\F7q]8Yr5@:;VeX>>[L
%ILNMmXtUae.=?'GOVkmgFCB#;DNKHtY'6Sh`!cMMc/YR0fkc=Eb$Hp/-7uZ!?$jj3l0dle1lA95[0Vkke2]_e?)Yhp]4r^$b&UOd
%9"Q_:h[!gM1if=+^oB`UXS465n0UOKgM1>d0l^=Gna4h7Qb]Zj6i/3tZr<kh9t&)?=Td5m:8%O5aj`oFH:a3hUeHLTiFd_b*;+`b
%]%"^^=?L*R1:b[U]_=]B.\5I!&,YBl;$$5o$jdL]Xu53Bo5b675QB<`(s-Da<FU)l8WKKLSE\sXP5U22N,9A1kkdE8/7C^(=tm%_
%)PV-i9$/dB`M3Qqb<IqdL`P3G@r[eH@ia7W*jQ`dC>RZ(p7tm=gtlV*C!]Na)-_VSX9.@0*/2:Grmn"=5/`ZV:?L-V.b<A,i0J?U
%b.SkT9t\5lVM>1P:J:oshGlPAb46kj*399`-A4EAoBR-.?VUXbauKeV!nj\Vrbs&0"W2X5MQSM&BT./>"4[)S5^>=EBDXP-kW"`i
%c1B4AF2a!'Hi%'^0]>,T2ab'a2!D30"2jQ+m4PbEH7g\47lP<k/L>88nAMqN=OR+cS[-t)Zf/b,jY8#>;AAPs(1]oh<^=t_pTf5*
%-'PY&<c$B3;6KF`Qc@R687Cf(,E[s>`^1/(2k!np_`F9;c]*JE]qh`l4c%E=H1DFVep?1UrBiG)=LlNb'_K&_e"CWrWC]`i[ZH.?
%)sHZ*Df+U-c-`#<;l:Hq\.7X-HkE78XEONDh%-M`Ga_-8B\fqDnKX^<l5G%OL\(M"e)u\!!bih,Hk4Lhp45qbr7Z)>nslO$mU8Vj
%;1:7o?K(Cd++^?FqosOOSlJ8UHM]C<ma9.L\"m]r2K#p>2"4kUhYf_mW))l@R9+Xs5ana:hr2HY5>0EaNm*j5(i>g8>=;QZ@V]h/
%PQ:f*>-/`db0hD<;^c5,NZ5P^>U*6gK8?tlokE0dXV.ud6H#rTS)D-M"?pF\Y*L"@L$)43^!d_5e%Z^aY>J0dBrOnGEIY'G?[n>T
%>RFh<29p#$Ir_ci%$0j>j-!&0Qpil\g5-jm/E>6G"sM/^BgudH\nmKj#n(QT`o5Y/F9^ZpAm]YF*U[!,`"VE)MtaB\B2X)4+\kG[
%WZ7XEfX3/UMJ)JV;-b/^aHK9T];@3q+*#Wc#siVik,1p8'?FZ?T88Z%gp_ouRD&6@8nT3-O7,%+jQ!<UZr\63;]"IGC/b]U0D9ZF
%W>:IRJ18LG2fDIIf^k=d2A%2br7<HG1EVP)fffl0L^nc4MBY_FC5U[a]hT@`-7-IA][tXtWNGsh*q@>?L>1qnWrWcJ*5=1kNMi&D
%LS_Xca%3,R\m8ZrGmAD?KB)T&e&/A+;TeYsd>h+V1@0aOA%<lMX/FXs>Oh#464/&4iqTg$*2.\P-]VaJ`,oWmO5Wb`/BGfbLp=p?
%LC65drlm(OYF#[<N>5K@'KTEQ1WrU=X3fHs98YtU+Y(U369^:^$W1PJJ]Ea@,*oTt3?p)&_RI.bi4<^WA(#t8f8YCW>qSXIc.b?m
%HO2ehJk@.7[ura*qL.,:5H\iDq&TTRG]-4`8:>U:6e#n:*.P=kr8#L1!<:HRiS>?3dM7=C+D6+HL6d87$U:Ya4mk+".Th__CcMP*
%pBM1$P%ic?LYf_Wo-=U/NUY;,&/?L>g.]T/$t^$-(N[.)M<+02KJj^;bC_1&(*C`1eL4aa<cJrrP3U'Tr_7AgWoZD4M`XMU#4a!H
%Ua8U2`TSq&T4H?*;qTtR:G&h[`!,Vu;QdU`HQ\PL/1?R#_UARV.3YP)?[Ajq@9JNM0e1^=MY0lp_4&`S@SKB2FsA5=^bp?lnJJb`
%*(L`hHN*X4a]n*+VJRg*3r"\9r9.h$,eklA$&Qfn9YKW9*qc$<6[WJ/`>91k]-L#lUo+s;Xi!h[^m&p$iH0E0'%+GGUJ]HIMl`cG
%P(Rnt$c`/V%aD/(+AP(!?[Q=4o^'(3[ouZKj4FqQ^8d#-*gF;He][LeARWki+&T@!gILoiJG.h;1m"]mEOD1iRhhQLpqps$IDCcq
%g$3ufV/-I!>OkqBAEq0/TBE@2g(\spTn3!9A7KKNr'4H$_6ng2D?HDIJe0GJqXMeFRt"Y^^4)Dr*!,!toal$s>qm3+`GK7/I$[LD
%a&E#r3^a-;\*%cQ<;*FDh`d9$Kg1M,gJ3nFR':;^"Eg/q*!t9dI<,S_P$L;+j:taqH:U?C;2ZOH&`@h2ak-)[:Z<@L]_!7c!5QWA
%,Wue)"ZPGs[%SW,8^Q*YSEu6rDX:E+#,FW\XAs+8fA$Qt5MQXRFG;TkMr&XDc4Rs4GUp+ik%?C,UAQ#'g./eUT+($5n<V4%G.@9i
%?YO]0?sRq@c42h0b9.8@m=/.Vgo:A(?[V#4+"cE'Y<N>SpKDo916LXZ('4hJ<X(c.]n^[;a10[Y0:gQaOqmdJGl3A9O@>o\T8uE/
%1Fa=:`8597gTM+#RE,PD<s_4Ec&WCnXfP2&m,E6)DZq;3:J4LNW*^3n6G$+th6ZZL^tL,i2I"6oN.n7QS-ej;8L[LVXJU@n9[759
%#r#cUH/3la:*pd1UiP:K1W7Lh1:#;fe8&>h)>34a.067'/`4<.Dseia6/sHn8-6H8Z]F-ICX^J]!'_q&9\ak:@e5AL`OfDgH;'BN
%NR$cXlZT?q_CG0Cj/H!XhKq:8nn@!A*^VsJ+`$8RWnlnMh;*SJpO8,0kfS,Fm:Cc-E.pd(0oHWS;]$/Yotb6oE>]TP1$gcZl_#kA
%@,qQQau-&DckQScHZn"CkYVm=in!3DI[.sW+'Q+$#='':*aaDe`u-!+[NJMs8#FH11%`]>GNf"HC;o$aBTE#pi)B*<e<CkbYk<#?
%H8)>GC*L?!/o*h[=)7M/4o&4VV;84M5dOZ_;>Z\q3pFfBrQc>[I@W[nOHC<lGc9pA_%9*h43IVO%Lsr7k(jXt@YlmFIkTY+5PnSF
%A`BB_3cq1VJ"Etr"crsO@M1PC*96':pro;,mdA6hqF!c]E_+[6BBi$urr-4PP>jX/Cl]mNYH%sW8Wt28FP\)54bBE<a2-_c[fK=<
%(hm@i#dK2@FkL`iH7rEk/UUBeGlKs*1uE.fq%OAlbn'pjBo0';18ud\O4$as/tYYo6.O<R!bV9"PTShp<t&k(U,:63ZjR$ajsPcf
%i]qp!Yt6P&\d!o.hd5$lLY8Op/]dCDnpI)+LHUVPmB3rb?($dC5VcA.bnn?aoU3@sa(5mME=KHTI].uTpOTM)5N1H?j%j[#TV(G1
%o_tKGe#;fW0jC3pEZKQ">3,P9AMX.Qk3\t''0(;ko&"QmqOdU`hT1)7emblgUNb-Qm93Q-hB%`tRG8**;GRoCl&6$G>AB+jW^@%q
%^9Loie;[-Sbul?q&H7lmaL`@G:3UD4q#8d>U&Ylo]_P<N^?qZ2LS!"l='3KZ0EXl7K&AY15a'IA7(Lp^TiF6NL(Zt/]^3<0VA3%k
%!5aHMXCr5#ceEQepO%N1F-$/ejqJfG1\1%5J4$Gp<Il]6k=`YQU=s-AYkXp8<-*dDTm?/k`s8+9NG0fgQV<G6='T"IZfall`D3O6
%a'[_[((""#6=`dfJn#>"IE--Y:1TK/[^C7B_lLlF<S-Di&M.PNp_WHE<N^Xs1S.h#4m+:GR*LMoHsBO1U6N#q>MJF!WSfQ755B32
%Od->*8NneB/!n!!_-j(#qLcKs(I^c817D%GbJ4PKH"#d_GQN/U*b;`Q`>\PE7>WkagFI8WOKe@,FY:uPeGq>eIr?@INcLu/\!`e+
%J&%J&Qu^5^CjO%N(e)KW!";A]]cR!EdTCaZCi6J,+<O.5npSo5]M7mBVK<CX7\ha]:H73>Gf;G<HFq#XOXR3S8ga&K'?LRd'-@P`
%!X_.7jaep47jLXh!n_hue5dSQ=#JB1BIUF:D<64l]p+151ATT$2L!^%^=V?Ss2InBlT[K8Nqe76<V9#X.%l"G$q&!86&+"QgTSDb
%fBr0#MVZ\eZ'?3k.'nBtSnPK#Y@.kR>'ij9(BU^r$u1'^"?'d!P,5U]N4hZ]50NBpTr#V3oFF&j]Q%].Gc*H]\\SkSR,r1iO8+Q^
%2S3.#Cr1I0cG_P0_ia<h/-8$!TR1.n]2TQLh12^Wo#Fa8O&_lOJ/TRmEnbXZWB+R7fL.jU(N:r'0]\5C5TJ01Sjl2=a[Hih%%].=
%0KG70/5C;a&Majj>4IlUjeAN&o:%cK2d,C47pTGt+tqZoUK::=A.mi4o[(6*A*OAGH2/7fqRdd;KR(rc`mf>/&$9YOAog=.:LFX;
%#9ngIf6S0BUJQc/_,@GY</=t]^e_-^d]^mhqba"]m"`-;i4L6OXI50Hcf=tF9/^aJ.2%!/NTj`R<88SnK9qET0h+C\L9,e!=<$V8
%03RGpS-^?%`%_gsl=`4.#=/dbWj"\9,`OiKFFu)@9ENHuPV7A2,1X/?PX1LiOXfon6CIsTp^,^aL3oN3n6"V>@2Spb4/JlpCIc\3
%Yl%'5W.tY;n;bH48#.C<H3,[!i(o(PjV5rm0/FU`R07jC"I-O^$PZ)^H#*#H.Z+#,+;(BFkEH+l2L?096^Ak@2Zu$e&><Xlp[c'%
%BGNm?`/8&@hRL[r91qRtD;0Z)S*Pa7q"&[PD>;bn?Co`jiWGTl'MtX>XsheP<^IjZ:-qsIY*+^W"U]QT3q58TL'Jk(^Ih/J.bX!q
%bMMFOk<HR.eM-TCa@bsG$N?@GI(<Ql(R2FUs1agn9/*J`nPLn;TqNp)`7S%6%V\`0^^4Fqb)t%MA.X?@puf;hl'o&64&"K7"DG2S
%3paM*E-/$G3d:sZ>ER9u)?0l`5f4WYqo7deTlsBg<RB'=nA@;e3QM$;n4TF"+Jhm^q842:+IURN7`.`l$P3!ib%Qu'V]YCGrrtuU
%gIIL/>5#YUmYI)EhO[JmH$TL]@)26fPCA4in%MKMD'Q0(feNIsaS]>1>+3l(geD-?gc#-p6^Lufl-X0<oCSWfF=/$H(q#R@N,4ZJ
%7lW!.QMtQT0L4#3b4#PiQ)u%H5b;+Dr.CjrPbWNS,2pTE'nd=C<ucdDj)ak&mn,c-P(\*,GsOmCkXBq%%h33e6S:Z]XK;:IiHo%?
%QuZFEK;Ai`"#Rc>!)*-"<&"7jLE'kCNh@X>Ak*id60@mlKh,PM-+*b3Up*2Ba)ZiLEnVE/r@I,8;?VY25nh&"$<;ciZC<n+"Jc>3
%\Wf]JJhD&>mrok"&$8e455@:HnX;7P6"N9L>S;3/G$.>f%eVJDI[T]`4`H4C?1pdd,Cr8O-!?-&J/,!j0a\u_1$%P@BS\N_`dOCg
%%ZcS:+X,FLo,-R2JX>J8U(s^5d.k:O^A"^"@35-0-:)YrB76]fZe9&7.RTP25f?m8f-hp]V_6-sTAN`,$Y28GWgT)cX+7#3G-?Rj
%-(Eljnpkg^hk3Tfq)!I;pP9+L2T[KcZ9PL.XuLa8qfKDthgse?%753b#7mZ^e"m[_/&aEcWU?N5c372e_C@O_#jR*XX(uO*CVOZ8
%r6'H5Yhk)nGA?<;>40)0+T&HsjK`NdV`OH.%ZK!7#gj<'fA*O(k-uPD<PU!2i<IPpl=54WYPssW:H"[(FI-j3D2,&C,FJa!+)93A
%0>ns0$ZL29'E2Hu)jQDXb"ts_F/sq*nYR(EeIueb-REiL.jA%[nIn`]g0;kfOK<6&h`c$(e>i9!WYVqu6u?aI,.OVkjE,o1A?`F/
%I.1GT:jOZ"YAE'Z\Z&+N*77,khX<Bj/IAcdmB/IMhNWN@d@Q3H)2BOK8ON"Re?!'qn#Sn2>@]](',f>u)"KDn-F>B[U:-dE0cgAf
%jJ\$ZTh-f+-fgG``7BamjKqfK'?.4!N4%h)3dZ([n_Jf%,HKP\Lb%"c"subq?K)\;c7XMrMKC2m(^4s@rVFbkg)CVH11Nrt\aMjo
%b=5mBg*.AG1kD%+jBB!m4_<[IKR6e/YXt2OoFThK8M;&M44+"_lVUpm^3GaXq=.3WkW2+ShQMs[J9WC;P*ZufZr,7T`D1_MG^3q>
%;XNEc&0_WabWu7^9[*.Z4kRiJ$PG9qXJuPbUP<>+1s<*(PKt_/b\r$;FWC;P_>e:`<Nc`getUPPmF`t11QIm4fj84M-0aG`c8Hb[
%^mY?HP:-m^8W):M=W%\dB$ag4g@eY;4d-=]3e:$SO.3L*6l6@g!dr3AL42ut?T7cT%Zc373#$31LI?hVFA+P*%!MNn"(>uW[uu?;
%fD]Ab00E#1.n(2>E<:>=mRBs0MqDc7_Um\"`:Tc[IVibtUXtjaEh*qV6fn8/nL.\d.,DK:Q^Zl09FN@NVsQ1BD(Qf>=XPg1QsU1L
%CnH`jST[\fS5U?G^-=(gc!4p(frL:VW+]]\+fULr/(T\Q5kR^JcP_=g3.W;X)0#5K,i\,@g%s#V^6U=W6$_o>pkBOLW&P`e*.SQr
%c1X4PF8p^umGM\Z3tU?`F,D(TB*%GE,i0`3%e#?'M!UJ;Sq$ZU>#8H#*&6jb?Sa7..0D%g6J'V=r`+>_#'KqQm;GkB/mVG\'@X/_
%M6J+)1'8F/%'2Nl5DhfoNr[[jh?_%>C2TV>S=oYS3*sAGaU!"DW^__jJ-.-6JmpL2-_@+[$(U1QfAIXAb`hmgj[I]F#OV=I,$ErY
%VfBX=3XHs<D;"3)ol/q'G,osF*Z6N;MDWF2lf3@\>C/fr)8Krd!h^'K%0'fEb&X&g_Qh+3_)rI@5=P;0@Cu&\)%U`5=D+#Hr.H.@
%[tePl0!^6XPbX/m.\8>p@gVVTU5(-dp+)WQ/1lZ^&VGH7g].bqllI8Qd_!giIbps4IISTbX\pu`^@IoNd)Zh;eKkC[V7>t])W2f:
%;U0!Vjmem<lMiE3+!03Y.Ua/o+fW1ZEO0H'.ism"C,V0A+0op2.DF5FP$.HujYM0[ca^mMT@#lW4KVuuaUj2uOtU%<R8JT!6$]Vb
%.]:ftmrR7:13$s+ie=Olp,^5<#NQOT/RQ4_<X:FcAl:Jo2k)3%]>LlC,Y?*Bp<Y+]*2]lZ('?g93!#K<0"crR#qC$nZCdI2QRri2
%VkW9@B)^"OZ1XJ_:JP?!hol;b7CZk.o]e5VS0^BbWj1N'qHE3LCmaUX4IIOeglXj;ZH7F?a_(Z^Uee#7_oFj,P.6+Deq&rFNYmK!
%QP\e[6:*J4Pfqu!ga!\2O1Nks@Qc6\7/jNQnEs+nDo1oNm@</e<hI`r[5g"g5Y).O_6WQAX4Kf14aP-klTE@o,.qt1:LTYD&Z=gH
%XoLYrdn;pdp:XNf7S$$$n9"&,6?17KTh6SdLJ`O5O+mc/])c.sjQ$nFBj[l[2%,G1?b?2;G<^'kNk9(OVENq]ca_/=`PoHlmC7;r
%2:G,b_c5V-`ilK+J%2=u;*N-(a&jnp9e=FqptR%'9(s?8T9T-?8:!e!8bteQJT[2jlmj9F\<TlS4\*n?.a_HY1e4oA*a'_2lo7N6
%#5SrSL9'grQ@R/q59G6r<@jSUbtjC9G);ibL7bLr#\NS+h5p;QX+J^U+*$[dCj;*_2Y246SAiF^lrT-jR-UN6J=UXs[D*d-LTh-l
%5&r&!Do]NQ]g[?(kNCNImDH)s11Z)\)sQS4b>[4TFq(`N[$bh]dQ*a<..<$ZJdsMLC>!3T?f=hGft@'ZA78VHVM)1O3ZRa<:Pj+*
%HLTGG)SI*H'0W?M4o?'r"R-]c9)8Y;hu(m"3*'Lm&=[,j$r?0PBCVdTQ.:ugq,Bq03kVBT;m)mI@S[ZdcFRaR6SBa4`nsT"9G`$]
%2$i3W.a1k7="mXr1QSl&nWS8',>84!N<Xt!)10)I35]n(l1J;u%dMq-*r]*-9&XNo)J!G:0JmS)[5[&VFS>YgAKI#ZR;(R6J[D;Z
%kSL*hNXuc-)hnhf(6JS61*:%bn"TC*acV4mBeGRpQEu`,M"<aGMWeEiD0bKlLgZR1pYT;!QsncCpg=8]D"rb0F?5%(:R]t.:c#+-
%)R7\Ofq?5lPea:I>onN'fR#9bK+`$,p*a$Krgg]RiDf.HkIN@*-7qSM]Pq%,;(;4GOTlLdQ#N_STlCufmGAiV+_\9X2cEd(hl@,Z
%J'XXVT"Z":gG8sNc=]\ffFhR;nGX4m&gJ\^F&;-kfaoe]\7_Kk-!kP^L>!Yl"p$E72N2SU"qWsM4h(iQ3\$)YM3Zg=R`9R#E)'H=
%%0(8[mTC"3E`Zgams"1pQ(c5H6hXUjGJ!PaMZ=4KnbuM#kYC;WL`H[[DlG$e?l""u/,S3=AJ(ci>F8`J[T'J[D%;HRK@&Y$\i[U;
%_(%b(1[Qc7)1Ru_;MuP=.^Q>DG^a;&-Zr4t$hUU4*$#)#-0=&`Vt1uM/9N__bPF7EOn[ht76V)S7-;QI)cIb]_@R?R<?Yj*%R.cO
%L+"ULa3d4lZqTTi1UC.n"U/,N!IfZ9.og$H-U%lscC?7M`s"&G#?R`IZI-P"0gN%,(ti=E,DVA8pC1p-?FK"N2#mg]ejR<n'u$EG
%'Z:\ZjkMaSF;Nq^la!7#$q^Us2tjO%ne._jYlF&A6(!a0n/P&A3Ju(]39GfGcb*PSATPtXL@MepBdH8@P'PL1>t<d0!AOP1s+K1X
%k:jI?a/rV@\2$ZPlU@CJo_i_cMI\@dj-+BVA?%.Gl=!jG_h:YJM7j&92HBZQ^Y\F"<i1bW>X4H3Ru?a_@C>AoDLlYl'gOSMm+p=Q
%gA\s&@CUrDWp2H&C$E+>O^0",)m'jU\$*(BmhqVZ`O]U5FBKf:>bU0T.9S43$;9EbZ";0m,XV4+mUR&b#&R+((LN%kr8TEFGER4T
%-PN8Zf`I>.A^gglq%cgZZq%c/3/OPd>Q-aSjC@niO&]PZlsYni4$m$hC\URjH6%S^r=;u7g/]M5/O*^`S.#)Nq5hfRh8o+R[cZMh
%_cCJaHh:dqPU@s9X!'j1eLb_X"V-*7;#u_'+dppfMX+*Q<j"?,Ol0np@8=W#"b8'\gPf,PX7r3=E)?E>TM0'XbXmia5\KF8koM41
%_-c)E-0>dpV1r#u,2^_'4f^.j,0*sdQL3dSBhDG4Lt<-Io-.?P:W*KR]$E22\\Z"#RcTt'Yt::`.Vf_9b5LeLV'q"!nJGmIU:6=d
%L^?+V$bP26oi@3SNej0Y3[9==;)of7i(mSqAUbQ<0IhtT=aieiV&'S8NiX.uZ>7uFYS(p$SCLan09586!7@cGN1q>JfJ"GR(D=9Z
%\oYsu$+,;u2d;CJ1ek3lCR_g67X9]^@DD2Q_;'kk[AVQN5A?n@6R05;TQ2J=[b4$j!Q7BW#^2g1,SK(tfc2:no,2$$qq`#e]7bh.
%m%08FV0UNkKZ``<4Kt,7>Q\!JDmAi(jZ@3pOdn:EYio(I,5gpQR&-GXF!m#2qR]'.__Zrj[B_#&<NlBR9tN<+P9Es#:\fX$13RTe
%%sJZ<$B]o-m]]d>^P](Cn^/\-6r.9K:Tu,PG!0hVadDE`pBkn+@LHAI^YQ&"s.t["->ZE!#([7Y5?udngWN:b6Q:+fPqjc:76m;u
%O5-LqllBO#9MjY)k8CE4KqG>@%t/"kXSP2INS$)rrB.)\'8T/?^<C0Lr);`43->8'^)alJl8A*hjqdCEWWc0ISj%WX<oCW_-#/11
%8$K20\g1+5=K"dGO`AH0*[b_@,SbWb!riHjINJS_(n;gR4=3em0e3]olJcZ-Ar&>8$2pDFV7.aQ6jF-;5t-0qXJUJPOC/%AKFmj)
%ZcLUhi4@t"T,UPQV\9_SPq&]j\GUj<]j7[UbBBJ$DpWu92Zaq-\UR[\E[@hI&2;$J_2p0gQoS1M=\%FA<]L+CrH[7#IE]+^PT4>^
%D%*u.D#,&[N\Pj`C=PN)%j=D43M?kmNJt\i-3s)a0sTF1euB\EZdS>(X2;tfG]ldR/fC416YQO,.`8\#(\"An(TS,*KRd,&*6!Jc
%#c%p>*MU<^Z>srD*?.9+?ZufS"<$l;mA]L',,Wj^1Qfs9q8)C5f_IRUI+S&hb$JC=(14q6HJ7@"r1[dehUT*=Z^tO$FP!6$h@sO-
%_UpaEf@uVb:ZR<Io.^gjIEnmd=dIbu'2XT90V+**/nKIu0d*=t,0o?L!X>kT@iT:H^`a7DOe@-`=`fll/gjZgU-.rt#ZTk]PaLP<
%YZ.M5kRPPS`VYT:YgIqPXpNl)@Q9B#lK+T40k8WQ6$Eu\jKM=[28(>,#U>omn@e:t-r_!q/=8Qe#H2sKXup9/ri1s7TH$g+N_q?]
%X9Tn`Q$VT6a^-C,X'[A60`codUlOLol8H^LpuF0D]i=g;6]p9Qq`2t>+K;VB=W8l=WmUMA#1'nEFMo^ckF(Ec4J;.3e??aDNl'.o
%nf`kLK(n`GZ2\:!6;PD^h(nTkk3H=CnJcrW/US8-1u2ocg1o3^@$GX2*'K@V'fu$LC'P!ERjI0r=&9_^5Tg`rO\Wg%KcSCY0RYO-
%%$[HY;^)ZoZucJd)r3=S0]fbp6B4]]:[ioV14'=GOcE*Rj0Ua%;XPI2-<^j%=qmd_YRpD&-UO_BI76Vb"CssF]8(G>+#6!Bpq';.
%K!<lQJ?BcGd^2glT5"EmFX2e]X\*s*_/btM,,"&oA0e5$K]H&B!KDi:j4bs-in]bdDBVS3jiY*US,0KZc=)-O).WT-O^J]g$!NRd
%GQq:smqU517=]c"9f$%<<4lW*LB\=GYXMYAFiKh<CGKSu_6o_JNF/l<&fIJ&*o:Rh)!a!?D1Z6fH%H^VRT]6N+ucANa_hsW:e=HP
%4@CV#b55Ln5=1`&I!P@53"97&o'\co?m8`BNXhW"T!Ogi<5Sa:)2I&`b;<jdFuM273>(1T"VaC7@a>UGk+n4e)abZ9/.;A3!^=?U
%VA=$/25jKSNtCBJ.((iDG?%i-N2I%Y$H-Jn_c1/s1WBr$rTua0hO1/E+X+:u2e*3B/7P/Aaln_P6]0j`emhXm'o/(0kI^1eUFuV(
%?a:mI@8C4X8dqa#I+C;Xea/d_@e@#+]M1(dQMQ:nnF$1&nO9K?cA?4N:lopAT#Ai887N8O,(MY\OUF64R$9jA)6QZf>U$?^qC!Zs
%Gtr*).;4>PG?.oNKej0\4JN_EN4Q6VCEcsp6>rM<1EM1a0:(^%KAQ0nj8-$HGhsXcPN-a6\K_%&D"[pNOshCd)a0UiTX(XsiUJ".
%9lAY)Dt:f(QGn\-]0sU<]mR\Q$[qlmpIQN/fg6t(`8R4@6i-G1s5mpK#ZcaS=iGkD`?CW&XQXRKm6Di_/pHbs!6W9SK"ch[R:s-2
%iGjn;`++]Q@NEm"VXEZb?-(i-atU.qTjLQ(h1`*#id2Om+O_GP>:_L$RtNp[1m[*KTfjii,Kbr5bD78!>eB[O"sJB3e;*1]Ujc>1
%;P^$4&S5@]GV]!hCuqk9k&"fuJ\#XVqh[X=;o@/34K;f%2#7@&9=@B,*)8k!4.u>lmOu\3JIN&??[8E(5qmHg\qg#!Iida/T0/Jo
%W0/>MifC^AC%ALq[h*?Mk7&UPG@T7.KuZqDK:/0FUK)N=I4L45]$ihaL+,Oc94K2iaJg(=6sm0[a</;$Ja&W@$Eg#mqbu-e'CXU5
%.M@j%P(aJ[G2'04/"oW!7^SC4^<7oSVCJ_(hf,G^BK!$+Vu1tc!(Wb^rK"\"D/?r-IF#q!+^M3$Bb9Kaq3DKEXX9e?TB#&!R$4\2
%N!Y!,O14oM8g[O_6p]0<?bdSB:=EHk$ufXp]<oXm`s)p#\gi_VY4Kf4E^G6`&^hW3dX`3fFm8V[D_Ea`mU&qo0/,.S\8+9A)P#ZE
%L.3Wl]N_@,=+NNV*V*lKTnJJg)DB'-%WC*&g3#[8XeigMfbrA%9O/SUlFlD*r3M:Dl_t6e]tC!X3OR4Xdu\WE[1YCpFCaBdf@%;Q
%>]>`4[kG+\JQfQa4g&l7V7/.5mU*bVq\dWc-KMH7:F/+CY+O)K?JuEnb2ne=D9dEF7)<H=amn?:O=1Y'nWRV_/h-IRR6G-\LnW+T
%n@sR^a%K=m>G;=WO'bMmL?Al5e*a+Lo<(ap->s7HF/b5dbU*(2#agJ'p6*\"mj3!"KEIE0O`gFNlt18_Fmk+SqjUPbKSMqC#L?ET
%g5i2m12U/sh+gL100NYh.X(sI'Pl/)N2,T6SKReb@D*?en'ONo[D[B0$tCp1+roDT@&VL!^Vi7fY1O+?#4!T)>L(]BplQ12J;*p9
%B4?"JIl[(\;@Iqk@basCMeeKZ='QcRC3O8KC6j.>,_+ESJlPg,nJF]5&/JMi@&FUK'N`A+,`n^$BocT!J]'E6[Ph`60Q[JU@sJ%b
%,Dd/[;5Sp="$U`nUEd/5Snj4d["RmT4J2Am!O;EAEUXdoU%h+l4SnItg:#uRD?V7e_<-H7^.ar\;a+G0CH5Q1Y?YRCGXX4$DQ\8C
%nUa).,UC%rr=6?$,c;7QW\28j.Nb\4If&5#Z0H[!/(mVZ>+:BJp"4$BgtsheUD8=s4<X9@alaYs2+QWipfPqJ.r9Wh8,QNs64&@m
%$)R9QMO1c@^ZW^s??*qUPTY)#)Dicki.#J'9Y=mlS$!Y'd==Gdl1>S7f`8a[(,8=q6HXg49p<`<j0N[t(0$EsC.2>qI5F2CGJrLh
%<XOFaeNB0<%I:]n*69IsMc\C5V1_/2\/+*<59'mC-O\t4C5ec&<Y%]adXaUaa)3oJ:l=!jbFU(@/"F8I?+G(Nd^cUd3pQ!4V7nRE
%m.8OppY^,]N,Re*<pKTfF``ko-0fKlno*Wn+@#SePODaTF#8Tq<6[$E.>l)k08>UaFF`0:Kuj8SFB)\!r8UJ2o1G&Pj@P)dEoc4j
%%_A$W'PIOu=QH'OqHf>Q6obCQ\9_a4`MGhO\`>U53i4$BAH>_<B!3.s7IWG>]%*W=Tc[T%,Z4*`qO2QC<tIFXQN921fb7l>9+nHN
%qr(T#HhbeQo-;[@N_pFMG44$2Zj$K>Cth1_*-g;-&*c"f:IUd<(9*/:DSg<uYV?\E(1N=P)%b9g[<TFpWGO9*D=bpoqf6s$R:dT"
%;B40]_i@SKT]A@/\H-^>>TfZH4$Bc,+tBpYf?:>^9/6.Lh]+P7_E+kZ1,X4PV(!@n35ki_.$,-B(mpt%?s8!Dg$m"pJ-l\q`ER]N
%3[1NL";@m@KG\b4bR#qV2M);0NONWO!QREbL`c'LgTPh?JsUf:Q)+k-Y&WD_KARW/l`2/km<nlb]TEu\]:Vm:l4+m&FclK:CPj"S
%.mSq$-a#V.`4&X3@$<aG\-o1kS5Le,.9B*S*XOet>*Y::ZKp=`K)l%HJWVbe[g3eNAbruTRfWjc,_67$9H-eZIicbQ47i/]SZmVp
%M.]b4M+:rpSJIk=RT"MBCYQ`E(6"5kNI-^:apNJ]!bCIJ<`+:;hK,$Ga"Ldd?=n/Fk=Af+:hP328LA,+>KS(`/Co<blJpKDqe?3a
%JA12i74q4:G!I1Y3VXdd4bCJHq)k3U.W(2b3iDrj?Zo*o7urb9RUL<-@uJLhA@;jATD#jF,_.$Ep"tZQ!-);.5og\KW\,oqU-(/s
%1.tXPlR9e_4:jdZg8Wnf@quP/[s@ht9c.O*lYCcN$8$8=OKkG[Q<1>hmVbZ,X%j3CX^Eh"cnY'V]VRce[]J8\V5L02d%S^ms.l7(
%351#n&2fI<JdiD/hPJ0K\D`Q7;dUroJPEtrOMgFEiqRPe<;Bo,5!HZ(kq_h^MJ0,Wn.PN<Vf4GVRKSn2dBV><Z#8lq.DJ,9Y)%e2
%#[VF3K1Oms.Z"b-Tpq;2+Omi-98l7I)m<AsR/Cs..*1K,f@>/+mg#P#/NLsROZk@EHL\"d'!r"#JUGnK]qUHDM)TgRc;MS2"\A:;
%,(4(uY41kV^U=a;RW'IAA8)DbL+)6D4j\lQ!fr<K$#t%pk0G88K!n<f)u?=Qaf)qZ0:Xh4&?R.IN_Tb^!N_1CMXkr?F^'oI4F]MM
%RlLWrcIt-bX&'gmJUs,j%aKkQTYHLu3R01'5_+ng_O0%@k&(;@OK;u">`%D@Es<Y=&?&h-)WFJZ+O`E"9F"SRRW"k1-!.PO"qU9\
%%RU__,8^*Rm7f8B?:IRH:1WHKNagm2^I8.k_C^#agXJN:OoE-0D%ZP),(ersJ'HHEjkRo/a0l?h2a%O4m"\Z%n;F[>X6`D(/5"9N
%?5C<XG=M$g2/j:$6I@]+a77lp+9"Lg!-Z>u9^75L?RpRpG&A#lh))RjW?m-,l^![9n<0X/#Sm?cnd?nX*h1=oNQJdPDImk#Z`L34
%[t7U[Eg<k&QqQ-O9pAKl,l>n"dbi%Qa[59Wa02KE/KXr<@%\nGHkj":+jT!&]lh#Y+Kjt0kd`,ZHQBH^NMA36Jggrjr4o2);DuN0
%D.M42H*o?4i(0.T%u[UbE]m?"=NR&-V4FOjFI3S4=R>CX6I=;^Gb=L-qlUn%W3P:P=''Y,!L9a>m1Jbbk45J*-%"#!6&4!5!?l.V
%dd0]]IfGq/Ac6AWdEa`cj[#)<?YXNq5<7C49A=p0[`l4q^M0`6;J1'V4@e'OWCeQG7d80Af@Jjs$WHQ+bUpDrX\Q7#JFZ7//>H$p
%^nfA]kljr;!sFEo%f>'(6lLm7MhA55mH5:[$"XVs^YIR4qf.tmBJ>G*c]N[2T7b"6NR-3c`h=qhSR(&aR5Q-FlkeaUVe5I>P3Au"
%Bu54"TN7S-[FI>RJ^=Y`-jp-\M8\o;KY$'%D#9.[S<*km1'SIuI$X'ZqH+^Jk<Y<,Zehe-\3R6->G`XE6X$$;&bG"\pBsLS">)CZ
%ApJ`N$e4@RKK#iJE)^?Kg*AC>l]>BWh0k:,_cn!S??&MjFK&Wob#XG>+[$jJ-Y*)%A"S(40qMi#_Q+OVf0`h\`Q:%AAYFPRU+t'Z
%NZ<!2BtTK`A:i@LnYu=uehAsqTFHu-V1\d,m/gQnGaOh;N"0hd13Pp_Hu>/P(:\g/])iS66-2JT$uhRnhZ:qF71-dfYCh/6'm)t4
%cL?H_"[$!D;'JS$Pq[Slb:$e$/R1\PJ$2Qf/MJ<&of_7I/tsi8QinG@pEN!Z9,L(-ja3u)F#ef**MjT7/l@Yo["kn^_lKqH(q[0l
%9I9OJ/nFDF&[cT68pq?QJ2LY,&:0Y"&5tZrjMhWP;tjE?P62U]EjgFN$EQ+f%8V;^VC)XrEfDZ18.cb[8(?/B!9Jjs.kI';[<*[t
%X4B&L2[a`l9Bn\%EoP?%7=ta-I/.+(``:Pm8YY4ep&sGVH7>AeKQn8YED(=+?;c*XaZa24:&CGDh'Mil\J`9]Nb]QNY'#=]ooYjd
%QFC!$muAQCIQ^sTPEq$R9GjTXK;1LtR)H#A8C+nhM!$"*&5uJUSRHrrk\r]9.H%L+[mpA*6[d5$U(Fl(_5'fmjji.>b?("_C57oJ
%`gO3DKY^3J<cG25)5L5c9tt!lM[^Q)jb$%q%Ct/=/%_>.k!p6'VQN[81i\/Yk4CmiqL&#th`[6Lkb\N_6u:<4UcdkMMH>XCI)QCT
%alU#\n]fmP>6u0oahaF4p9WP)`]=4V'(7W95)'DS";jcoN0L)5&s">ccWlsmF1_R?U2rrWif>J:7361sY9?9%$//RY9R3=h&\,^O
%*g)$%:\GYUWtBeiClE0^]j'[^(q(RC&t?I&>HP+NkGhQ1)%0G!ko;$SjORdGU_T$:9mG=b(2Ges'Z-1be>"O[ghT]B/Y"S!(r826
%>YO*=N%rMuO@u2'3\r]5m=n8Q`et=P@,\H>JI8Oo/m_1OTcMr,'l#CgBOs9Ja'ss_@0,+l.V!48*Mr5gim"BnjhGjda&[*L\g!"b
%c4EW)mNA,n.2`*[iI.j<cqdee'PJdoVV/?EgJA9Ro3q,F8rc`U[8c(%9Yk!o#ta9lT?n18>'9]8jIa)[eMBE`?M5oe0U\ApapeXb
%0ok*2l$@RRGfe+biSuE@$3cG8U,*+5I3@d]RQPd\g5Du.lPOcfG8$mNeAgFnaCI,q&m2eaidY1TU4?b<f%fN+;/+W1&P"ECqGp.;
%`26fdi4a[;/F!$m=GNn.;EJ<$bLA*/o(ki1j7`VG/&J%H>kj2Y/6u`uT'k"L;gk4W"0F0Z.$9KeKLAP60`(r/7<>LMB5JkNK&ueQ
%VU$\bdq`3SKs^0I_,U*@e2a3hgNqt6P(6b7*gOLa_o#bkPH6A8CW-BW)5=\q.lnb,Sja28QG+<YMRWdmd%eS*rX@o-]\iTofL.7c
%]Lq:,cZseT:Ya-K^KNP6);18n8gPp%n_?s._ChX[$FR'"k;1F16eW:?jO<0gVJt97`F+4%cD=EiO\j4R:]u>VZO58R)IRu:rt2^B
%j(C36\&l@@:n]T5NGc=jTJf:6X*i%:EnL+a.bOp1?=KBr-+CM$BF'Q!5j;R9Nf[ko4_Y?-&bR@30PFABq4l<4mRIlRE+p-G#?+Y(
%=tW@1_!W-'.[*!uhc:VB+.)c'>8,Z^5q>l4hd,s!Q&,g;l%BS$XUHi1&bL5%i+ohW:u])rF<pb&1*4J$L!gMIb%q]U*(<`+JOV)#
%X9Mq@2/D/#h#+J9oS!c[8RYapr`r52$RC4`W^g`;&_;o^A<)QL*uqeWK`R.C#eK:%cQ>[H41"lJT&LAs'=t!07?F;qb#/^4X/^Y$
%bQ!Al:gCA24VlUI"A2Y><>TZhCUHr`VQj4D%=jFWn[)*a"n+t"UJ):8X\c``9<rdo?=n+d`#.<;^(_MC&a,YrIop,3HNC:J&F?"B
%I;1o+nl!tmG2Y8_ipk/u%/ZY%TW31LU,Xidr2s?FM-)-37ji7uq9V/TUG8(0)M6NV>(b3N?CrMAXQ5h^fu?mGFRSW>^.+/+_Q8$J
%`*'8BA:3BWPkZ1X.(<5tp,S`rgPBnD[\/);)^g<slXKsiq+NFpaX$N$lGO0m.?6VuA`=r;%5pjOVi,:uN>C^rBk"8_b?gU2bZPle
%k2+2tB<g^_[EV)qE`?;uPfMBt7+5>Bh<@0g*TI&:LKb/obh'oXUNrS:]Ib-is5'NZa"95oIW7iddR[/74glf@7@E4MFOL:?G.&Vi
%_dnagl+EX`Z7$@(c$k1Hd79-rE@pqLg'ul0]IgmRjXN_FiRm\emOZFT"9tQ%af^n8'nr.*R+Xd=qMP\XHWoi<ApZD>c>7OKiPqeg
%LqAT8^_s\rj%HWfUp/kj7lU?^d=uNnKMC$@<.7A[?.3Ju-<#TUQgC;/B+_@(ETp?M\-'R''74!V<(4]D+X+&TDm;`B:!%u(^HprY
%DTh8oA0@63,#M=aabl^hJ$5$PX2QBW@PI<=AHD1".KO,%eb)4D'oZ8,,R'pYmA]E`qiq*62+R0'IIbDbf>6_2>ajaU)d*6CB,3T:
%nCh2lV&mQ&`gD4:qM(U_8AE7Am*Y'8Pe]\U@4r08Yi,fer/2$^(tAZB[I76fI;7JHH^RV*o>YV/j+3ZKNpg4*Kd[fUnbII:+kP2W
%o&ilNg#$5oN'jT6F#rI>dCoT6f_KUk$J3S_.4a(E^u/ZM*(UO13VC[u;L"0%j6:b@dg;/^h6Z7m;4D9d,#qg'A46m#h8L*(1:h(1
%AKj)lgU0O,<1-,%QqTqlKcXLFgPcQG8Zae0'.g^?]Cs?,6^FA]i\Hlt`e'0Qen0uPnl?rr%pk[gA$#a!@TLNN4a$!=W_De%5IeC]
%O\*["I3""YWVH#X7`94LX0j@<bqigEeUo`<j@%r@YehXYBOS6e);8lAAR,)c]si=MoXo6-/'>(s`[/T?N<spLdZ;NaD0Tquq(dt&
%G!to(KsunE\hQ6`#jse*13p%6C<U,0;.G;Se7I^VpP>_-+004;M<:)D!k%$dmPU/9k45;`;@HXf+D'as?$!23IIlisI>jjBOdbfT
%0R)k*ouQ,(mW@jP:)/FZ/+*Ngn#fiO]"sZI^P*?C2Z@6VJ,aWA\9naAA%c(9?I`)/<:lrgQ<`T4l7<Rpgo'UP"HkFgV6;,qVR)^>
%qXg"7G;P^P+^_ZomF&ccA".gs78,@f`JH$3:PrG24>lSkC_8S4W:M0J(8'":f]E6(AjJ"IqR*@BjLj=>F&u%uN55OZ=WM))=o%82
%>;n/AB8'2h)@\2t;]8B])`_c$dKF]6NJVDIH<9dVWCYLKopQn<:scKl4Zg\];_@'BV5@BW,Uq7$/&?i5LjEp9C3!nf!12;`3t*%4
%,;,pC'5IllfH)c^k:dVU17s!3W]^]*)jKET1jP;MmYk1\AhVhG?82h0YI>-^o"E7(=-^.$-912,Jl,GL$INPD\R+VTfu]l$4(.&_
%"%rM*a.?IiY-591p[>_O&k>u=?9/>:D3+0'A1/6@qac\T>N9<Uf_`e59hW#N[4AgeeR(M+R]A^"WLb8*ZX'j>'^,,3$+nemT?\"d
%14oo]U16lldp(V)iUeK:/P#`=+5",!bq)WM+*H8s.MY[.gN]A%IjkZuUFrP@Q#c#eKMAeo1h#Wf$\Hnn,>J(^/<U`sKndCgEhlfM
%s%[\m:f:#$2'm(9he/XWf$ha^<eFta'N["8Mh,mL18;$7$,jE/!.#EX>C2KTXg^LuV><b@Xp.PL$AP2RP1,f:*`Ag;9uM)5djHg$
%.s`i[F)u_8Z@uIon+Mgl"'/hdA*k0q@Jh=_=790ine4JfOT^"[SD:@ST8uXuN%<n4o8H5_K8`5g4==dmid;*0<hIpA6WDjY,imNT
%6h,KGV\c=7#_]Wt-*)6GLB"JgC,+,?&@uD3VDY7\^-8Rq`cs:+'h"W+dqaZt0eJ9tmii^I)Q0A[M)TIqm3umeR<tR"E2nUbU(HW9
%E!25(`dYp^?#>I@c"Y<NGn_2Fqn]sNNl$gIU(WR]QUnWV',G&P8NBc[1G\T6fc5:/oZF6%b-4foSjcRf#8EDGWmN;M+T+YW^-->t
%SqiP*h,a'lME+@U/XdYg1#>%Dl*$Zb-#E,rW&b0>]c"M^CZL[_Bs1"&GQJM,68$J?TA1@^TNeGlUR7LmpE/p;7^H";>Qi^A/lKVt
%UkT#>R.9?:3m4Cq_;6/C%;]H,<Gh,uWn?RtJEXp2pm`cK`hTp\jc3WdD'_9u'9Xe1/t5ds$(AkPC[&md+'gX*]uh6;c&F%KW6$Dg
%-_/pb)Ka+CkBqW\*D3D<a3u!,NYa(?M((5%.0c+#l1X72E*ouUG^q5EeRFPcr=M04<3+(Rm?ah?JF:i2+WXa%?E^HG2$_t2+W&B2
%Q]f/>1-+6h58adF[Em0*b9IpL,*=SYH[+k\_TpC!7ZBO#3UcXbJ:*^]K^HJ,AP:NRp,_8&(YDC4"o50_D%e2V5RZoO`U].1jR<h6
%L7!`mQ^sImOs]0cXq#b&?'.(HSG<ZK]lG8CX,B:QLL#,%2.RZ.YSkO)Vs:MHPXJ<r`Mk8g5lYKUXTBSY;T^XKnJ8U;>cq>G7mBh[
%=1-qf`T\+W9l[M+qtjTWHkOb>W64[O3g9kFWMM0n\b;P'>bt]lgX"PIdGMmp`Lfj'9'[iIJlAYb9IPqJiI1T0G[W8G="jJ3;[]+X
%P\J"D+K$FnaK5GG#M?Qq0'GU[m]mn"`<%gQ^*1t,99b"Ln\nMI%YHE1bZ1em=^_I1f4l$M2M@<1RXW!;S3slqk%C^r;P)f`Wm6,V
%:jXUM'`5M8B"!lA(4B;['nVf",m]Up"JUaMDNGAqFKYLg5H7I?9q;Y3F4^1WNn_4%=]"+jAB.(EI>cG3H/eY>9'6MA3pChA/7jX<
%AFLtiXVRY/SYH].DWOF.DXOiO0U'e$%#^(3aKui:q8LIl8J.OC]8!3EMidop1S'smR7rR.K.!Rjp><?9Wh;eQqHQj-JmW40gBC,G
%j&ro>bT1-7,q9prT(Ma%P&MD4jAs\8C7dld.-3<Wi4t8*LoH?s)TH^sBC[V^9a+^K^AAhT<]RW-F&8X.5SQ@mM?eDt\J@uD;:@#&
%NqZZB/`@o,[h$Jqe'D:C'\KZBdlcGNkDYMrO2q;)jfUUp4N%9oOrLL]AK!ErG`6op/%5eM6Kr5pg$8?lZI:u6EP^.&U<Y/HbKS[h
%fYHng9VDc0&/$5AV?YBU9ibQJ:&;eLn+2S-`PlE7/r+@08*P?%p@k)U5q\#"phoQ+:05;d3U3X6fW;@+,QP/J+A7SU=0eRs1H'3_
%,/uJN-UBXJC:n#Zla7/%']<>ZogoU-&Y,:A;6pFJ&WpUt3b/LS,Ip*l<&6HMQ)h!tT:&Vb"cCW*21s-Y0?+OsaF,DLc<Bb1o<C>B
%>m9hm^i39dCJSD^nhngE'70t-CXEB;eC.pCF>UIhUM%i>Y7,\S.>@lgHD1o7_(76*fIG$LMl%\1P<k@GRBY!4g,?&p[H_]cP=n?t
%1f?N73_;pmEVb?fC__O)6+:.,-JXTRL?Zmn$ob<0r+M8_AZI_e#tkg]BD),>k6.jkkegWuEL"jZL.pY6KR$@aC,)K@S^36Cf5,[s
%-/)h$Z)40tpMI4g"X7f!rMn8fVc=hCb^D=t3qM\?MAH&NoKt4;U[fZ?$U\a'_-927$?13S87Sk_8U`(/Q\cZ%>]J809KQ"Me+dpg
%3A,A`HD6PY@kgXPaUER8K@.XXEro[:[LcePcg]9Kgq9P3kr3/HYt&'PO`r/H!/VlF3*Ahkb]%p06McRT,(e4o?J-E.4]SoVq.K-.
%9u@Q(n55(K3u5"rQlP9LT1GU"V8kc.=*1;p-K0t8nF6GEX$E!iT<IND#]iaJG*`skC`E#.NcCN=P]bCEJGr)EdphC)mr@>lO#j<^
%iB(?JO-F%Ughb**R1h0uI)lUcbWbth;DO'uTA9+KcQm2=LctmB^@b>\N"Aij8qbD?31[@t>;)OQbtIbUT?gQ[afK":9@e=fqY_1T
%LT>mdI&6Yo%/F"?*A\^@Wc9ZPf1g7TV0HMZWc[`Uh-rNPc)=#%j&ng0`pIM6QrBXh(pqJCXfdt0>@``lib3_^4_%TtFUh,D+TR\c
%er\[T4j,7V9/^;,A3&_Qbni:SETO9n/of@@Sl[@+;$6B,TrqcM#[AEu8"?0'(!/Q]mIsmn$ET%0j$&Ss?,V-7X1-M]n$p,M;nae8
%+O=COQM+X])"-sG_<Ihm_J*q$SqeHL+U.$(NlEPe4E!`A9'>4ifAVuf)+Fg_0)QOSeRfu&W-:\t<<\i/\IHVL7sPOLM->%+T,h#S
%bi5mP0a!e[A/.$nja\4#I^5@@o]s%&\:S<Z,d*l\p5%:#2-jVFBTCJ:9sY2XM,@!q(+$ANHLD?XR5Ho\l$D/JV/B>!H<S-/10<#^
%B&C)n(MgiE;PS>sffk%LCnRQ)X6I!I!*rIM&)_tK;S0I-Y1Fm6Q=cALLiI:H!lR/-";fU:]-anFNbUKrL/J0U%eBt2Xk9SM,ps\H
%LKClarl;9^Vo2@YEj&5s2GH6r37HW@I078%fel<\,ZPOCF4:ePQISlPMX)pi=+p-leu[Q8,#6?>6s7F=>UNO%bLMj\8nCfo'#^'M
%fIP!@h8pnWCQgj"nd\.ke4rq\#7hjFnhu7qe;/Lh.WV^D1_h6Feimje0k.&4.=jed5,<Tr^`;mRco/28U]WKjG1B.JrhLdfXq2&<
%?+>)DVk*!NH$<J)\(n6?J:(I^7WQ^UFAC;*h>i'^_FV>9RKI8pq*2R"*_&JZR7!t4a<D:mm<1:]11>j,4ji#/DMS6^Y<75=bne`r
%U1)a`N_j0,,(?$Qd%_^'8rniNVR`s#R:!eT./@.G\f)t^[:R!G,XkNY_TY0hZZ,)[.'j/9H^$`^Y6[?7=GX20.i,t#$l`(GoW]1N
%EE27,ULPrk_>!XQQA6Ysr:j4ACs,mWj?ZKmdqSg:Pc9_4+jl@OC%kkR!^FW/7n=qC?c;MPK"FETMcAVrVkXs!7D_q9#[?ufjl6cP
%r4uN\nVf-OQ@[iQe6jf>Fs'F_/%nM8mYD[,YBR%=@8AXqZV(Bn+pd:c_l_MqEs$&2eB:qIS9'M<QL\tnjgB1@hnP`*Z2@q23FZ[5
%W&V%Kr!N%M'gGaR%2'hf;2^p1AeUUmfTXf51ID\\Q\I'kXm4u$&onZuVJS2TA4.)QCdVeXjN:?ucpiLHb4"EeNth<=@pGS`b'qo7
%"*RVs??M[E78uBDied/A.LR:T/TC/8>t*=<.YdtY#%ZG^d^4<X*SVH;9!;iE`Gq07/:UH(2Qp,)!&`WTbJ[``>U=LeFZH0Ve0AY;
%_C)gjLaH[KcDi-[+ab7"#f.[VB8r)D\P%hI^r.j@;inU+L:J$MZ(hO8Q5GT%2V!5XeUW7I15-3embo"F9eY&dm,/u/n#nfK_>Psm
%)mS-ae3>tgh^Y2lrsl)2KkXb'O)'YSN`5.^+P\;PM$@ITiRC-DR_f*<CK`\MPtVd\P>""!ZT3">k9tssMq8e-obn7?'4FLXN]![j
%0J0Su:ZaoTJfY3V_3VEBnmH03(^UYXfTL,cf8iCBehWj=^*s2B-"CMT2e="_]16FQWW=Qjam[J1#Ia">qikGuB*<:;F+Rs7i]#s7
%lb2CN7ccLU_uj^[!oA+E@1A%GH)@<kRG+2<8367,j/:hP8"kko2.+h9FQInR+`'\.>g>5QPB!RH/_Of:->hi0\lI[k9:t:Q]%89]
%MJ-Sns8(lh,ro#d=?)4K6M-<Y/sh4K7f=c.9-t.d9]k/_@hRTIi6ij0_;_Jk81Pm3>XR*uM>_8(^AS+P81(G!'T"3P-gC.UgV.?e
%21reE&-A?E-ML"JTR08QRISr*U_tL&MM&3sQ'rN[b&ebq@)6u7#0DPeL50mc`?SE4/Q1hV>=p@+^:%,$i0n,jafUoOk;^V6fFq4A
%&W;XE:,m?n;eJ,'eP$#!9'2Pk:V,:-j#tl@\r(UH&K_bn"5fH:!q;u'0X<k3Ra*"8&E[RLoED1TQ1lOEo^C7;h]oB5]!^Hd*6WZm
%LkA:VP'ZU[O-pt@'shW$#>\cKggerr$Ai=_Y_Z?jM1+]t*S+Q%<bI`>bq@=EouPK]_9qfZA<fmg4A_dqHhK35'kUFP^$Uc<ah8bM
%loHB/2l[K#j@o/D/pD5Rhe*0r?`kUaD)QS%?I*hr_VbZu)e,CZbd\j#fRd^?,m8/,]:^!8nX6e2)&^o\7:>Xien`RkRZs`ND76+-
%I/@71#Y?WG1No^b]@n7@oEBQhFS)A8]WO:"[g<.FaHLlYAU,7\,Wk7tq-f21s&o0i\t7"RT\Lt@E]LaP4[J%`q"?R:7uI[=*m1F/
%QIkf)n9+""Sl$L]ku,^6W62HHQfukh<>NE$2A@Hg0'=ldeDOf]<XM.03EDL9l&'F$%H@<-q]2Gg)1qX1=dO]CoB3ImC>&Q)cUSlO
%GiXiP+[mZ<67,q1:u=`X9nh?*\u$a6f@2cP[Br[&$H2D7lF<_SZCUU:pSS4s>G[A/2/PLCaian['(cPQFoaC</X-Z_TeSc;ppE6d
%fS(1WNdr(D47T\H<pb;cG:quVP:J1_F$)bLq4aD=NaS*h2Sl'C8kF%1\\M*on2L[F-Q61Lbo!@3P]r#HpLYU8Cp0.B@]%UbiZ_'.
%jV.Z,S0-%t*A[P7N6^1ULa78NQ)cq@'7KVj_bAe5J%eH11Pu<ujH'(H]taNCi)qU\f.[o\.Z\g?h<@U4N<0<'mYpdO86.E&@bK71
%R`JaE]FPX`cBqe%iN=%$ne'CS)\r!5h?70</aI$2'B0dKfaJu7p^I=^bXYT'orFiq)DYTJ_&YkRLR;ebJ[5-nD!m7rBXH='cNI:#
%C(9$D40VVd:Cf!HoM3PZeF0Pbi"LH6"Rk5q*O/f[V,UomWZ&6BeOZrlanJTf[&5ST<m@guZKPVKf4jnlV>2r-&LMqQ9JplM>dHH'
%]sR.nI^Dq3C*]=>+:d)eoA"qc._k;1.V,-2Bi0q5`T>u@=Y)Fol,9]+Z]%$m3CO+.Rp2FuqoT5qOikajl?%acNAkffQ[ik39#1<f
%BmmEF,rOY5*/km1:c9eY8<@.B&^8t^-3kG]G7%oe5PLkus*`Qu7UF=D-(*ARLc/@LMoh)+'O/QW%PLspl4t!=W=>oGaC3M47Ydm.
%ks^`f8T3o=K(HkG$@ZG./ebaipg*h*5Ef?aS)/:HC<]7/i?OadQTPNVneLE_DtBR@JYlTiI?^Oq_p-7VFBGgn(om24^Zn=kS\&Vd
%=d90oRK^U*d$36eh'q-eB"!5#Xg8%FhapS4'"<[YSRidOG<+fXWd@`^AH:[lU+Bd'me0i<j-ofpIB&CUUgi-;HO"tc(=1(&OH<S!
%SuNkr61hJeqDQ15r-f;c>.hPe8!0"<L+JOWCSIu?9)e:Wl9TVhNej^o@tJB\3enR^mg`P4;8&_ig0s5<a)BMlR'P$^F2NK1![c"T
%/m?fLZ/a;gPB&le2^!HcL%mnn5boLr.<@5(j))^YXUr/Oh/Yak*FW^IW#D=5.tA*3fK#4!#!uYU9.l&QcC4IIgqlUk/+bfp"m"=E
%7u''U,jbaj)q%Pqq\d2K[[bP^",p,O!*MIqO=!B/<=E9S3cE3d!qgtBV@qN<52H=MBEG%H$/0$W,=bJ'pg8RH7r4kBP[5R@dDVue
%"iGlR;'K92)5"footC!M#gaG)WTn>Z+FuM_h,h2qCG#>>.eZ)n1Yrr0UKJem63(LUhHS76IorGQGT2%q6=Jj`f`RPSI.ZjpF"[SY
%KgT8AG,B[SZ8@]%m%kWi2S02d0;<J*B+N!_Wo`q);BdU0T=THBlR^kYiXBKU(FBaB,0gtgTQu.,r,=%S[iU@U8R$ta%'B!foM-k@
%'=N([_hd6c_[d/!Q/J:X-UCDi=tO^o(+P=N__Y&-o&)9@SK?+g!8*/L:%N$>oSS%/VH?pdY8u0]*7K:t<lUbL+TVpd+\g/`6(3t0
%,Fq]D)\K3n52R.Aa\+ona(sHAKpII=`>KEgpeu`4WN'GBL]0.Mi'F?Z2sgK=g%nAC+D^Zg@#Ze;mCJ)>mjhUf(7QK3YU2.iD\geh
%3TG-&6A!Guq\F^u@seJu]VR@]@4fdkJFn)g+&ni;GMG:'2@iQF<I6fb2Pn-cMZ?cUZfg!o`uM@UnV'4K2.gXj)Dc&+<$MO$=%.4R
%Og(d&,@/7SM0PoZQ^-I9.i3VF%6@8uN'/.[bo,>8fYJa1Y18WYV@4PE'u3`DE^MR4WgoXkl*@X3h6hjsl'%HBkG[C&OL`VlSe_td
%`MCKhUa./(G1AtSN48nJH8e:JVAif=2$3uMo7]q;NHumT_g(k5l+Hsaf"rKF93$J!/&]uC1i$*GFS)h%53E\iJH<$R11rkEXnp3h
%,V-W&Ho]F%OAT%684-QL*JYsMS4"j@f.nNTOk;T,Lk&?t^pDd..u3G59Qt6i<Nk*,iSSk#keJSjXnI/*kL,uI@G+KfgM2-7hHLI@
%/Bd9;TQ]#ik\A9IZm'\'8""=>K`17nG*">XS`a"pF%9>2j?dar'iPq+bDOt!$T06T[G;ed-YI/4F*/=>fYg>WHLb"LDJf);2mXAr
%0_]W`BpbUIQ.),J*Gg'Ue"BPr/Y,b#]PM&2H*;#TS;@YQZpeFFKtq67/2ad5Y\;lc!<#ta-XMjP/fWVgpZW-eCQT,BOqa&@RPYt*
%fM*HMq4:o@X,@)Y\KOe;!WuG?3ru4n[[.4i7`G5Yo&SRE=;qHNTDIp%q,e?S:@"ZUs**As]^AJ2nrmGSVof][%otR3UK'DRH+#PB
%b_2PkQ+8G#qVV6S!FmBb^G]i5k=t;j(=6B(bqZU,1(N(a:\))Z/4_'\?X(US4*QQ$[84=#Zd/?V2>P.f<s+.haZk.4\Wf9gXhFH^
%]L!`cD>T?\Si?'8kJ#fbDC#tD&acC_q"cH\RN(A)F"'O[AV9GX#V6Qirn&SCp"B#UR]Z.KIakb%\YkZUih=H71a@LbHPhr?]?o`S
%iRO<qFY&o_TD"nBI*;%EY;r:!drIrg.]i8AdiD-C"?9)+@%XNs3Iq%X%B1Mrg_Fs#`A*@*g!##IQe$(nPK68.Om8=JF#5S05L2l&
%\)47Kb[HbpWk%UEgD$>t,&`ObS$,"#SKk89/SED;EDq8u9\dMjC'[YWaJU.b?86VaW@l;u&.[`AJ0(`*;nd:oR6hl*joh<W`YCO5
%T):EJ4eh</DACk?e`K:rZ^&e28Y[02NNslh2&=qNJ\:6'B]'S>BUeU?=qGB^e*D5=f#CBJUib;4mkjX1ek?c"eZ/",Gmss+@.`o&
%S]PA(6_iu,,"FL;X@I]Fl@Du^\9'_SmeTl7=%1G>3;DuG?3ug-@;iQ('J.)A=)Ws2@tXR,]%Amopoqsl=2g>)kq;NO)]p+15QO"&
%ae3L0%i*MP/Q=cBVf<()n9+g`:P=M8/'eoOJ1[t04Q<HiTeeL'3WlRiQQBj"OB-eq4M!%=<&@OO)Y^A(*6L_+d&T<LBSs;@Z15?-
%/K$qHb()E4ng4!`JCn)*k2!`II8ZY"-J3GEFFaJQ[NVL#>4AXG3]VHu1FIW[TubP9%pO.dfKCZR>(URP]bUY:)bu`TD/rG%Z\n,n
%L7@XC`s@hEs/+Rf1:s;8ZcntGZ.a*m!9l3t#:F_3AqeS3Np>Bh(*aa:7?c4T`,FT9ZVN"j9MmoIo[B4t7fE9;).6NNEVLZ!9Q:9#
%7"Jm/^Tbs0L:/-EUY?Kn*<IrM,iD)"O[sn6_j&Y[o!LJ=be;"NV0t@6/KZ,@k_]:Y;:!CD*\;51he5gWT?!oD%Ta=7\p!Uc$=N8-
%oXYumq]sD!`l(h8asIVS"BhgP7#P)pN2pq1;36k]U.=o^0#B;sbj(SQN0Mn!nO:V@3L^tS]X<SSB*]hhb>>7c&T&of/#1JUG2*sH
%+,)&/93e\45pnob^5!7LEe[tMq$m.&ZAsjkAf2GHMDNZ'G,/Ctkj<sr5MY38B,%Qp-8@quRUDY:'l[,H1@(OfYK`>siN+2L.AQ[g
%q(bIiZWV\!8@hrNH0gag8Dc"EaTT&t!%!l#Q(Fb&?Yg4X:B]A_#t-DY(K!($XTae^?6!XG2DV>9'ka52GctLr^<&5YU'Fp8qAq!0
%*8g0@k-`dc.Z(jN:M6D8G3LDZ'3$D<@i3X.pNWQg_=I+;c^Xs.W([-)8!Gp?=kf6jI[pBQ>M\05nmQ5ClGT/FQdY'[7.HQ.CNc?&
%[m^g[ST+#I">o<&/Y:hmO]Z2HK$BX')t0H`j`UO`HV7>[3lRd<%mBefO&Saf8)%YtYBqYc`RePC_Fhl*gZ3\b2XeZ",=X?uU^@^m
%Eq2Dnqr];=3SE_`Ao25\XDn.L'jc>=J;lR+M&^&-"nORiV-'W@?7UhU;!5dbDT,`R<G20E&n%cj>S:p%'b#FPSFAE;/;BSGg3T#"
%CXk<[eOm^2T=u(*";VU>G:guXY:_pB,$jPf/W`j=Xi4*Z]:t4RUL-Dd55,=m^dK`eIR&r?cf!kDPEr>N-/L7Z,H9L]h*F4<]*X$V
%VDp.[Zf3q*`_.]D'diE72D*MS/2p4\dLr%[i4,9S]B-8$-%.dpRSc9C,\'kk1me]6*K;S!BK+b\f+jYK5)]C!4`m.(ieU-@N)!Y!
%aki0\V5q#*O3-DH_tN;CAj&7jZZDF/EC#&aWoe&K"LmbYC[?_dgu)EYqW^JPYOdk5]AZoYV<H?sD6C8^:=mkW.(=`@%gAX"f1tWS
%(7@ND[sU_$lQ",6AJ%Yj$+up;4YE(9cZr?rp7dN>V+s7$dSUGSIHlVoqN)R^S!m[_Ypld"ealmMT>4A>+$TTE_99NPfcde>!m^Y\
%A'f;<(BtZe2'!eMdFGU;'TBjPIB`BL/usPGg:K8=-.HnpRLhhm(0&X)BV\abc";dAIO<XoN>p)@#6MRg$,=c#=21W_H1)g!P+du2
%>>lq2ZUi)$MHfT%CsP<$oA$L3)5f4te>5G<#GFKT1rMU5gf5,L9D6$#Sk#bWct3]jVgAQ=0b=aE82FZ$.3'XFr,c9dWOIVGTZ)<?
%W-jC`UK'tVkI(6]Fh6:T?`+gfS@Q40eoL@VVdGrrCR$"L[,8g2\#WU)8lZ<9R.o[Qh?b`5XErNnMp*@\#-?:9(?>+O)<>h<8GK0E
%jI2/3ko%qs.j#s!e/B+HcL]_30aRk^ZD\=8E)bnpXCuAGB+8j+T7gU%(RJ_M@#Cp?!8V:j88M$;AM'kB,4ih25i7/ETj<aG1h5tc
%aF:.X=Fj$j_>K(!eW;Yuk$G@PD8WEa/*dh85[m/`R`j!%P3B;)56G2SDie)^A&0p<H(4n^V/AsUlrl-B:#`pbV&U2%7gRTUAguu1
%Xd.nNe\jh!!8=;WICe=pI9b%B"*KCtFZM5N*R$bA/H3&;ho2IH]nVRuo^-;$+KjGlLeU%kI/KpkR6@[>:-WeeD$3rN>1.EJ<U-Hc
%T-GH*%qa@D):%:TEE%TG,iY@d<m1oY4K^SKHO)VB#a+j2@H1J<BL!qDb8'$C(mqrpMGb(2,aNKqQeE/Oo;jD!RSK<eerL_'d]eoT
%rotl[R,\#HIA,j-]qMfu8FOSmBhiOa8Mq^_$RGr5=CMq"Wdl/(S+`,C0Pp?:Wo@nE?*mU%2Dis4H:<4/5&['fg]$48E;T;q-b1nX
%/lSM0LXuN6gEo=`1?LMdKS&_63bkLHGiZ)R0(Dm!(ar\`HD.>b]$r8X,YA*a/W4VgE^#<kKDqS_/[[()Un3^"dp7.^Zm[;3CVQuM
%[<8IW")#=73E9@eh-e2R^"DU9/NfZaS'NOf:TH^8O_jg"g2O)(N!J6&5bCJS9=:I"KQP/t,'\]ukgW+9Z#l4()_hm]'D@l%DgOK#
%8gfMcN)C>&G^=*V8*@\a!US"#%[XG[)A%AE2.]R[(;"^]n+kpN^\rJIXWMVdmr)'h:m'N1^Sk<fgE`0h7P[9>^Y9tg7lXjkBI=9r
%R/O<c.7<4?9nZklf6&T'/KAfV'"Wb?R_So<2YdCcl9OuKcZdj0-Fqek-!(7tqU4Mg&D;`C1kN[4/eK6d$^OOpd).?V&.jaE>8/oB
%!?er"?_>@kF#<6<T9k.g?tU;%9*)Ac>G2DFb#<,_3R1@+bkT/ZA&KH8%l^[bkq"^/cQ:lrYGOmRn4`'@RQAL>E4.#IL^n"t$=i`8
%Oab4lK-R,rs'-[cIh77t81meOQO-fefOA\JeXCj@,BArJWA9-c1q!/KBWCN"Hh$ot769t4c"fM%CY&!YQ_Npf;i]I971/.(Zkf"-
%X,%'IZL`:pR]]pJ%o+_<P)cMebG14iOaVXY'6lMZZOY?gaiMceXaYHJ5GZ$.HLuki7X^fDo1(6*d^P/^UtHgV(dr0"O95_1Hm46-
%$5924dA''R^YkWRBl+.oN^et'&k$F:N*pm$8b$:_hHZJJF:-C>MCdXgma:HfWfl;gSs*i6<oF=T+<rt-OtuF!XYM6A]WdUsQsQ*b
%ONb9LXEr*==G/OS:gL!ibJ4aXQ)+U0R2cB>?"O71W`L[g>M04Cf48["@[O.3E6,Yg57IQue"48*n=0-S:8C.d=H^Ha>XKt^Y@2hV
%,Xr!:`FVC5eO$MW%6=,-Q<2YRg\s7q('/2T3A=cL(*%GU,JWehV7aLSVq%j?Tm:lq($VpS16m`)&Pd?rT/-M*.O?5->lbU3kt1_R
%NNud)@7!5sKl!sOb#YF4_H+6G,DCK9;fE*)q6p*9HCo0*QB]55Yn&?slO]gAcF/n"iie(3Br&&0HQUW=DdL`2#IDBl'oeO-Xt*YJ
%iN)+0MmJal_kp?8Te'-E7K'R0ATE5)].Q[d:T;F67kMblc4D0L=^rM^P_'0]Q_>_9g_Z+%W&b'b!d%ZKSMI:KALH.4q-FYU9?jLE
%N'`c9T<eVbdC+kZ0,#b]ec\%c?U'F!^U3Zr^RmbZV1)o=Ym6HULYG.;"X5/bm+FKSbq##mjDJW,\RS8X4qU?TEZEQ!N3:E+1Yra+
%ARM_nH+M[1^KdN5GTQhf.<qW`@<aeSlKO!&7&]!^ME6A1C=*o]UHc\NmB^O]!$ab64TfS*24H"1:$/UQH&JXaokQ\-NJkdmf,cFh
%W3;oMS<'-&3CdfX+2$a.^8@laen]VX,q@*B:-S769`5Y^\W4`tpE^7&an@am6^7\gouMkOE:3::2*=[9p<iXG=RVFmQO!3Hs8HC(
%jWFO%^]0e4^]0e<rPS+'pnr'1/_Bt^S?0%=gV<OWYPsm's5W#7iNL#po=t.&^O1D*O$EX,^]"&en_/K_mD%VFruM.8Q&.57aBeUe
%C!juXb1jDEl1!KOADLI[iO"b@RK[`<A#t;ea#]J=OURT;MMOdeXakuL/.AA:Tpu?;4"8oaChh_#r]dnsimVLLGaVSqk;K'd#&,gc
%(6PXNpj:Ip?0Lf9D4@2EL@fb_;^CIg+9#&"'bcZjp\o[B<.5"1+7uPh^O3M>?1Xb3W?<n\g:"0sRu.A+7cDDWs-R!XnP_&Npfm^A
%bTgL1L0+qB.6:Kh&RU^.-s7!R!2aU]q!N,;LInZPH\%1-_$CY=_M>ARY]g+jeE3=i_,mF[Y+VigE""\#aS06=I\Dfer(A-S=!jAP
%OYH88>k+J)L2sR6T]/d+r_iaZ.ebHrKh]@=l;5k-d";+op+n^LAB=PH7h6qkQQeaQNQV_,U"!_?3+$<rCPoB)#T:r__j$An(4QU,
%N7rWomM*9Y7eA@;H:4N$iU#%^O=aN(2R%Ablb2[=FYo[uIeG3HA$)sS_[5lkkI[AA[',IC0e'sGgq!<]dr3@RE@OENSp7J5BrJ8)
%i1TLQFMr"4i$V$0hOdZE8a,[^m60H<Vk!-O?-1.l92+R$D!=^0)YgcFj[-qa_WP+nZM"CF*jIo\7QPDUOVX^&QhVp6^?8qrmY#"j
%:U3%gaS.?W6bg#CpUK"2na+Fd4U*L51lUuu7d3cRMf8:If8S/jQ"[&m168[O1b!/dDd!m;lQV/L=,1R49Wh<$MFZrN/*765n0-KJ
%;/jdll>;=:p:N5FX^3g'F39f5^fC.SY8n:c#O<_SWoKQ->Z_lNr#X4HMK&aP:F?ElPjSGN;&qos8I.=H^N1RIJZ[f.d"NTTBaVt"
%[Y9m.n9@^FmMt#tQ@n\V?tj\SrGoT#l)#RHr1ZFKom*BiQuJN#=bRT%pm1gr;8dglBBWDE#7e;F/b<GDgejEV^7]dQ]Y.k0VS,DY
%r,=^bX/.fO[,(o'b/r)?r>4T/.=>I$@[c6gjfei#&8j#He<!eE5KA`bat9WnVk'":h3X^7rcGm`JUDO+;i@f@M01k4qD/^Ss5ADM
%Ol&_bB6M'f9\4.ITs!O*RPFTOBh(*g%D!nPmH@Ej;34n?X>)3)3;5'--%7jJ+u8UWY]n>>Z'?0HKl^I^FXWfK+&#G]E6(1Orc/.7
%_0^Nk!q0C(7n&`+cX#]KG'3J@]>SE8JfLcbJ<\ks6#>plC`.d(;sd5:k9heBm8pV#?B=MW1b?P<*Q0lOPa:X6Jh4QSW,9M!@>^Ce
%O=7+kTdA)R2$^<d":a[G9rP4`Z_cW<7-GX,>eqtQj5b`95'L+J:2LdhM8W]+JS4Z5+m](70sToT++IMi"RdB]157&a5IgPP=5`7`
%"^[+DJ>gcN^Z/1`,np2m;C83]fO$-699%+GPD2Om6P0b8&FR)gXMpc([9&"rLeBqL,2[iU@HZ/;7^+DErF`CMG/\OeId_(.]mCnc
%X#Ai%phomjp7FSDh0ZUgV.$iOBMSPS'nD-Mm@Hs5;=Kd+%.gJE[kW"6UqJqGr</U2AR5LSEk!Q):EFhW`,=(!oQ,IuSJ40='^soE
%ZP(XV+qrMPlgDoo]@Ea)+a(8tPX6;B!.VnV(T,'.lTW/"IBnO_^5,4nqA'Z]:<hb>N^QdiK3$q;_)%&@=qk9N?f%t)N>cdNdcPEI
%<'@^"[6$'Q%P!H?!M'7@O'F.*Lo\RkNA]=bCTs+HC^K3JZ:>VlC=DSugtOUu\#/J!FH&o#727r.ST>KD5onQ7kL9:7,,=QUpR;;E
%.BW,$MCh(NW3l>Q8BMNlNZPnXF[RLD/9DJ?NKQ[hV]u?]Lml4.(PUVPe_\5b]/aq%Bo$@D,/*`a3c[TU/#)kZ(92&To;Dg_&',?p
%,3lS91BsW2(P`2K1hmC7(q!PK6Y3XW]e(sG&QCAXrNc=>T4<W;hIJ_?ZQ^ag;ZVXbgJo[);]Y#Y-&8fqLZ%>1Q*k@>49CYC?6D[=
%OVQm>$h:6DMtB^>lL[C$"#UsCcd"R.c>(HH^b*MAbhIP*]5OPGKW1<Z>jA>lQPN<>OTtl.25WqNIMj-G2J%/u(tep/+Q@"8NIog6
%l:rHrlWM_j5_H7EkKo#$.\$`CEgJYV3_?T0V:-noEKRDaU=2T9Q*TVf4,:AhU'HRLAr11F!"!:M0]u%%LB98t^Y9IX?k<kY@s5aM
%'oD.FCQDj*TJ,UF%?b[Sl4:Xq6>Kb\=4Oj"oouHakQ#T4:Ep*bWa%(4#B9j((M^X'("?\ib?&7[,TYt7bKgRV*8KK/6;NFtr2DPM
%f"5ake^(e0M?+0sAEfBE2q\_:ef@I[AH[93_F?kS'QT!RdlP+[oNC=LrsHn<mA+eP(]dQU3Uh3Cb+"5PUnI#;dHP3#j4_eY#Q#/(
%]h<.NX"nUtFm^MsJ]QGof<fje^]>rm?/oP,;*nQr#.>.2JPn(.8-GM:#<]=SdU(@hD.J!GQ7X*[E4L>)#$T2M9bas!*:7)2391J6
%.L.OjRH>+Wd]m!)bNnG%.9MOZ,^5$]n5+=0\`%^<F3Oq_Lespn"^`P]!(o)L.esg79egg'8QcM)#^\Ei1dPL_6jF)'.Ye5#guTDq
%f',J?MI/ChrOo-\CJ'&?+3>'A)Po!<]Yju5g;()+l%.qHSY]Z6]"N$&;d?j)]NClZ)AHmTpM9tB8]<1pmqd?(B[Y&NJ1GYLXu;=_
%8_/#/Y,beW\Omk$&P)GI&(Qc*(PTT==">4*!OD6<gqELeT8@#&Xkn.OhVB[&%APoU`/OaF:5hK5ik1kZNm2_Wrr&$B?!H5s)/%Mb
%c%43NU0dqR$e=4jLO>epZ4`&+T1,VC]U!fXo;i/?],]`(e;,MC%4"Io$W"Xi^c4Hug"W=jVpZr!o#S<oV5NhSHca0c1EUYp\aGYW
%T3)&r-"+$OdsZVq?Ak[L^"q4Mp#:AjaF+(8flu&@6Y^MH?p[657&t;"NhT`P/N"r?%X;7Y8?r(7&o2qnolBr=WG[ClQaG;:F4coS
%Q0=[>b5A3dGVXi]9q&cfn4"WuR34A2]sDUlhY6Q_=/<LO>MiKs*\MZ2`c2Wf1#R<.]agM!$MLr5"^R<Sd/bgF%S]npUXkbEg,\WK
%A$/hJOW/?n<QpO)A3r&U(?U>JCl+ib3rF&'%Hk:/eju3^XrYMnR_W%mW.MT-\(i3q!@;/bS:VBq<p]p$&;qIs'MA,9r%/@D+%EMc
%J?7YU_*CPB(O(OMe&"ZX>C\_]LZ0LO*4IkZ*6`qR@dbY+4ct%5\hS6uCf&=n'$"UPM="4=qi&L>5U+<PCuC8UXho*'OW$h.B;i>;
%62eoob$q,e;YpZ?nfHm"as!FYfu6:"Yet.:(8MH$45SS_YZ?WiguZSH@i@ls)WadI:-B1OJ@CbOSV,/q@Akfmc*qSY9k&1iG3TWR
%<>]3X8^.96gU4fY;Xn%kf'YVu/l,+Cl3]eD!<I9)ZpB@+GRa[VK_;j"&^K6]"L*"HpZN'&3"'aus-[YVTp#CthfKVk/Pqo&IN9f6
%al:#^Qrl+M*e/O_p3TFU\OY1nf<"h<@O4_PGd[[p&RMj/UTPDPi>'0Rhtd#<*7@k`QecSJ[?b>S?_mA$m`=5dn`8u_mAs7h6Hle,
%O),;AIfA'+fHl_;&B[Sr+4E1UD$bnU!<;e-ab,;V+B&S-Xdd%k*">n(r*Cfj#[#f8L=I5':rd]G[`hdTnH?tJUt6'2VOeY>3qS<'
%c.HDu1kdRZaZ=nJ1'.I\/U^Y,ZCokqk;9ZMU"0+rf4cIcK8Q%)OM^0oV28ntrgd4jhn6O8(XbL=?)'JLfUM'Pd#_&tO3t"\fon,D
%?Z`g2oXVG_UAUgN`<Se:Se@?N1d?0<CjEEgaA0I*Ad>HbP$X#&V-T$@#f^CC;k2^:PP:[6jE&F'BG]`F!G0g;p[h/)!Z,,B\B%t*
%NR&!YP57P0,!'ZY:^,?Xd<Wa)$NCp(ZG(I`2>9-<`9bk%dPHl"ZBT#i-cn,c?[GX`i8&85W70m8=TmtdEkZ?u>7l!gStut+A15?l
%QCG@Lr.&BCG1&#U@nHUZX#hbhGKIi4>EnVo9o0VQiWn;XUpf$'cBFp_$aRl7D'4<[;a*q>qT%^mp(LN#:C*eBVC4CS/)H"ahQ%2[
%30qm6c>mm!Os%;/>8$&>Fg&,gcY75778+k-#bk,6:b#B,?'2KVYO\DAb[&>@1?>7VP#XDdab)V+mZBjW$,JF-&e>d/lEqV0](0`%
%j`ERi^rHkY;G\n:^^Y8,7e)aeCG^o.mO>K<FtJ%ep1e]aV0Uf1j&`l0QjmC]ef3fEc1Y1q[%e[Z9DT;uQt"_X'Of[ph0PDc27^3:
%nB&RnqlP\V43>d1N\OAp_Z^);0Bb3T*TcPr8r"C?XH>T'j(Yum3P)1EK&eu""BeAD9W-c2]%Ljo+FSQZ#X)Z-!q""`n(lWKN\5#f
%FdYV(MRKLII`Fu^mWG2-R`8Bu.ql/EF.X,PMi_V/;FBtcUp#%0C!MITi1:C`b6FE7CkDer1CHa+SAYEjL/2^;f8ej?`A@ehgs],-
%f__O\HC#_q?B1NgGkb<o:2=$@BqN[#A8c\3j"8rM!pAYb7;-X]1C+?A9+qUo?0.X.8',tK=.K*kSeep3?TBAq?F@!*7.V@8HlB0-
%fPM)')B\h^b`JOA]A##0gh-TW7&]h>YPhAGbHFGA,eE@<<L'i=K=K+&H4Xk^a@6Ki!`Dq&gflDpfg)p!]=cf4%N<=QotDZA/NdfR
%UWj!CY*m3aN*6k"fOY'`R"I,Gga-oUa]33BCjjN6+u>Q;a;@'8jLoM]h8e@M)95^BdiO2Qq'SE$9:s-=_N/pG.2F>2QRGYf.NJuo
%;dAr8<-I9Q'&TmuCYOnr7o\is.dhhn;kE]b=u"XF,%o#prBkkjWeVd#%scL2IA`kS7!ri__6GKldV=5Y]&jA,7F#4#,M3W!DI718
%448W5<(QW5"#<WD7tKnfHYnfeLQE5#^oOCCTp85r9-:WHH67(Rf1%_@-&+(hED]\CWo0)n$5'IIN7tq#9kQ;7m&Go\efm!3U6I_#
%.UNOZ`M#RFG1ZP*Q9>+0,4<>UIs/LdmbK[sN5mt^><lC_^GjLLhWK]C3)dOQ!T"\'f`uZXg#ANG+)MlnGZs"6ms^4D(Ac.JmTO4h
%/_:>'[Z!7dk`5$@`/M4:l_]$Rkr3\/*F?>-NW%E"U%_&fRJP[3O/I,^BXk*oi"Q^8RRdJH7jO/!$kuZc3=FNh'"_2DSr+&rf@tgK
%WCt<tX4U4HhoDP>X$FkAoXGc@4S[d6Y09MJI+/%M.rI#PY',7+7ihJThJO!BL>rp/`S^9dp[bt:>RRpu"HS`0M5_:_YDt9<f3I6o
%7jSg8;ptE?he6'G-W$p*0Y;hQa49s]9E)\@.$8I2-!dLkc"'8A?cC)RSljFAeCfkI)E2OeInU3lq`(hGr[;V'-%E$C@(>?&F5B2]
%GE+J2R:l/r%]A[B71>;;nG])R:G!]W9+.Zu]VBo[/)m%[^8ZcpYEMlC:bnjfOfQtjJ9G%n6?Ks.YWIu7OsESjWnj<STlb:#BoO3\
%`;iE1*<sr^h0/2WTeKmBc"@&4Pi@2pr/K\e+;=TR``I#$Y,N/D94\#kIZkqfi-ul@`34/UR,lT>jni+=Vj<&T&Q%TZck-hK\W[=5
%_S@G]q,='P!YNN\%Q"ON;rbdl/POS-q#T0;PT5@RVQqSheFE[>i)I2d61X6d;XF0gJ\T2d&d&,NLj<`tLI$bcPtV;&fr+*Khq<]"
%4>i!C*K7ue)I)_bSdTR9A1#J6?)J&_/qDUf$udL@Yd&NrP%JmsEA'KQN`$S-<e.f/8rjH)FA3VQ*&08I&%D?"3_]qa8s/)2=/B>o
%9o)j$#"l^)jY.kA-p6CgU/3p<0ocHlp++u/nM0e+Z>lko"0-gG$s$Su[S7CfrHHT8?M$m_1Y;u&L#LcBB1Kgi81M</)l19\G0\1Y
%HnWFH]m4L"),q07h43j0TjS7c(Hbr[]F)hkIC#0&X<c[<o#-4+JVr9$-!\N):T_F039*n%ER'PdM/MIDW=gkC`"#9@l'>hcBnf'S
%=\K/M8K8<C1-$k+1p0srD=D+H2_\'s?C8kSo$e'r?/a=?>XWI&6mb,^gUDCN]%7racR?G%.</4NVg:q0KF=Rb,bl=Eqe#nADpf;&
%0DR3?SdEl)9PDOH5EA6TP<]3L>a<faINtL4]+do6;9ngPGV0^c5()P^5H@h4Q'IE!*NcrZD(91"?j(Uj$CX7R.37gShIjdi8q2uA
%AK>$]NmGhNC.Uh76OTQI;[;,F3`*s-Mu0@u[0[=_np?'X%<,.UO7ihbD]95&$c64eG#TCSC6-lO+1i=lblB8ff_7."<1H1)0oS6Q
%LbS%^3.%6P>8@0t9Iji4bAm"s<?\L)^;>)T8+Bj;:7o%RV0UC4=!FU^6:APM?56fIJA)pT7U]OKJCBUa)K/YH;[gM_QRI:XnbKh)
%fed0/ASH*D\]8BmfIkVafof:-*>[J)SEs:^[=Wi]3I'%9OL$*CFTT*D\$t-2aBaZn5huj4&j)pEXfs*BYoO]NKeQ%IA:IeW:PT4g
%f,`mRIa$h<m4e5j]-edH>>43J`'f!^PmeNlV`g?P_G]jk!]3-Ve?6+[drVP!WL=.;nMjn1:u!N\6EG*%^![K=f#G"-+S;Bm`$Naa
%"TC7kV]9]%YDp_q"aduE]k!Gmbug3*]XQN*Qkt9d6Uq<W`VuRh%"2,YcGSaKA*9B:\du2e5YM5YkX',8d&<KJJq(<V?;8eFh(6Z%
%Y%d1nUTVaY!(Wb?WSAQJMHicIX-O^tRqNIqp?tEOlLX;t8lSJa7BVHdn</c%5G/_Df-WhfDn.pklc>=cH:</Un;Rh&6>Ug'I?)a\
%N=4EkW(?Mp7&YNBp=3JU6!VQp3KV/6T<Rb]1R@2V6gc-kJHZT<2`fWdoJk5?Y=l$YFiudP$<%pDDA/V.Jf:a-&kHgoZAuJJ"^#i9
%n(HuQ[sG5nh+NJ(/fjgg$mI"P=L1q>MIT.FBtgl@R#a2k\V%Zp3k9n(O*dTt$ZW,`iFkggDXrjjKq<mL(WNYion&E8cNrjc]C64&
%Lu4q36P8e$;bUEKq3&*3bU"*AVgl>fks.K>2UTY/@&L<Pp,5W2E;u]W4,Aeehe4[$$fnom^%rAf,p/T8>M&]=L!$.mF?c;oO$pbk
%8DR'[Ko)/&l)OSnm8HPTlXTg39Uh7o3;O#hA!$8#`i8L,W+BUp"&WK!NBQVE_n+BH0_)^-"qGRQ9A3G?C=5JEp&0dfr:]HW/q&k`
%0V&;X^*7_#J07Y/jq'&n)aAgihFJaTV`OmWo^JP;0*I*5q2:T&O3u&S3"SI$g>L1h.9Yhh`Y=-.NF&hb9Tr7=&(UPVr7)J+XQ/-M
%gETd@Wr?n"DX7r<H@P[rJ/gg</.k<AM<0F-pcP3FDUM`$<.9h7GH5hUqf>eVK?SnS&m5sSkg[7RoQf0tATS>_@`fj=$aqWDFh!6-
%Z^B.JDj_-8;;\-n`XQnBkr\RJV^/(M@8d7nZN'p:n<5Mp)t9\l1)(m.<)hY9npek%&EN9TcmtQ`2q!q-HE"<or-,/DO=2\:'QlNL
%+.`:F'_pF[YHV=?"<C@O**(n^^?AmB.VP*:YXG"H(1Z/MJBkt+TOpF_<6Hl=54XNhLm"%M>;ubKoqDL:V$4D-*sCJZ<rs4n".-Qc
%C9pc66-qje!epcr(Ad*M%Gm.ZOMQ*6lVb;0)(*r&=0t"CfAMQSC/gmT[RjH"45(C=\#9LS`1IF[6M]+66*fCE=2_-PdEj9Y!JO3Q
%]5Y`KAD,!nqbrY@KuZd`jdZ7Jo7$B#CrJ*jHU=BkBe6*O-%1@K8#g%#\\5i:c,/!Lm.N3I2>A8&(EiL94Rd]pA2K?L_><2s%L1r9
%J+mV4A*:tq(NLF\OIJ3:Ref8fmk6"!if%u5]2HlLKuGYE&JiSO<EUu7)=Cj"UasRj/I,l/NdOiEAF%uL?n4A*"f6pjID2''5F8_n
%0W#/e^Nso":BTWfQd]2/J*.N.Y,np5lC.n?/JTJePPB[mehQ'-QG>H($LrEFi<>T$T+JXf<OYTek8#A*mrcu;?(tAhV!Cn&gU3,F
%-<(F+#_3;o#/=/%Wet6'&UKlICQ=4B2Q*`e&0NWAg\^TfMI.U/fJIapcf'cr$*&uh"=/;gS,Br8i^P_kpQjDXBf5SGg)cE%$VCN*
%q^D>((,ij>H]=Iq;`UlS6a&4.+X#@CcQhdpe&P3c&.04iU*,Nt*aMTOW&eG\no<jjj+*(AaR9s9#(Wd#)MiH'Pf3<7HT3'Y<1<Z<
%+b:t;)UA,ACKE6p\SLFnWmVa7kWX-FOJ9(OG^!jPV3U5lRpQGP>.%%r(WncDEsh1JKdoJ^U/1^TSboK4nH=ZE("4Q'LVQ^?HZ^0R
%WIT;,[-V"*s7E]pp'Z\7>Z53M.>#nE&ZqG65hK<*C9EN4dm/JP*2FOK7*1*Qe(U8gjAparZF?ibUnZLFk$U<eQ(Su':>2_BQZ8RW
%+lrRg^,tnemr-6)9D$gDn^`s?PY50chn(J%6g+NI[<W0rWKXtY)/)\-C9;R@Z"%bpP8cF==fmMiC5tK\5MsYe%Ld)PZ'*i7ip"1l
%R6"Kk9Gn;E^uJL$%&4(c+51@OmFS7c9ZHhJGNj2!dkk?ud`AFb-.L7R42_n=GEu>oDe5O#,.)[j-_Y>uBmQk&6t%n//Cc?<(k#8D
%nSC_*8BWhBfRTmC%>//T%[5bHV.j'crTq.GI6+kG]T(WMfhSLC#G'a\Wd:,:M&do7.#fEZ@M==?XAXs\8MObhXAOs`1lTec\kVi_
%SaKK%g[L8`,2-)g-Jp?O7AU(YZ`r.K,XekDSH7FgpNG9N6$.VJ*`oZN\t`dnp#hKW(SO!7@d/i126+'Q@7Mb+Df*C4%&-P]3bT8r
%)!>r(N6sMh`84"0*un55p'QopC/3u>?tX<<l`[>%\6>4hCeVMI\Q`:fpL,&p[riY<H5VURO<3f31DTM0>,dbcm1O!F&?&E%)]CWe
%KCQL#I)PLF63=)L!6PCaXLJ6G:_Y=cpO0V8pZZnB`$R+ON+[8)TqsHTTUU[-CTcfC!teF=eanB:,#FrS0p:3ce0\oNFZ%b?R%J(u
%0q/r(FHJOF6A*F%+4"t`NI^l1)1Uk=lomm^pP_-]d*KBT]+m/_*-.dI.Ms#PQ]e6n)oT;sis>GcMe4q)_uYT`4Q*N])/lb3NG5;9
%k0gYRF_OO?b"[la3.C6p712qND4Ss*ke#gB*n`DWp[iAJQ5nqd$1Zp8=O,_1l/3%IHOrT"p6d7J9$7#VYN']_$&KS[8qeUHJYfc'
%T*&l24YAhmp2Y&n->-.%-sdJq%_3?g"kP:Mo(FN=]kBI.K09e?W;==je^TUtF?#$7RXNQO[62XeCF*8)apak1m*uT:h[1cFH(;nJ
%\SWm@QQjKS-+/s'+8P"k$.Y3=6nO9p_DpK.+`VBl8</eHmoRXb$tV;snDgtR9p8%qHrjb<b'Nk\l'Ktg`"iU7pJ,&4O#=?Od,(\V
%-m#nE4bA#R3Z`19,Vj^*BR_7NN,R3l+I>g)1^&/+r$QP<`oN:s6Bop,GYQ6T/Qh6n^3%CHYj"$P(-0oB7!Y7p6_R,uPI6K@ot%.#
%m+^\F<G=4;("AVY)9Ao/?ICsiPb]r-PF7omkBL=Ce$STm@Y1I!88_fg6.!ZfM`$dEaafZJ_(D#<1eTd?`=J$o$e!;uS;S67;Xp;B
%l>S/\3@Xo!Smu-2GT?-sfq:FW9uKZem@F.O=KA_u<sR:.mG(;jef@(6=0Q>M$\ucmHk0pV8+Ba*++*;a>5g'K`:l4]T^<h6#TF`<
%l$YZ,]h!XDecHqCorh.-GG<qn3MLj`F.jIQT'+2)-0i;3PQF#_FRTNDW,lhIDN'`E;SuKq,)'Q,Q2.%>W?U\sCJCN,>C$67.2tH4
%EMP$tMDS!86+(UnK\MQoC)_\oF27hDWrqk=,C3]E&Jjc`<0SJRpBSLVY>6uho:DZ-%e,(4QS,^1n\`cUd&)F"9SS.&3<TSM4.I$J
%]J8,2m3QQlgico^AV1Fk7)@396RQ_9`l+Ag[//8!oP!+hb[1".*7GDpd]:o`$:)Zh%hjU104;oT]390#=[_aI9=3&+YN\P1O&j$j
%Z'@Su@]*OX3J;YJSA_e>CNmQ3V]Q$)kc2J@::!!q!JJ82%F9ht?fa\QjK9M%+*'#cN1@I6*TbqL\Rq3Y=g4Z!KFcDom6:W+4QsHW
%kD9Xo2E>0r[t$[1N*>b(?Ym.fGMk%u]op=9p`<mVBb)mZSp0?o;P<.:.^;6RD.9*H@4<GE<EVAlbji):<]7BX#uNfOO`1Y+kjg'm
%k;aiaf@O&5:_8Q#4sJn*X)(g6@`5LfcQ/8fYE^_u:8AOiVN?t2^6N$_ZK63E4FtN;-o)cgZ&\'P`S4DXNNs#F1iAUC[OIdS`XoVf
%lO(H^JY`McN^'Ch_%kn6:$hse>OdE<Y]3d&5i!iffc;Yo?(our:3ZYNQLoY@Il+*K"O!%EcKeVb;)TQK'^*Q2-uD1c#;tX.Y)Y/@
%KE!bNpHRt>r<C@`J93Xp!2`ARAnrB*5c>rM7Pt'Q8>5A&<Gk1uR_"*H@.1Ph[i^:V@k3]<d!Wps7$B$)?:*JM7sWQ/pc,2Ia\bAZ
%.^5sQ8Vt3Br'e3c.Y>-mjW$Tf,)9`X,2`]OO<iorhhbTGCrM'1U5JpQ0d7^]%p#ifWrRDW-X*3JZsD/$^!POVDq9DQV>Q[DM2n!W
%\J5ajXdi-0gW78S2.b:<6qXC$2kCbtTI(e_*fi3aB=qks2C*fOVF]Op(t=R'ZmpcY3#smIFW&PEkFnkXigB$k.pGh[:PZ4X#(Z8!
%A:?FROr]StltP.PoX3F;XVPBoThg.-5P[;<9Bnn9h'sQq1nWssC"Sau,/r\[_^Vdk&Kuu<QT(Kl>R/0'IcF6#\:h\tK0`tH4?'Ab
%AY)TJI#HuZc[/N/=k*F!DeGLIdg?T-MBj1a1Rl#Ee"\$U*;YgqfTUl(ileUH0off-9[E.E:]Ae_nWat9cf+63i95=>B(ioMnqMU)
%kWCrP!h8?&i0i-Ai-23sU[.RY)3cC4n:Z9gF[9#FFcfSu9R1orTkH15FR$2gJ^+pmLU@kSb((2t*j?8<IBa%L\rCRGEQfKAQlU(W
%kd&=P[*C,a--FC"W9Xnu8GcNiohA46'pQuDau5s0S?LNY/cL"0^,GJKVU9m5C-EnYCt0Oo#OPM3C1;gj6]XfCMtnFII@1;&i_4&q
%epY)8E1SbL3,"/h2f"sNkO]PdXrn62cU,>cYjjMHg8fIlEdF:.p54Z7)J]P@\CPEIl]AYll??V#j]sG6;K8"tAtA:%#phBAO'+*D
%nA=/p*34==>Z,(L91Qj:cSYO$552EE"E$A2Q_PO&*8`DM$:#SUL-/-Wf!`,Jb!c-e3<?=P:TAsn(McMj7D!Xq!NfPROM@mg]W0t@
%pg@F^j/81:dZED0FICj6^bULAeZ>5G,3kgRiA'Zi?%\[o>$]Ed^XpM`h&f/_WMWBa"fqiu@W8[eCl7I/=:u5VR]NT4XB-NY;_%nE
%g,=^_+.)&TY5A71\Q[cJ_>)s*p&*'`>Y5Ej(:(4[42-LBWBb!2e.N\VF]rP+V&\ipX23"D0;RTN@aJfCfo`s,R(usK957]u@ng8u
%>Gj3Y@s$k45j2Z$+bgF)likFKXa[mVC@&6AbU&r<kH]QS[)@ST`XS_'cNj5GJ=+8R">l<WS9EWSYDWdn\.177(HSUDYUR:b<U"iD
%",C2L@:,d%ecg/p)mC$pTUVfbYHF,?<uZ2r5Y+]e#9$e^3h+c]#dEJP8SDhJ&VWa-hqnH%OA,KKW\sOo#Q#7<5sGTGi-AsI>?H=e
%C;N<n/\s997t3?_CAWc/S/Whp#m%Ym*)AJ3&r/@t$YB\1q<kr7<Oi`:A^B&QC*bgop,NE[R:q68h8A;^_gQh0>Y=T>fVZY*5iNOR
%0/4k9HJ1DIg.gRi4KW<8/ffX6%'?(f3FS$_%4If'LT!7gEo!?\3H*3E_07P;b6SH.o!tW5eWOT.+If"lPt%Z;0\!6.2^mYQP@l]o
%r3+1`Tc\Mp>/>.*>H'_`D/!Xe=s5>M$hI5')$uXEG2Cg7_m%SoTtZ;V&r,rePmQb?\1GH9^MXK0ai'Eb5jN+?Pd"\HF;lXS[u8!&
%o=*m\3[5k[Ut6!NR5,D'[h7lDK&1i,j[74ao\Bm0EW`\sLigq$:bSLI%K,!qa;b<gM>"Jo*!c:De1;l(C\&\JE0%cJBmM74[C'qH
%'NVRg\6UqF!3_aI2Q*^=(*['Q,rrTr;+;+sN2+0\3YhqLPT_uZ4bD8SZ#(ZkZfGO>(r7RG);12^BFJ]ADO5h!c>3Ysq-(eK'o7&1
%]<7t;X3IA0+$!HWm""e?Ek@_tOcm"lJt;-BGc%ak6;sSc,YncsF7_S=X9s-sXQolt=9%QGboes+%-FAF_#XYRk9VAm9Gc)L>)V?[
%d,^o?#(A5h)*KUN17D/Zm4i!kn7dKoVhZAm4,"_p57oqf.pBhVTnGG`aH*0p%#n"hLD5q!hJ00k4I]%"VMS.6,5o/,hG<do-]mH0
%_`l5Mp!ctpa*cR`Cme7b1dq$VT,k&=M6`.dP/&+^m-q?6WhkuR!`p%MlIjKslgb)COTV"uaT@q",*`,a9:M+k%XJ5::Pg'pWW$'R
%GWPY`?T2hU9lp\.d-&397KXKS[iNI,htUV-m:o>$2joLQ9g_5/d'l_:\/NcOIr-i5m^Gfb*1Lq-)OLC2eV/-aM0CYj=C;f9L4Qe7
%eMbhV,B*dsm-j\&6j_rm%Ru.[L=e=^9GT"o27:ED,10C(0U7i!Y\K;4'XCL!1MX(VH,LH0E2B^tX^l6RN#J^3OFmh"]:>X9.UT.-
%e/=1K0?*0*U@3=gA@n[s<h*_[SIK=Pa`$6CN9X@bh3Wp'04UPFYWje[hfK4>N?Y4);_64Ce8/BNBlaMt&;T%H8InbCoR-@8M%Dp!
%m[(>]6lb+!4GTSJOV8r?/f<Ak=h\YRP("-1h#\A%071W0;Qi=&'g#!\R0\*oA88LAY#_G:RhQ&gI%%8hd:a;8VZs+@p=H?KMZQ^q
%ebL"O=\Kng#DcT/@YM@?Vmprl\]3r5IP/.lD0u"DD33#"f#61OGGL;u--5ptr$ec1Qt0-JL4t*-FSM%)oG(NsCr*o(EE4m9[W5pN
%8i1:FmDqfYIYCG,NRCJoXrdK,ZBc[nd.d$0(m?$g\Yhgaqk1R\-DAaQ.l%5Z-dS1bOF(4YW1'VPGjpk`DH:%\iG<@1:J'rkRK5&*
%(dZRV$KL0-rIV:5_Q_Peg]U/oW=mJfZh!aK*h-uX,Ye#fUef%%NL*kk]9@;=>mb*(bTQmj7=0SO&%FI'jBu^s=UZX*1;!BDBB`q:
%cD":gh<gBnOD4EA_:M9MI,@-4,QZ=Bf8Al^9T)+4eDFZ^D>0<CPTCsX@Zp2OQ4G]ZUik<^*9C)-CT0[#Y6X(35+>@+OFU1d281Z_
%dCD'\<in<s!!G9<f2;%fN!RV!NMi^>Y*2KN>\'YOp-,A3"/f*_qC;h#^d5[s4i[1hJ.u2:g$gt]TQPOA&$#08X+KWI.lV5R9r!93
%gRW4C\ctAi&kY&CVQ'bQDr`Lb5nY/)1Nji-g>0sJb(p9K\tU^bDWBE[ajUi4d(>Sd"@nIH)U[T+&*UKiDfb+BVK$B&q[6%pF_=QR
%/YcF(dMR'm5H'+cV-GcL,dL*P:hcHnC!]Ib(aPT6=I5o/iSIZ]Z]d^jMqPAO=i_N%M'Htsn``HR,mPQ99uGKrg8=(;inPHJ$`%t(
%E4,u+PC>+e$9<-2FUL%51HU4#,IRU99*<:.GotrKWWORdI"GjH=0@XHFn:EL=Ysu)[0J]hdr_LOC=A(<qcUHk[WKYN4B&:dZ9R)R
%.IRtkfX;F6nG@H2+3[\jLkfqYs0`,b8CM(Ek:6@c$s_J:8NKs@'VV"Y3KB1lH4ttUD7q8knY_ZBs.dt"a-U([cV[a&O6S?r?.'c1
%bh^F=;l6[*<Y@W56-Lj91Hk6dk@F^I,\ke4Z<S[B12kbQD,/('!VWqnJJ#-f<*(,**<>WZO_qVg0gPJ]Q?PS$WS:Ob%dm`Y4)h%A
%CfVA(Cl?P&cT@9A;:CCk*Pdc"6\NFUfsdPL)J3=_g/cpVWk$TM2G/m]04hmU69AtO"_c$O.:r0NIoDGd+'5/qMQ*B\&$l,SVU7+q
%EBkVXUUVNMd&8WAUI?>Mf/dEd\$O]aiLt]l<l_+7FNjXQUWs'57La^14oq'c9>JJNKt&i^>MSPBPic,*SrhD\J7W9lfFo>'H7)!K
%*lac?K[)<A-;s)tZ8"k\g*-Q)cS6?KgUlp:hBO2%Z;WSVZ(.Wl'4nX/%W>q25_1qhX>'Fb'@A76HMhZH$lFE"=a(i(ZdHH[`.ijm
%5hB?r4E1/\p;hT',^?U9^.fjI&%;jq!I*_7'beK$>(1]U?dQ/rL$41>CannLC2.mR2*k4!M#:%f(59Aj\".L?AZke"R]!r$SqD2B
%W,3&*n(]O-ja#k3NS1d_F)u;;)7QVYYioi;(,GEO?V`30W2\*9BiSMS-bOdL)XBEcf(P::l1'lD_6+NVrn4&eXCuue&%jD2h4(g*
%G1@8LATf==gXHj)$F?>qadPHLhQK_'eJ0=<jgOF#)4?+'ZUH]gb1-b\&t^Xn8GYZ!pOl#Uqn6+O$8gN8;uJ%nmOI'sS&D^%7FqD8
%0e.\*QDDs9BUkIHO2'3S7>t(:m*>+?`[&)o0*F@%.+nUmZ/tE?<A'A7MVOD0,MT`-5#FhfNiO55Pu*Sl2_RilSWle80F]]42j\tD
%D.;r-oSPI029mmQU9/aLR<Y*:_m-utqZXNKeW7>6*mcVbfmIU$nN)mgXQOtpI?F3V,('QB41kjK\cb(`\T)S_F2<UHl22_&H6f%&
%a]enb[;-CL7f!h;n]+Z";n!B#4AEN0?eB7m'%$OD?ac>\nLljkP(^%Zl&iAaJ!;1sl4jH5eLqH@k"s=hf^4.An8ccU"`Q8hQpGdg
%3@A]_LaTg*bFZ&reCH"TPN^E<'lGt"75cXkMo_J:!l:V*f,;m;i'B$spr8AZ+kjfu.F<FqLY3/rE)Up89cJl"'(J@4<lJ4#GXb<.
%.ZVFKK:d2nX09>X&5e<pXT;Y>'e(1oR-,6-97R!2L"nCM%X;Q*VPa@ZOtf0%;B,l]kV`@p>=Leml)`b*bB?Oc4qAKI^cb@?ggUlB
%MTehg$_A&(2-n'="YACBX4]iIAm_,A8>30Q0SBpN*%`kd1WcB51jQ%")Zi$=2LX6B/-2J<MN4h4%u]uLIc\??X#i]JbQ%,1p]((#
%s80S,h4K/ra+*n<mgFXEDh%N5^].[@pq+<:5C`^R5Po)CrHH$RLYmUYh&lV]DZ0J4li*f#J,RFFs4uT4m2piXmI1%8^\tpX_OI,U
%r:uubli64!pp5JDrrAeh45K~>
%AI9_PrivateDataEnd
